package aws.carddemo;

import com.tmax.openframe.online.service.api.AbendHandler;
import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.Comen01cInputDto;
import aws.carddemo.mapper.CoactvwcMapperInterface.*;
import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.CoactvwcOutputDto;
import com.tmax.openframe.online.service.exception.ConditionException;
import aws.carddemo.dto.CoactvwcInputDto;
import aws.carddemo.dto.AwsM2CarddemoCardxrefVsamKsdsDto;
import com.tmax.openframe.online.service.api.ReadPointManager;
import com.tmax.openframe.online.service.api.RecordKeyAccessor;
import aws.carddemo.dto.AwsM2CarddemoAcctdataVsamKsdsDto;
import aws.carddemo.dto.AwsM2CarddemoCustdataVsamKsdsDto;
import com.tmax.openframe.online.service.exception.OnlineException;
import com.tmax.openframe.online.service.exception.AbendException;
import static aws.carddemo.variable.group.CoactvwcCarddemoCommarea.CoactvwcCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.CoactvwcCcWorkAreas.CoactvwcCcWorkArea.*;
import static aws.carddemo.variable.group.CoactvwcWsMiscStorage.*;
import static aws.carddemo.variable.group.CoactvwcWsMiscStorage.CoactvwcWsFileReadFlags.*;
import aws.carddemo.variable.CoactvwcVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:46 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COACTVWC.cbl</li>
 * <li>Variable container class: {@link CoactvwcVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Coactvwc {
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    private final AbendHandler abendHandler;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> _0000Main = this::_0000Main;
    Consumer<OpenFrameContext> commonReturn = this::commonReturn;
    Consumer<OpenFrameContext> _0000MainExit = this::_0000MainExit;
    Consumer<OpenFrameContext> _1000SendMap = this::_1000SendMap;
    Consumer<OpenFrameContext> _1000SendMapExit = this::_1000SendMapExit;
    Consumer<OpenFrameContext> _1100ScreenInit = this::_1100ScreenInit;
    Consumer<OpenFrameContext> _1100ScreenInitExit = this::_1100ScreenInitExit;
    Consumer<OpenFrameContext> _1200SetupScreenVars = this::_1200SetupScreenVars;
    Consumer<OpenFrameContext> _1200SetupScreenVarsExit = this::_1200SetupScreenVarsExit;
    Consumer<OpenFrameContext> _1300SetupScreenAttrs = this::_1300SetupScreenAttrs;
    Consumer<OpenFrameContext> _1300SetupScreenAttrsExit = this::_1300SetupScreenAttrsExit;
    Consumer<OpenFrameContext> _1400SendScreen = this::_1400SendScreen;
    Consumer<OpenFrameContext> _1400SendScreenExit = this::_1400SendScreenExit;
    Consumer<OpenFrameContext> _2000ProcessInputs = this::_2000ProcessInputs;
    Consumer<OpenFrameContext> _2000ProcessInputsExit = this::_2000ProcessInputsExit;
    Consumer<OpenFrameContext> _2100ReceiveMap = this::_2100ReceiveMap;
    Consumer<OpenFrameContext> _2100ReceiveMapExit = this::_2100ReceiveMapExit;
    Consumer<OpenFrameContext> _2200EditMapInputs = this::_2200EditMapInputs;
    Consumer<OpenFrameContext> _2200EditMapInputsExit = this::_2200EditMapInputsExit;
    Consumer<OpenFrameContext> _2210EditAccount = this::_2210EditAccount;
    Consumer<OpenFrameContext> _2210EditAccountExit = this::_2210EditAccountExit;
    Consumer<OpenFrameContext> _9000ReadAcct = this::_9000ReadAcct;
    Consumer<OpenFrameContext> _9000ReadAcctExit = this::_9000ReadAcctExit;
    Consumer<OpenFrameContext> _9200GetcardxrefByacct = this::_9200GetcardxrefByacct;
    Consumer<OpenFrameContext> _9200GetcardxrefByacctExit = this::_9200GetcardxrefByacctExit;
    Consumer<OpenFrameContext> _9300GetacctdataByacct = this::_9300GetacctdataByacct;
    Consumer<OpenFrameContext> _9300GetacctdataByacctExit = this::_9300GetacctdataByacctExit;
    Consumer<OpenFrameContext> _9400GetcustdataBycust = this::_9400GetcustdataBycust;
    Consumer<OpenFrameContext> _9400GetcustdataBycustExit = this::_9400GetcustdataBycustExit;
    Consumer<OpenFrameContext> sendPlainText = this::sendPlainText;
    Consumer<OpenFrameContext> sendPlainTextExit = this::sendPlainTextExit;
    Consumer<OpenFrameContext> sendLongText = this::sendLongText;
    Consumer<OpenFrameContext> sendLongTextExit = this::sendLongTextExit;
    Consumer<OpenFrameContext> yyyyStorePfkey = this::yyyyStorePfkey;
    Consumer<OpenFrameContext> yyyyStorePfkeyExit = this::yyyyStorePfkeyExit;
    Consumer<OpenFrameContext> abendRoutine = this::abendRoutine;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(_0000Main);
        methodList.add(commonReturn);
        methodList.add(_0000MainExit);
        methodList.add(_1000SendMap);
        methodList.add(_1000SendMapExit);
        methodList.add(_1100ScreenInit);
        methodList.add(_1100ScreenInitExit);
        methodList.add(_1200SetupScreenVars);
        methodList.add(_1200SetupScreenVarsExit);
        methodList.add(_1300SetupScreenAttrs);
        methodList.add(_1300SetupScreenAttrsExit);
        methodList.add(_1400SendScreen);
        methodList.add(_1400SendScreenExit);
        methodList.add(_2000ProcessInputs);
        methodList.add(_2000ProcessInputsExit);
        methodList.add(_2100ReceiveMap);
        methodList.add(_2100ReceiveMapExit);
        methodList.add(_2200EditMapInputs);
        methodList.add(_2200EditMapInputsExit);
        methodList.add(_2210EditAccount);
        methodList.add(_2210EditAccountExit);
        methodList.add(_9000ReadAcct);
        methodList.add(_9000ReadAcctExit);
        methodList.add(_9200GetcardxrefByacct);
        methodList.add(_9200GetcardxrefByacctExit);
        methodList.add(_9300GetacctdataByacct);
        methodList.add(_9300GetacctdataByacctExit);
        methodList.add(_9400GetcustdataBycust);
        methodList.add(_9400GetcustdataBycustExit);
        methodList.add(sendPlainText);
        methodList.add(sendPlainTextExit);
        methodList.add(sendLongText);
        methodList.add(sendLongTextExit);
        methodList.add(yyyyStorePfkey);
        methodList.add(yyyyStorePfkeyExit);
        methodList.add(abendRoutine);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Coactvwc") == null) {
            CoactvwcVariableContainer container = new CoactvwcVariableContainer();
            context.setProgramVariableContainer("Coactvwc", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ***************************************************************** 
    // * Program:     COACTVWC.CBL                                     * 
    // * Layer:       Business logic                                   * 
    // * Function:    Accept and process Account View request          * 
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             

    void _0000Main(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #263] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND                                       
                                 LABEL(ABEND-ROUTINE)                               
                       END-EXEC
         */
        abendHandler.setLabel(abendRoutine);
        // [T-Up#INFO][COACTVWC.cbl, LINE #267] INITIALIZE statement
        container.getCcWorkAreas().setCcWorkArea(
                CoactvwcCcWorkAreas.CoactvwcCcWorkArea
                        .createDefaultValueInstance());
        container.setWsMiscStorage(CoactvwcWsMiscStorage
                .createDefaultValueInstance());
        container.setWsCommarea(StringUtils.repeat(' ', 2000));
        // ***************************************************************** 
        // * Store our context                                               
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #273] MOVE statement
        container.getWsMiscStorage().getWsCicsProcessngVars()
                .setWsTranid(container.getWsLiterals().getLitThistranid());
        // ***************************************************************** 
        // * Ensure error message is cleared                               * 
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #277] SET statement
        container.getWsMiscStorage().setWsReturnMsg(WS_RETURN_MSG_OFF);
        // ***************************************************************** 
        // * Store passed data if  any                *                      
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #281] IF statement
        if (task.hasCommarea() == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0
                && !(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #284] INITIALIZE statement
            container.setCarddemoCommarea(CoactvwcCarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CoactvwcWsThisProgcommarea
                    .createDefaultValueInstance());
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #287] MOVE statement
            container.getCarddemoCommarea().set(
                    container.getDfhcommarea().get().substring(0, 160));
            // [T-Up#INFO][COACTVWC.cbl, LINE #289] MOVE statement
            container.getWsThisProgcommarea().set(
                    container.getDfhcommarea().get().substring(160, 172));
        }
        // ***************************************************************** 
        // * Remap PFkeys as needed.                                         
        // * Store the Mapped PF Key                                         
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #298] PERFORM statement
        controlManager.run(context, yyyyStorePfkey, yyyyStorePfkeyExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // ***************************************************************** 
        // * Check the AID to see if its valid at this point               * 
        // * F3 - Exit                                                       
        // * Enter show screen again                                         
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #305] SET statement
        container.getWsMiscStorage().setWsPfkFlag(PFK_INVALID);
        // [T-Up#INFO][COACTVWC.cbl, LINE #306] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_ENTER) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK03) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #308] SET statement
            container.getWsMiscStorage().setWsPfkFlag(PFK_VALID);
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #311] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsPfkFlag(),
                PFK_INVALID) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #312] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        }
        // ***************************************************************** 
        // * Decide what to do based on inputs received                      
        // ***************************************************************** 
        // ***************************************************************** 
        // ***************************************************************** 
        // * Decide what to do based on inputs received                      
        // ***************************************************************** 
        // [T-Up#INFO][COACTVWC.cbl, LINE #322] EVALUATE statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK03) == 0) {
            // ******************************************************************
            // *            XCTL TO CALLING PROGRAM OR MAIN MENU                 
            // ******************************************************************
            // [T-Up#INFO][COACTVWC.cbl, LINE #327] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #329] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getWsLiterals().getLitMenutranid());
            } else {
                // [T-Up#INFO][COACTVWC.cbl, LINE #331] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromTranid());
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #333] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromProgram(),
                    StringUtils.repeat((char) 0x00, 8)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #335] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getWsLiterals().getLitMenupgm());
            } else {
                // [T-Up#INFO][COACTVWC.cbl, LINE #337] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromProgram());
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #340] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsLiterals().getLitThistranid());
            // [T-Up#INFO][COACTVWC.cbl, LINE #341] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COACTVWC.cbl, LINE #343] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COACTVWC.cbl, LINE #344] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COACTVWC.cbl, LINE #345] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsLiterals().getLitThismapset());
            // [T-Up#INFO][COACTVWC.cbl, LINE #346] MOVE statement
            container.getCarddemoCommarea().getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsLiterals().getLitThismap());
            // [T-Up#INFO][COACTVWC.cbl, LINE #348] EXEC_CICS statement
            /*
                                   EXEC CICS XCTL                                       
                                             PROGRAM ('COMEN01C')                       
                                             COMMAREA(CARDDEMO-COMMAREA)                
                                   END-EXEC
             */
            Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
            comen01cInputDto
                    .setDfhcommarea(CoactvwcCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CM00", comen01cInputDto);
            context.setReturnFlag(true);
        } else if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // ******************************************************************
            // *            COMING FROM SOME OTHER CONTEXT                       
            // *            SELECTION CRITERIA TO BE GATHERED                    
            // ******************************************************************
            // [T-Up#INFO][COACTVWC.cbl, LINE #357] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #359] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #361] PERFORM statement
            controlManager.run(context, _2000ProcessInputs,
                    _2000ProcessInputsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #363] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsInputFlag(), INPUT_ERROR) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #364] PERFORM statement
                controlManager.run(context, _1000SendMap, _1000SendMapExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COACTVWC.cbl, LINE #366] GOTO statement
                context.setGotoTarget(commonReturn);
                return;
            } else {
                // [T-Up#INFO][COACTVWC.cbl, LINE #368] PERFORM statement
                controlManager.run(context, _9000ReadAcct, _9000ReadAcctExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COACTVWC.cbl, LINE #370] PERFORM statement
                controlManager.run(context, _1000SendMap, _1000SendMapExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COACTVWC.cbl, LINE #372] GOTO statement
                context.setGotoTarget(commonReturn);
                return;
            }
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #375] MOVE statement
            container.getAbendData().setAbendCulprit(
                    container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COACTVWC.cbl, LINE #376] MOVE statement
            container.getAbendData().setAbendCode("0001");
            // [T-Up#INFO][COACTVWC.cbl, LINE #377] MOVE statement
            container.getAbendData()
                    .setAbendReason(StringUtils.repeat(' ', 50));
            // [T-Up#INFO][COACTVWC.cbl, LINE #378] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    "UNEXPECTED DATA SCENARIO");
            // [T-Up#INFO][COACTVWC.cbl, LINE #380] PERFORM statement
            controlManager.run(context, sendPlainText, sendPlainTextExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // * If we had an error setup error message that slipped through     
        // * Display and return                                              
        // [T-Up#INFO][COACTVWC.cbl, LINE #386] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #387] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardErrorMsg(
                            container.getWsMiscStorage().getWsReturnMsg());
            // [T-Up#INFO][COACTVWC.cbl, LINE #388] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #390] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        }
    }

    void commonReturn(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #394] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTVWC.cbl, LINE #396] MOVE statement
        container.setWsCommarea(container.getCarddemoCommarea().get());
        // [T-Up#INFO][COACTVWC.cbl, LINE #397] MOVE statement
        container.setWsCommarea(StringUtils.overlay(container.getWsCommarea(),
                container.getWsThisProgcommarea().get(), 160, 172));
        // [T-Up#INFO][COACTVWC.cbl, LINE #401] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                            TRANSID (LIT-THISTRANID)                                
                            COMMAREA (WS-COMMAREA)                                  
                            LENGTH(LENGTH OF WS-COMMAREA)                           
                       END-EXEC
         */
        TaskDto taskDto = TaskDto.builder()
                .destination(container.getWsLiterals().getLitThistranid())
                .data(Data.session(container.getWsCommarea())).build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    void _0000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #408] EXIT statement
    }

    void _1000SendMap(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #413] PERFORM statement
        controlManager.run(context, _1100ScreenInit, _1100ScreenInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #415] PERFORM statement
        controlManager.run(context, _1200SetupScreenVars,
                _1200SetupScreenVarsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #417] PERFORM statement
        controlManager.run(context, _1300SetupScreenAttrs,
                _1300SetupScreenAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #419] PERFORM statement
        controlManager.run(context, _1400SendScreen, _1400SendScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    void _1000SendMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #424] EXIT statement
    }

    void _1100ScreenInit(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #428] MOVE statement
        container.setCactvwao(CoactvwcCactvwai.createDefaultValueInstance()
                .get());
        // [T-Up#INFO][COACTVWC.cbl, LINE #430] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COACTVWC.cbl, LINE #432] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COACTVWC.cbl, LINE #433] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COACTVWC.cbl, LINE #434] MOVE statement
        container.setTrnnameo(container.getWsLiterals().getLitThistranid());
        // [T-Up#INFO][COACTVWC.cbl, LINE #435] MOVE statement
        container.setPgmnameo(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTVWC.cbl, LINE #437] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COACTVWC.cbl, LINE #439] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COACTVWC.cbl, LINE #440] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COACTVWC.cbl, LINE #441] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COACTVWC.cbl, LINE #443] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COACTVWC.cbl, LINE #445] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COACTVWC.cbl, LINE #446] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COACTVWC.cbl, LINE #447] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COACTVWC.cbl, LINE #449] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    void _1100ScreenInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #454] EXIT statement
    }

    void _1200SetupScreenVars(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // *    INITIALIZE SEARCH CRITERIA                                   
        // [T-Up#INFO][COACTVWC.cbl, LINE #458] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #459] SET statement
            container.getWsMiscStorage().setWsInfoMsg(WS_PROMPT_FOR_INPUT);
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #461] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #462] MOVE statement
                container.setAcctsido(StringUtils.repeat((char) 0x00, 11));
            } else {
                // [T-Up#INFO][COACTVWC.cbl, LINE #464] MOVE statement
                container.setAcctsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId());
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #467] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsFileReadFlags().getWsAccountMasterReadFlag(),
                    FOUND_ACCT_IN_MASTER) == 0
                    || CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsFileReadFlags().getWsCustMasterReadFlag(),
                            FOUND_CUST_IN_MASTER) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #469] MOVE statement
                container.setAcsttuso(container.getAccountRecord()
                        .getAcctActiveStatus());
                // [T-Up#INFO][COACTVWC.cbl, LINE #471] MOVE statement
                container.setAcurbalo(container.getAccountRecord()
                        .getAcctCurrBal().toString());
                // [T-Up#INFO][COACTVWC.cbl, LINE #473] MOVE statement
                container.setAcrdlimo(container.getAccountRecord()
                        .getAcctCreditLimit().toString());
                // [T-Up#INFO][COACTVWC.cbl, LINE #475] MOVE statement
                container.setAcshlimo(container.getAccountRecord()
                        .getAcctCashCreditLimit().toString());
                // [T-Up#INFO][COACTVWC.cbl, LINE #478] MOVE statement
                container.setAcrcycro(container.getAccountRecord()
                        .getAcctCurrCycCredit().toString());
                // [T-Up#INFO][COACTVWC.cbl, LINE #481] MOVE statement
                container.setAcrcydbo(container.getAccountRecord()
                        .getAcctCurrCycDebit().toString());
                // [T-Up#INFO][COACTVWC.cbl, LINE #483] MOVE statement
                container.setAdtopeno(container.getAccountRecord()
                        .getAcctOpenDate());
                // [T-Up#INFO][COACTVWC.cbl, LINE #484] MOVE statement
                container.setAexpdto(container.getAccountRecord()
                        .getAcctExpiraionDate());
                // [T-Up#INFO][COACTVWC.cbl, LINE #485] MOVE statement
                container.setAreisdto(container.getAccountRecord()
                        .getAcctReissueDate());
                // [T-Up#INFO][COACTVWC.cbl, LINE #486] MOVE statement
                container.setAaddgrpo(container.getAccountRecord()
                        .getAcctGroupId());
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #489] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsFileReadFlags().getWsCustMasterReadFlag(),
                    FOUND_CUST_IN_MASTER) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #490] MOVE statement
                container.setAcstnumo(StringUtils.leftPad(String.valueOf(Math
                        .abs(container.getCustomerRecord().getCustId())), 9,
                        '0'));
                // *         MOVE CUST-SSN             TO ACSTSSNO OF CACTVWAO       
                // [T-Up#INFO][COACTVWC.cbl, LINE #492] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container.getAcstssno());
                tempStringBuilder1
                        .append(DataConverter.convZonedLongToString(
                                container.getCustomerRecord().getCustSsn(), 9)
                                .substring(0, 3))
                        .append("-")
                        .append(DataConverter.convZonedLongToString(
                                container.getCustomerRecord().getCustSsn(), 9)
                                .substring(3, 5))
                        .append("-")
                        .append(DataConverter.convZonedLongToString(
                                container.getCustomerRecord().getCustSsn(), 9)
                                .substring(5, 9));
                if (tempStringBuilder1.length() <= 12) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.setAcstssno(tempStringBuilder2.toString());
                }
                // [T-Up#INFO][COACTVWC.cbl, LINE #501] MOVE statement
                container.setAcstfcoo(StringUtils.leftPad(String.valueOf(Math
                        .abs(container.getCustomerRecord()
                                .getCustFicoCreditScore())), 3, '0'));
                // [T-Up#INFO][COACTVWC.cbl, LINE #503] MOVE statement
                container.setAcstdobo(container.getCustomerRecord()
                        .getCustDobYyyyMmDd());
                // [T-Up#INFO][COACTVWC.cbl, LINE #504] MOVE statement
                container.setAcsfnamo(container.getCustomerRecord()
                        .getCustFirstName());
                // [T-Up#INFO][COACTVWC.cbl, LINE #505] MOVE statement
                container.setAcsmnamo(container.getCustomerRecord()
                        .getCustMiddleName());
                // [T-Up#INFO][COACTVWC.cbl, LINE #506] MOVE statement
                container.setAcslnamo(container.getCustomerRecord()
                        .getCustLastName());
                // [T-Up#INFO][COACTVWC.cbl, LINE #507] MOVE statement
                container.setAcsadl1o(container.getCustomerRecord()
                        .getCustAddrLine1());
                // [T-Up#INFO][COACTVWC.cbl, LINE #508] MOVE statement
                container.setAcsadl2o(container.getCustomerRecord()
                        .getCustAddrLine2());
                // [T-Up#INFO][COACTVWC.cbl, LINE #509] MOVE statement
                container.setAcscityo(container.getCustomerRecord()
                        .getCustAddrLine3());
                // [T-Up#INFO][COACTVWC.cbl, LINE #510] MOVE statement
                container.setAcsstteo(container.getCustomerRecord()
                        .getCustAddrStateCd());
                // [T-Up#INFO][COACTVWC.cbl, LINE #511] MOVE statement
                container.setAcszipco(container.getCustomerRecord()
                        .getCustAddrZip());
                // [T-Up#INFO][COACTVWC.cbl, LINE #512] MOVE statement
                container.setAcsctryo(container.getCustomerRecord()
                        .getCustAddrCountryCd());
                // [T-Up#INFO][COACTVWC.cbl, LINE #513] MOVE statement
                container.setAcsphn1o(container.getCustomerRecord()
                        .getCustPhoneNum1());
                // [T-Up#INFO][COACTVWC.cbl, LINE #514] MOVE statement
                container.setAcsphn2o(container.getCustomerRecord()
                        .getCustPhoneNum2());
                // [T-Up#INFO][COACTVWC.cbl, LINE #515] MOVE statement
                container.setAcsgovto(container.getCustomerRecord()
                        .getCustGovtIssuedId());
                // [T-Up#INFO][COACTVWC.cbl, LINE #516] MOVE statement
                container.setAcseftco(container.getCustomerRecord()
                        .getCustEftAccountId());
                // [T-Up#INFO][COACTVWC.cbl, LINE #517] MOVE statement
                container.setAcspflgo(container.getCustomerRecord()
                        .getCustPriCardHolderInd());
            }
        }
        // *    SETUP MESSAGE                                                
        // [T-Up#INFO][COACTVWC.cbl, LINE #524] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #525] SET statement
            container.getWsMiscStorage().setWsInfoMsg(WS_PROMPT_FOR_INPUT);
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #528] MOVE statement
        container.setErrmsgo(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTVWC.cbl, LINE #530] MOVE statement
        container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
    }

    void _1200SetupScreenVarsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #534] EXIT statement
    }

    void _1300SetupScreenAttrs(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // *    PROTECT OR UNPROTECT BASED ON CONTEXT                        
        // [T-Up#INFO][COACTVWC.cbl, LINE #539] MOVE statement
        container.getCactvwai().setAcctsida(
                container.getDfhbmsca().getDfhbmfse());
        // *    POSITION CURSOR                                              
        // [T-Up#INFO][COACTVWC.cbl, LINE #542] EVALUATE statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #545] MOVE statement
            container.getCactvwai().setAcctsidl(-1);
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #547] MOVE statement
            container.getCactvwai().setAcctsidl(-1);
        }
        // *    SETUP COLOR                                                  
        // [T-Up#INFO][COACTVWC.cbl, LINE #551] MOVE statement
        container.setAcctsidc(container.getDfhbmsca().getDfhdfcol());
        // [T-Up#INFO][COACTVWC.cbl, LINE #553] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #554] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #557] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #559] MOVE statement
            container.setAcctsido("*");
            // [T-Up#INFO][COACTVWC.cbl, LINE #560] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #563] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #564] MOVE statement
            container.setInfomsgc(container.getDfhbmsca().getDfhbmdar());
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #566] MOVE statement
            container.setInfomsgc(container.getDfhbmsca().getDfhneutr());
        }
    }

    void _1300SetupScreenAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #571] EXIT statement
    }

    void _1400SendScreen(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #575] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COACTVWC.cbl, LINE #576] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
        // [T-Up#INFO][COACTVWC.cbl, LINE #577] SET statement
        container.getCarddemoCommarea().getCdemoGeneralInfo()
                .setCdemoPgmContext(CDEMO_PGM_REENTER);
        // [T-Up#INFO][COACTVWC.cbl, LINE #579] EXEC_CICS statement
        /*
                       EXEC CICS SEND MAP('CACTVWA')                                
                                      MAPSET('COACTVW')                             
                                      FROM(CACTVWAO)                                
                                      CURSOR                                        
                                      ERASE                                         
                                      FREEKB                                        
                                      RESP(WS-RESP-CD)                              
                       END-EXEC
         */
        try {
            ((CoactvwcOutputDto) task.getOutputDto())
                    .setPageName("COACTVW_CACTVWA");
            ((CoactvwcOutputDto) task.getOutputDto()).setCactvwao(container
                    .getCactvwao());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
    }

    void _1400SendScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #589] EXIT statement
    }

    void _2000ProcessInputs(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #593] PERFORM statement
        controlManager.run(context, _2100ReceiveMap, _2100ReceiveMapExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #595] PERFORM statement
        controlManager.run(context, _2200EditMapInputs, _2200EditMapInputsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #597] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTVWC.cbl, LINE #598] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextProg(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTVWC.cbl, LINE #599] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COACTVWC.cbl, LINE #600] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
    }

    void _2000ProcessInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #604] EXIT statement
    }

    void _2100ReceiveMap(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #607] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE MAP('CACTVWA')                             
                                 MAPSET('COACTVW')                                  
                                 INTO(CACTVWAI)                                     
                                 RESP(WS-RESP-CD)                                   
                                 RESP2(WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            container.setCactvwai(((CoactvwcInputDto) task.getInputDto())
                    .getCactvwai());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
    }

    void _2100ReceiveMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #616] EXIT statement
    }

    void _2200EditMapInputs(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #620] SET statement
        container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
        // [T-Up#INFO][COACTVWC.cbl, LINE #621] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_ISVALID);
        // *    REPLACE * WITH LOW-VALUES                                    
        // [T-Up#INFO][COACTVWC.cbl, LINE #624] IF statement
        if (CobStringUtils.compare(PictureFormatter.intFormatWithoutSign(
                container.getCactvwai().getAcctsidi(), "00000000000"), "*") == 0
                || CobStringUtils.compare(PictureFormatter
                        .intFormatWithoutSign(container.getCactvwai()
                                .getAcctsidi(), "00000000000"), StringUtils
                        .repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #626] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(StringUtils.repeat((char) 0x00, 11));
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #628] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcAcctId(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getCactvwai().getAcctsidi())), 11,
                                    '0'));
        }
        // *    INDIVIDUAL FIELD EDITS                                       
        // [T-Up#INFO][COACTVWC.cbl, LINE #632] PERFORM statement
        controlManager.run(context, _2210EditAccount, _2210EditAccountExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *    CROSS FIELD EDITS                                            
        // [T-Up#INFO][COACTVWC.cbl, LINE #636] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #637] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    NO_SEARCH_CRITERIA_RECEIVED);
        }
    }

    void _2200EditMapInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #642] EXIT statement
    }

    void _2210EditAccount(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #646] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COACTVWC.cbl, LINE #649] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId(), StringUtils.repeat((char) 0x00, 11)) == 0
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId(),
                        StringUtils.repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #651] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #652] SET statement
            container.getWsMiscStorage()
                    .setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #653] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #654] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_ACCT);
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #656] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COACTVWC.cbl, LINE #657] GOTO statement
            context.setGotoTarget(_2210EditAccountExit);
            return;
        }
        // *                                                                 
        // *    Not numeric                                                  
        // *    Not 11 characters                                            
        // [T-Up#INFO][COACTVWC.cbl, LINE #662] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId())
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId(),
                        StringUtils.repeat('0', 11)) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #664] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #665] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #666] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #667] MOVE statement
                container.getWsMiscStorage().setWsReturnMsg(
                        "Account Filter must  be a non-zero 11 digit number");
            }
            // [T-Up#INFO][COACTVWC.cbl, LINE #671] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COACTVWC.cbl, LINE #672] GOTO statement
            context.setGotoTarget(_2210EditAccountExit);
            return;
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #674] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container.getCcWorkAreas()
                                    .getCcWorkArea().getCcAcctId().trim()));
            // [T-Up#INFO][COACTVWC.cbl, LINE #675] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
        }
    }

    void _2210EditAccountExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #680] EXIT statement
    }

    void _9000ReadAcct(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #685] SET statement
        container.getWsMiscStorage().setWsInfoMsg(WS_NO_INFO_MESSAGE_1);
        // [T-Up#INFO][COACTVWC.cbl, LINE #687] MOVE statement
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidAcctId(
                        container.getCarddemoCommarea().getCdemoAccountInfo()
                                .getCdemoAcctId());
        // [T-Up#INFO][COACTVWC.cbl, LINE #689] PERFORM statement
        controlManager.run(context, _9200GetcardxrefByacct,
                _9200GetcardxrefByacctExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // *    IF DID-NOT-FIND-ACCT-IN-CARDXREF                             
        // [T-Up#INFO][COACTVWC.cbl, LINE #693] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #694] GOTO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #697] PERFORM statement
        controlManager.run(context, _9300GetacctdataByacct,
                _9300GetacctdataByacctExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #700] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DID_NOT_FIND_ACCT_IN_ACCTDAT) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #701] GOTO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #704] MOVE statement
        container
                .getWsMiscStorage()
                .getWsXrefRid()
                .setWsCardRidCustId(
                        container.getCarddemoCommarea().getCdemoCustomerInfo()
                                .getCdemoCustId());
        // [T-Up#INFO][COACTVWC.cbl, LINE #706] PERFORM statement
        controlManager.run(context, _9400GetcustdataBycust,
                _9400GetcustdataBycustExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #709] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DID_NOT_FIND_CUST_IN_CUSTDAT) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #710] GOTO statement
            context.setGotoTarget(_9000ReadAcctExit);
            return;
        }
    }

    void _9000ReadAcctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #717] EXIT statement
    }

    void _9200GetcardxrefByacct(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // *    Read the Card file. Access via alternate index ACCTID        
        // *                                                                 
        // [T-Up#INFO][COACTVWC.cbl, LINE #723] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            DATASET   (LIT-CARDXREFNAME-ACCT-PATH)                  
                            RIDFLD    (WS-CARD-RID-ACCT-ID-X)                       
                            KEYLENGTH (LENGTH OF WS-CARD-RID-ACCT-ID-X)             
                            INTO      (CARD-XREF-RECORD)                            
                            LENGTH    (LENGTH OF CARD-XREF-RECORD)                  
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoCardxrefVsamKsdsDto awsM2CarddemoCardxrefVsamKsdsDto = recordKeyAccessor
                    .alternateIndex().read(
                            "awsM2CarddemoCardxrefVsamKsdsDao",
                            "Aix10",
                            new BigDecimal(container.getWsMiscStorage()
                                    .getWsXrefRid().getWsCardRidAcctIdX()));
            container
                    .setCardXrefRecord(CoactvwcCardXrefRecordToAwsM2CarddemoCardxrefVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCardxrefVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #733] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #735] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCustomerInfo()
                    .setCdemoCustId(
                            container.getCardXrefRecord().getXrefCustId());
            // [T-Up#INFO][COACTVWC.cbl, LINE #736] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            Long.parseLong(container.getCardXrefRecord()
                                    .getXrefCardNum().trim()));
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #738] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #739] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #740] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #741] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COACTVWC.cbl, LINE #742] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COACTVWC.cbl, LINE #743] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("Account:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidAcctIdX())
                        .append(" not found in")
                        .append(" Cross ref file.  Resp:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" Reas:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #756] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #757] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #758] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTVWC.cbl, LINE #759] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals()
                                    .getLitCardxrefnameAcctPath());
            // [T-Up#INFO][COACTVWC.cbl, LINE #760] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #761] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #762] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG        
    // *          PERFORM SEND-LONG-TEXT                                 

    void _9200GetcardxrefByacctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #768] EXIT statement
    }

    void _9300GetacctdataByacct(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #772] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            DATASET   (LIT-ACCTFILENAME)                            
                            RIDFLD    (WS-CARD-RID-ACCT-ID-X)                       
                            KEYLENGTH (LENGTH OF WS-CARD-RID-ACCT-ID-X)             
                            INTO      (ACCOUNT-RECORD)                              
                            LENGTH    (LENGTH OF ACCOUNT-RECORD)                    
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoAcctdataVsamKsdsDto awsM2CarddemoAcctdataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoAcctdataVsamKsdsDao", new BigDecimal(
                            container.getWsMiscStorage().getWsXrefRid()
                                    .getWsCardRidAcctIdX()));
            container
                    .setAccountRecord(CoactvwcAccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoAcctdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #782] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #784] SET statement
            container.getWsMiscStorage().getWsFileReadFlags()
                    .setWsAccountMasterReadFlag(FOUND_ACCT_IN_MASTER);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #786] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #787] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // *           SET DID-NOT-FIND-ACCT-IN-ACCTDAT TO TRUE              
            // [T-Up#INFO][COACTVWC.cbl, LINE #789] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #790] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COACTVWC.cbl, LINE #791] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COACTVWC.cbl, LINE #792] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("Account:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidAcctIdX())
                        .append(" not found in")
                        .append(" Acct Master file.Resp:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" Reas:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // *                                                                 
            // [T-Up#INFO][COACTVWC.cbl, LINE #806] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #807] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #808] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTVWC.cbl, LINE #809] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitAcctfilename());
            // [T-Up#INFO][COACTVWC.cbl, LINE #810] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #811] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #812] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG        
    // *           PERFORM SEND-LONG-TEXT                                

    void _9300GetacctdataByacctExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #818] EXIT statement
    }

    void _9400GetcustdataBycust(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #822] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            DATASET   (LIT-CUSTFILENAME)                            
                            RIDFLD    (WS-CARD-RID-CUST-ID-X)                       
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CUST-ID-X)             
                            INTO      (CUSTOMER-RECORD)                             
                            LENGTH    (LENGTH OF CUSTOMER-RECORD)                   
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoCustdataVsamKsdsDto awsM2CarddemoCustdataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoCustdataVsamKsdsDao", new BigDecimal(
                            container.getWsMiscStorage().getWsXrefRid()
                                    .getWsCardRidCustIdX()));
            container
                    .setCustomerRecord(CoactvwcCustomerRecordToAwsM2CarddemoCustdataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCustdataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #832] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #834] SET statement
            container.getWsMiscStorage().getWsFileReadFlags()
                    .setWsCustMasterReadFlag(FOUND_CUST_IN_MASTER);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #836] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #837] SET statement
            container.getWsMiscStorage().setWsEditCustFlag(
                    FLG_CUSTFILTER_NOT_OK);
            // *           SET DID-NOT-FIND-CUST-IN-CUSTDAT TO TRUE              
            // [T-Up#INFO][COACTVWC.cbl, LINE #839] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #840] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #841] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COACTVWC.cbl, LINE #842] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsMiscStorage().getWsReturnMsg());
                tempStringBuilder1
                        .append("CustId:")
                        .append(container.getWsMiscStorage().getWsXrefRid()
                                .getWsCardRidCustIdX())
                        .append(" not found")
                        .append(" in customer master.Resp: ")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp())
                        .append(" REAS:")
                        .append(container.getWsMiscStorage()
                                .getWsFileErrorMessage().getErrorResp2());
                if (tempStringBuilder1.length() <= 75) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsMiscStorage().setWsReturnMsg(
                            tempStringBuilder2.toString());
                }
            }
        } else {
            // [T-Up#INFO][COACTVWC.cbl, LINE #855] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COACTVWC.cbl, LINE #856] SET statement
            container.getWsMiscStorage().setWsEditCustFlag(
                    FLG_CUSTFILTER_NOT_OK);
            // [T-Up#INFO][COACTVWC.cbl, LINE #857] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COACTVWC.cbl, LINE #858] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitCustfilename());
            // [T-Up#INFO][COACTVWC.cbl, LINE #859] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #860] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COACTVWC.cbl, LINE #861] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    // *                                              WS-LONG-MSG        
    // *           PERFORM SEND-LONG-TEXT                                

    void _9400GetcustdataBycustExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #867] EXIT statement
    }

    // ***************************************************************** 
    // * Plain text exit - Dont use in production                      * 
    // ***************************************************************** 

    void sendPlainText(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #874] EXEC_CICS statement
        /*
                       EXEC CICS SEND TEXT                                          
                                 FROM(WS-RETURN-MSG)                                
                                 LENGTH(LENGTH OF WS-RETURN-MSG)                    
                                 ERASE                                              
                                 FREEKB                                             
                       END-EXEC
         */
        task.getOutputDto().getSystemDto()
                .setNotification(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COACTVWC.cbl, LINE #881] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                       END-EXEC
         */
        context.setReturnFlag(true);
    }

    void sendPlainTextExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #885] EXIT statement
    }

    // ***************************************************************** 
    // * Display Long text and exit                                    * 
    // * This is primarily for debugging and should not be used in     * 
    // * regular course                                                * 
    // ***************************************************************** 

    void sendLongText(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #893] EXEC_CICS statement
        /*
                       EXEC CICS SEND TEXT                                          
                                 FROM(WS-LONG-MSG)                                  
                                 LENGTH(LENGTH OF WS-LONG-MSG)                      
                                 ERASE                                              
                                 FREEKB                                             
                       END-EXEC
         */
        task.getOutputDto().getSystemDto()
                .setNotification(container.getWsMiscStorage().getWsLongMsg());
        // [T-Up#INFO][COACTVWC.cbl, LINE #900] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                       END-EXEC
         */
        context.setReturnFlag(true);
    }

    void sendLongTextExit(OpenFrameContext context) {
        // [T-Up#INFO][COACTVWC.cbl, LINE #904] EXIT statement
    }

    // ***************************************************************** 
    // *Common code to store PFKey                                       
    // ******************************************************************
    //       *COPY 'CSSTRPFY'                                                  
    //       *    .                                                            
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSSTRPFY.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************

    void yyyyStorePfkey(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // ***************************************************************** 
        // * Map AID to PFKey in COMMON Area                                 
        // ***************************************************************** 
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #22] EVALUATE statement
        if (CobStringUtils.compare(task.getPressedKey(), container.getDfhaid()
                .getDfhenter()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #24] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhclear()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #26] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_CLEAR);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #28] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA1);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #30] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA2);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #32] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #34] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf3()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #36] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf4()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #38] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf5()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #40] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf6()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #42] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf7()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #44] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf8()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #46] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf9()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #48] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf10()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #50] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf11()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #52] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf12()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #54] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf13()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #56] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf14()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #58] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf15()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #60] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf16()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #62] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf17()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #64] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf18()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #66] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf19()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #68] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf20()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #70] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf21()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #72] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf22()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #74] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf23()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #76] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf24()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #78] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        }
    }

    void yyyyStorePfkeyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #82] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT 
    // *                                                                 

    void abendRoutine(OpenFrameContext context) {
        CoactvwcVariableContainer container = (CoactvwcVariableContainer) context
                .getProgramVariableContainer("Coactvwc");
        // [T-Up#INFO][COACTVWC.cbl, LINE #914] IF statement
        if (CobStringUtils.compare(container.getAbendData().getAbendMsg(),
                StringUtils.repeat((char) 0x00, 72)) == 0) {
            // [T-Up#INFO][COACTVWC.cbl, LINE #915] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED ABEND OCCURRED.");
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #918] MOVE statement
        container.getAbendData().setAbendCulprit(
                container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COACTVWC.cbl, LINE #920] EXEC_CICS statement
        /*
                       EXEC CICS SEND                                               
                                        FROM (ABEND-DATA)                           
                                        LENGTH(LENGTH OF ABEND-DATA)                
                                        NOHANDLE                                    
                       END-EXEC
         */
        try {
            task.getOutputDto().getSystemDto()
                    .setNotification(container.getAbendData());
        } catch (OnlineException e) {
        }
        // [T-Up#INFO][COACTVWC.cbl, LINE #926] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND                                       
                            CANCEL                                                  
                       END-EXEC
         */
        abendHandler.cancel();
        // [T-Up#INFO][COACTVWC.cbl, LINE #930] EXEC_CICS statement
        /*
                       EXEC CICS ABEND                                              
                            ABCODE('9999')                                          
                       END-EXEC
         */
        throw new AbendException();
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT 
    // *                                                                 
}
