package aws.carddemo;

import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import aws.carddemo.mapper.Cosgn00cMapperInterface.*;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.Cosgn00cInputDto;
import com.tmax.openframe.online.service.exception.ConditionException;
import aws.carddemo.dto.Cosgn00cOutputDto;
import aws.carddemo.dto.AwsM2CarddemoUsrsecVsamKsdsDto;
import com.tmax.openframe.online.service.api.ReadPointManager;
import com.tmax.openframe.online.service.api.RecordKeyAccessor;
import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.Coadm01cInputDto;
import aws.carddemo.dto.Comen01cInputDto;
import static aws.carddemo.variable.group.Cosgn00cCarddemoCommarea.Cosgn00cCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.Cosgn00cWsVariables.*;
import aws.carddemo.variable.Cosgn00cVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:45 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COSGN00C.cbl</li>
 * <li>Variable container class: {@link Cosgn00cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cosgn00c {
    private final ProgramControl programControl;
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> sendSignonScreen = this::sendSignonScreen;
    Consumer<OpenFrameContext> sendPlainText = this::sendPlainText;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> readUserSecFile = this::readUserSecFile;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(sendSignonScreen);
        methodList.add(sendPlainText);
        methodList.add(populateHeaderInfo);
        methodList.add(readUserSecFile);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cosgn00c") == null) {
            Cosgn00cVariableContainer container = new Cosgn00cVariableContainer();
            context.setProgramVariableContainer("Cosgn00c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COSGN00C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : CICS COBOL Program                                
    // * Function    : Signon Screen for the CardDemo Application        
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             
    // *----------------------------------------------------------------*
    // *                      PROCEDURE DIVISION                         
    // *----------------------------------------------------------------*

    void mainPara(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #75] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COSGN00C.cbl, LINE #77] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COSGN00C.cbl, LINE #80] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COSGN00C.cbl, LINE #81] MOVE statement
            container.setCosgn0ao(Cosgn00cCosgn0ai.createDefaultValueInstance()
                    .get());
            // [T-Up#INFO][COSGN00C.cbl, LINE #82] MOVE statement
            container.getCosgn0ai().setUseridl(-1);
            // [T-Up#INFO][COSGN00C.cbl, LINE #83] PERFORM statement
            controlManager.run(context, sendSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COSGN00C.cbl, LINE #85] EVALUATE statement
            if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhenter()) == 0) {
                // [T-Up#INFO][COSGN00C.cbl, LINE #87] PERFORM statement
                controlManager.run(context, processEnterKey);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhpf3()) == 0) {
                // [T-Up#INFO][COSGN00C.cbl, LINE #89] MOVE statement
                container.getWsVariables().setWsMessage(
                        container.getCcdaCommonMessages().getCcdaMsgThankYou());
                // [T-Up#INFO][COSGN00C.cbl, LINE #90] PERFORM statement
                controlManager.run(context, sendPlainText);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COSGN00C.cbl, LINE #92] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][COSGN00C.cbl, LINE #93] MOVE statement
                container.getWsVariables().setWsMessage(
                        container.getCcdaCommonMessages()
                                .getCcdaMsgInvalidKey());
                // [T-Up#INFO][COSGN00C.cbl, LINE #94] PERFORM statement
                controlManager.run(context, sendSignonScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][COSGN00C.cbl, LINE #98] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                                 TRANSID (WS-TRANID)                                
                                 COMMAREA (CARDDEMO-COMMAREA)                       
                                 LENGTH(LENGTH OF CARDDEMO-COMMAREA)                
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CC00")
                .data(Data
                        .session(Cosgn00cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY                          
    // *----------------------------------------------------------------*

    void processEnterKey(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #110] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE                                            
                                 MAP('COSGN0A')                                     
                                 MAPSET('COSGN00')                                  
                                 INTO(COSGN0AI)                                     
                                 RESP(WS-RESP-CD)                                   
                                 RESP2(WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            container.setCosgn0ai(((Cosgn00cInputDto) task.getInputDto())
                    .getCosgn0ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COSGN00C.cbl, LINE #118] EVALUATE statement
        if (CobStringUtils.compare(container.getCosgn0ai().getUseridi(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(container.getCosgn0ai().getUseridi(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COSGN00C.cbl, LINE #120] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COSGN00C.cbl, LINE #121] MOVE statement
            container.getWsVariables().setWsMessage("Please enter User ID ...");
            // [T-Up#INFO][COSGN00C.cbl, LINE #122] MOVE statement
            container.getCosgn0ai().setUseridl(-1);
            // [T-Up#INFO][COSGN00C.cbl, LINE #123] PERFORM statement
            controlManager.run(context, sendSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (CobStringUtils.compare(container.getCosgn0ai().getPasswdi(),
                StringUtils.repeat(' ', 8)) == 0
                || CobStringUtils.compare(container.getCosgn0ai().getPasswdi(),
                        StringUtils.repeat((char) 0x00, 8)) == 0) {
            // [T-Up#INFO][COSGN00C.cbl, LINE #125] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COSGN00C.cbl, LINE #126] MOVE statement
            container.getWsVariables()
                    .setWsMessage("Please enter Password ...");
            // [T-Up#INFO][COSGN00C.cbl, LINE #127] MOVE statement
            container.getCosgn0ai().setPasswdl(-1);
            // [T-Up#INFO][COSGN00C.cbl, LINE #128] PERFORM statement
            controlManager.run(context, sendSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COSGN00C.cbl, LINE #130] CONTINUE statement
        }
        // [T-Up#INFO][COSGN00C.cbl, LINE #133] MOVE statement
        container.getWsVariables().setWsUserId(
                container.getCosgn0ai().getUseridi().toUpperCase());
        container
                .getCarddemoCommarea()
                .getCdemoGeneralInfo()
                .setCdemoUserId(
                        container.getCosgn0ai().getUseridi().toUpperCase());
        // [T-Up#INFO][COSGN00C.cbl, LINE #136] MOVE statement
        container.getWsVariables().setWsUserPwd(
                container.getCosgn0ai().getPasswdi().toUpperCase());
        // [T-Up#INFO][COSGN00C.cbl, LINE #139] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COSGN00C.cbl, LINE #140] PERFORM statement
            controlManager.run(context, readUserSecFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      SEND-SIGNON-SCREEN                         
    // *----------------------------------------------------------------*

    void sendSignonScreen(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #148] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COSGN00C.cbl, LINE #150] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COSGN00C.cbl, LINE #152] EXEC_CICS statement
        /*
                       EXEC CICS SEND                                               
                                 MAP('COSGN0A')                                     
                                 MAPSET('COSGN00')                                  
                                 FROM(COSGN0AO)                                     
                                 ERASE                                              
                                 CURSOR                                             
                       END-EXEC
         */
        ((Cosgn00cOutputDto) task.getOutputDto())
                .setPageName("COSGN00_COSGN0A");
        ((Cosgn00cOutputDto) task.getOutputDto()).setCosgn0ao(container
                .getCosgn0ao());
    }

    // *----------------------------------------------------------------*
    // *                      SEND-PLAIN-TEXT                            
    // *----------------------------------------------------------------*

    void sendPlainText(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #165] EXEC_CICS statement
        /*
                       EXEC CICS SEND TEXT                                          
                                 FROM(WS-MESSAGE)                                   
                                 LENGTH(LENGTH OF WS-MESSAGE)                       
                                 ERASE                                              
                                 FREEKB                                             
                       END-EXEC
         */
        task.getOutputDto().getSystemDto()
                .setNotification(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COSGN00C.cbl, LINE #172] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                       END-EXEC
         */
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO                       
    // *----------------------------------------------------------------*

    void populateHeaderInfo(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #180] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COSGN00C.cbl, LINE #182] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COSGN00C.cbl, LINE #183] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COSGN00C.cbl, LINE #184] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COSGN00C.cbl, LINE #185] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COSGN00C.cbl, LINE #187] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COSGN00C.cbl, LINE #188] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COSGN00C.cbl, LINE #189] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COSGN00C.cbl, LINE #191] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COSGN00C.cbl, LINE #193] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COSGN00C.cbl, LINE #194] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COSGN00C.cbl, LINE #195] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COSGN00C.cbl, LINE #197] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
        // [T-Up#INFO][COSGN00C.cbl, LINE #199] EXEC_CICS statement
        /*
                       EXEC CICS ASSIGN                                             
                           APPLID(APPLIDO OF COSGN0AO)                              
                       END-EXEC
         */
        container.setApplido(task.getUserId());
        // [T-Up#INFO][COSGN00C.cbl, LINE #203] EXEC_CICS statement
        /*
                       EXEC CICS ASSIGN                                             
                           SYSID(SYSIDO OF COSGN0AO)                                
                       END-EXEC
         */
        container.setSysido(task.getSysId());
    }

    // *----------------------------------------------------------------*
    // *                      READ-USER-SEC-FILE                         
    // *----------------------------------------------------------------*

    void readUserSecFile(OpenFrameContext context) {
        Cosgn00cVariableContainer container = (Cosgn00cVariableContainer) context
                .getProgramVariableContainer("Cosgn00c");
        // [T-Up#INFO][COSGN00C.cbl, LINE #212] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            DATASET   (WS-USRSEC-FILE)                              
                            INTO      (SEC-USER-DATA)                               
                            LENGTH    (LENGTH OF SEC-USER-DATA)                     
                            RIDFLD    (WS-USER-ID)                                  
                            KEYLENGTH (LENGTH OF WS-USER-ID)                        
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoUsrsecVsamKsdsDto awsM2CarddemoUsrsecVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoUsrsecVsamKsdsDao", container
                            .getWsVariables().getWsUserId());
            container
                    .setSecUserData(Cosgn00cSecUserDataToAwsM2CarddemoUsrsecVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoUsrsecVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COSGN00C.cbl, LINE #222] EVALUATE statement
        switch (container.getWsVariables().getWsRespCd()) {
        case 0: {
            // [T-Up#INFO][COSGN00C.cbl, LINE #224] IF statement
            if (CobStringUtils.compare(container.getSecUserData()
                    .getSecUsrPwd(), container.getWsVariables().getWsUserPwd()) == 0) {
                // [T-Up#INFO][COSGN00C.cbl, LINE #225] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromTranid(
                                container.getWsVariables().getWsTranid());
                // [T-Up#INFO][COSGN00C.cbl, LINE #226] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromProgram(
                                container.getWsVariables().getWsPgmname());
                // [T-Up#INFO][COSGN00C.cbl, LINE #227] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoUserId(
                                container.getWsVariables().getWsUserId());
                // [T-Up#INFO][COSGN00C.cbl, LINE #228] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoUserType(
                                container.getSecUserData().getSecUsrType());
                // [T-Up#INFO][COSGN00C.cbl, LINE #229] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(0);
                // [T-Up#INFO][COSGN00C.cbl, LINE #231] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoUserType(),
                        CDEMO_USRTYP_ADMIN) == 0) {
                    // [T-Up#INFO][COSGN00C.cbl, LINE #232] EXEC_CICS statement
                    /*
                                                    EXEC CICS XCTL                              
                                                      PROGRAM ('COADM01C')                      
                                                      COMMAREA(CARDDEMO-COMMAREA)               
                                                    END-EXEC
                     */
                    Coadm01cInputDto coadm01cInputDto = new Coadm01cInputDto();
                    coadm01cInputDto
                            .setDfhcommarea(Cosgn00cCarddemoCommareaToCoadm01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CA00", coadm01cInputDto);
                    context.setReturnFlag(true);
                } else {
                    // [T-Up#INFO][COSGN00C.cbl, LINE #237] EXEC_CICS statement
                    /*
                                                    EXEC CICS XCTL                              
                                                      PROGRAM ('COMEN01C')                      
                                                      COMMAREA(CARDDEMO-COMMAREA)               
                                                    END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(Cosgn00cCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                }
            } else {
                // [T-Up#INFO][COSGN00C.cbl, LINE #243] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Wrong Password. Try again ...");
                // [T-Up#INFO][COSGN00C.cbl, LINE #245] MOVE statement
                container.getCosgn0ai().setPasswdl(-1);
                // [T-Up#INFO][COSGN00C.cbl, LINE #246] PERFORM statement
                controlManager.run(context, sendSignonScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            break;
        }
        case 13: {
            // [T-Up#INFO][COSGN00C.cbl, LINE #249] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COSGN00C.cbl, LINE #250] MOVE statement
            container.getWsVariables().setWsMessage(
                    "User not found. Try again ...");
            // [T-Up#INFO][COSGN00C.cbl, LINE #251] MOVE statement
            container.getCosgn0ai().setUseridl(-1);
            // [T-Up#INFO][COSGN00C.cbl, LINE #252] PERFORM statement
            controlManager.run(context, sendSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
            break;
        }
        default: {
            // [T-Up#INFO][COSGN00C.cbl, LINE #254] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COSGN00C.cbl, LINE #255] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to verify the User ...");
            // [T-Up#INFO][COSGN00C.cbl, LINE #256] MOVE statement
            container.getCosgn0ai().setUseridl(-1);
            // [T-Up#INFO][COSGN00C.cbl, LINE #257] PERFORM statement
            controlManager.run(context, sendSignonScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
            break;
        }
        }
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT 
    // *                                                                 
}
