package aws.carddemo.variable.group;

import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:49 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class Corpt00cCorpt0ai {
    // [T-Up#INFO][CORPT00.CPY, LINE #19] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER1 = StringUtils.repeat(' ',
            12);
    // [T-Up#INFO][CORPT00.CPY, LINE #20] TRNNAMEL (level: 2)
    private @Getter @Setter int trnnamel;
    // [T-Up#INFO][CORPT00.CPY, LINE #21] TRNNAMEF (level: 2)
    private @Getter @Builder.Default String trnnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER2 getOFFILLER2() {
        return _OFFILLER2.builder().trnnamea(getTrnnamea()).build();
    }

    public void setOFFILLER2(String source) {
        setTrnnamea(source.substring(0, 1));
    }

    public void setOFFILLER2(_OFFILLER2 source) {
        setOFFILLER2(source.toString());
    }

    public String getTrnnamea() {
        return getTrnnamef();
    }

    public void setTrnnamea(String source) {
        setTrnnamef(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #24] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER3 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #25] TRNNAMEI (level: 2)
    private @Getter @Builder.Default String trnnamei = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #26] TITLE01L (level: 2)
    private @Getter @Setter int title01l;
    // [T-Up#INFO][CORPT00.CPY, LINE #27] TITLE01F (level: 2)
    private @Getter @Builder.Default String title01f = StringUtils.repeat(' ',
            1);

    public _OFFILLER4 getOFFILLER4() {
        return _OFFILLER4.builder().title01a(getTitle01a()).build();
    }

    public void setOFFILLER4(String source) {
        setTitle01a(source.substring(0, 1));
    }

    public void setOFFILLER4(_OFFILLER4 source) {
        setOFFILLER4(source.toString());
    }

    public String getTitle01a() {
        return getTitle01f();
    }

    public void setTitle01a(String source) {
        setTitle01f(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #30] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER5 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #31] TITLE01I (level: 2)
    private @Getter @Builder.Default String title01i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][CORPT00.CPY, LINE #32] CURDATEL (level: 2)
    private @Getter @Setter int curdatel;
    // [T-Up#INFO][CORPT00.CPY, LINE #33] CURDATEF (level: 2)
    private @Getter @Builder.Default String curdatef = StringUtils.repeat(' ',
            1);

    public _OFFILLER6 getOFFILLER6() {
        return _OFFILLER6.builder().curdatea(getCurdatea()).build();
    }

    public void setOFFILLER6(String source) {
        setCurdatea(source.substring(0, 1));
    }

    public void setOFFILLER6(_OFFILLER6 source) {
        setOFFILLER6(source.toString());
    }

    public String getCurdatea() {
        return getCurdatef();
    }

    public void setCurdatea(String source) {
        setCurdatef(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #36] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER7 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #37] CURDATEI (level: 2)
    private @Getter @Builder.Default String curdatei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][CORPT00.CPY, LINE #38] PGMNAMEL (level: 2)
    private @Getter @Setter int pgmnamel;
    // [T-Up#INFO][CORPT00.CPY, LINE #39] PGMNAMEF (level: 2)
    private @Getter @Builder.Default String pgmnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER8 getOFFILLER8() {
        return _OFFILLER8.builder().pgmnamea(getPgmnamea()).build();
    }

    public void setOFFILLER8(String source) {
        setPgmnamea(source.substring(0, 1));
    }

    public void setOFFILLER8(_OFFILLER8 source) {
        setOFFILLER8(source.toString());
    }

    public String getPgmnamea() {
        return getPgmnamef();
    }

    public void setPgmnamea(String source) {
        setPgmnamef(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #42] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER9 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #43] PGMNAMEI (level: 2)
    private @Getter @Builder.Default String pgmnamei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][CORPT00.CPY, LINE #44] TITLE02L (level: 2)
    private @Getter @Setter int title02l;
    // [T-Up#INFO][CORPT00.CPY, LINE #45] TITLE02F (level: 2)
    private @Getter @Builder.Default String title02f = StringUtils.repeat(' ',
            1);

    public _OFFILLER10 getOFFILLER10() {
        return _OFFILLER10.builder().title02a(getTitle02a()).build();
    }

    public void setOFFILLER10(String source) {
        setTitle02a(source.substring(0, 1));
    }

    public void setOFFILLER10(_OFFILLER10 source) {
        setOFFILLER10(source.toString());
    }

    public String getTitle02a() {
        return getTitle02f();
    }

    public void setTitle02a(String source) {
        setTitle02f(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #48] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER11 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #49] TITLE02I (level: 2)
    private @Getter @Builder.Default String title02i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][CORPT00.CPY, LINE #50] CURTIMEL (level: 2)
    private @Getter @Setter int curtimel;
    // [T-Up#INFO][CORPT00.CPY, LINE #51] CURTIMEF (level: 2)
    private @Getter @Builder.Default String curtimef = StringUtils.repeat(' ',
            1);

    public _OFFILLER12 getOFFILLER12() {
        return _OFFILLER12.builder().curtimea(getCurtimea()).build();
    }

    public void setOFFILLER12(String source) {
        setCurtimea(source.substring(0, 1));
    }

    public void setOFFILLER12(_OFFILLER12 source) {
        setOFFILLER12(source.toString());
    }

    public String getCurtimea() {
        return getCurtimef();
    }

    public void setCurtimea(String source) {
        setCurtimef(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #54] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER13 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #55] CURTIMEI (level: 2)
    private @Getter @Builder.Default String curtimei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][CORPT00.CPY, LINE #56] MONTHLYL (level: 2)
    private @Getter @Setter int monthlyl;
    // [T-Up#INFO][CORPT00.CPY, LINE #57] MONTHLYF (level: 2)
    private @Getter @Builder.Default String monthlyf = StringUtils.repeat(' ',
            1);

    public _OFFILLER14 getOFFILLER14() {
        return _OFFILLER14.builder().monthlya(getMonthlya()).build();
    }

    public void setOFFILLER14(String source) {
        setMonthlya(source.substring(0, 1));
    }

    public void setOFFILLER14(_OFFILLER14 source) {
        setOFFILLER14(source.toString());
    }

    public String getMonthlya() {
        return getMonthlyf();
    }

    public void setMonthlya(String source) {
        setMonthlyf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #60] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER15 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #61] MONTHLYI (level: 2)
    private @Getter @Builder.Default String monthlyi = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][CORPT00.CPY, LINE #62] YEARLYL (level: 2)
    private @Getter @Setter int yearlyl;
    // [T-Up#INFO][CORPT00.CPY, LINE #63] YEARLYF (level: 2)
    private @Getter @Builder.Default String yearlyf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER16 getOFFILLER16() {
        return _OFFILLER16.builder().yearlya(getYearlya()).build();
    }

    public void setOFFILLER16(String source) {
        setYearlya(source.substring(0, 1));
    }

    public void setOFFILLER16(_OFFILLER16 source) {
        setOFFILLER16(source.toString());
    }

    public String getYearlya() {
        return getYearlyf();
    }

    public void setYearlya(String source) {
        setYearlyf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #66] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER17 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #67] YEARLYI (level: 2)
    private @Getter @Builder.Default String yearlyi = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][CORPT00.CPY, LINE #68] CUSTOML (level: 2)
    private @Getter @Setter int customl;
    // [T-Up#INFO][CORPT00.CPY, LINE #69] CUSTOMF (level: 2)
    private @Getter @Builder.Default String customf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER18 getOFFILLER18() {
        return _OFFILLER18.builder().customa(getCustoma()).build();
    }

    public void setOFFILLER18(String source) {
        setCustoma(source.substring(0, 1));
    }

    public void setOFFILLER18(_OFFILLER18 source) {
        setOFFILLER18(source.toString());
    }

    public String getCustoma() {
        return getCustomf();
    }

    public void setCustoma(String source) {
        setCustomf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #72] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER19 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #73] CUSTOMI (level: 2)
    private @Getter @Builder.Default String customi = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][CORPT00.CPY, LINE #74] SDTMML (level: 2)
    private @Getter @Setter int sdtmml;
    // [T-Up#INFO][CORPT00.CPY, LINE #75] SDTMMF (level: 2)
    private @Getter @Builder.Default String sdtmmf = StringUtils.repeat(' ', 1);

    public _OFFILLER20 getOFFILLER20() {
        return _OFFILLER20.builder().sdtmma(getSdtmma()).build();
    }

    public void setOFFILLER20(String source) {
        setSdtmma(source.substring(0, 1));
    }

    public void setOFFILLER20(_OFFILLER20 source) {
        setOFFILLER20(source.toString());
    }

    public String getSdtmma() {
        return getSdtmmf();
    }

    public void setSdtmma(String source) {
        setSdtmmf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #78] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER21 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #79] SDTMMI (level: 2)
    private @Getter @Builder.Default String sdtmmi = StringUtils.repeat(' ', 2);
    // [T-Up#INFO][CORPT00.CPY, LINE #80] SDTDDL (level: 2)
    private @Getter @Setter int sdtddl;
    // [T-Up#INFO][CORPT00.CPY, LINE #81] SDTDDF (level: 2)
    private @Getter @Builder.Default String sdtddf = StringUtils.repeat(' ', 1);

    public _OFFILLER22 getOFFILLER22() {
        return _OFFILLER22.builder().sdtdda(getSdtdda()).build();
    }

    public void setOFFILLER22(String source) {
        setSdtdda(source.substring(0, 1));
    }

    public void setOFFILLER22(_OFFILLER22 source) {
        setOFFILLER22(source.toString());
    }

    public String getSdtdda() {
        return getSdtddf();
    }

    public void setSdtdda(String source) {
        setSdtddf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #84] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER23 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #85] SDTDDI (level: 2)
    private @Getter @Builder.Default String sdtddi = StringUtils.repeat(' ', 2);
    // [T-Up#INFO][CORPT00.CPY, LINE #86] SDTYYYYL (level: 2)
    private @Getter @Setter int sdtyyyyl;
    // [T-Up#INFO][CORPT00.CPY, LINE #87] SDTYYYYF (level: 2)
    private @Getter @Builder.Default String sdtyyyyf = StringUtils.repeat(' ',
            1);

    public _OFFILLER24 getOFFILLER24() {
        return _OFFILLER24.builder().sdtyyyya(getSdtyyyya()).build();
    }

    public void setOFFILLER24(String source) {
        setSdtyyyya(source.substring(0, 1));
    }

    public void setOFFILLER24(_OFFILLER24 source) {
        setOFFILLER24(source.toString());
    }

    public String getSdtyyyya() {
        return getSdtyyyyf();
    }

    public void setSdtyyyya(String source) {
        setSdtyyyyf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #90] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER25 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #91] SDTYYYYI (level: 2)
    private @Getter @Builder.Default String sdtyyyyi = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #92] EDTMML (level: 2)
    private @Getter @Setter int edtmml;
    // [T-Up#INFO][CORPT00.CPY, LINE #93] EDTMMF (level: 2)
    private @Getter @Builder.Default String edtmmf = StringUtils.repeat(' ', 1);

    public _OFFILLER26 getOFFILLER26() {
        return _OFFILLER26.builder().edtmma(getEdtmma()).build();
    }

    public void setOFFILLER26(String source) {
        setEdtmma(source.substring(0, 1));
    }

    public void setOFFILLER26(_OFFILLER26 source) {
        setOFFILLER26(source.toString());
    }

    public String getEdtmma() {
        return getEdtmmf();
    }

    public void setEdtmma(String source) {
        setEdtmmf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #96] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER27 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #97] EDTMMI (level: 2)
    private @Getter @Builder.Default String edtmmi = StringUtils.repeat(' ', 2);
    // [T-Up#INFO][CORPT00.CPY, LINE #98] EDTDDL (level: 2)
    private @Getter @Setter int edtddl;
    // [T-Up#INFO][CORPT00.CPY, LINE #99] EDTDDF (level: 2)
    private @Getter @Builder.Default String edtddf = StringUtils.repeat(' ', 1);

    public _OFFILLER28 getOFFILLER28() {
        return _OFFILLER28.builder().edtdda(getEdtdda()).build();
    }

    public void setOFFILLER28(String source) {
        setEdtdda(source.substring(0, 1));
    }

    public void setOFFILLER28(_OFFILLER28 source) {
        setOFFILLER28(source.toString());
    }

    public String getEdtdda() {
        return getEdtddf();
    }

    public void setEdtdda(String source) {
        setEdtddf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #102] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER29 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #103] EDTDDI (level: 2)
    private @Getter @Builder.Default String edtddi = StringUtils.repeat(' ', 2);
    // [T-Up#INFO][CORPT00.CPY, LINE #104] EDTYYYYL (level: 2)
    private @Getter @Setter int edtyyyyl;
    // [T-Up#INFO][CORPT00.CPY, LINE #105] EDTYYYYF (level: 2)
    private @Getter @Builder.Default String edtyyyyf = StringUtils.repeat(' ',
            1);

    public _OFFILLER30 getOFFILLER30() {
        return _OFFILLER30.builder().edtyyyya(getEdtyyyya()).build();
    }

    public void setOFFILLER30(String source) {
        setEdtyyyya(source.substring(0, 1));
    }

    public void setOFFILLER30(_OFFILLER30 source) {
        setOFFILLER30(source.toString());
    }

    public String getEdtyyyya() {
        return getEdtyyyyf();
    }

    public void setEdtyyyya(String source) {
        setEdtyyyyf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #108] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER31 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #109] EDTYYYYI (level: 2)
    private @Getter @Builder.Default String edtyyyyi = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][CORPT00.CPY, LINE #110] CONFIRML (level: 2)
    private @Getter @Setter int confirml;
    // [T-Up#INFO][CORPT00.CPY, LINE #111] CONFIRMF (level: 2)
    private @Getter @Builder.Default String confirmf = StringUtils.repeat(' ',
            1);

    public _OFFILLER32 getOFFILLER32() {
        return _OFFILLER32.builder().confirma(getConfirma()).build();
    }

    public void setOFFILLER32(String source) {
        setConfirma(source.substring(0, 1));
    }

    public void setOFFILLER32(_OFFILLER32 source) {
        setOFFILLER32(source.toString());
    }

    public String getConfirma() {
        return getConfirmf();
    }

    public void setConfirma(String source) {
        setConfirmf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #114] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER33 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #115] CONFIRMI (level: 2)
    private @Getter @Builder.Default String confirmi = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][CORPT00.CPY, LINE #116] ERRMSGL (level: 2)
    private @Getter @Setter int errmsgl;
    // [T-Up#INFO][CORPT00.CPY, LINE #117] ERRMSGF (level: 2)
    private @Getter @Builder.Default String errmsgf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER34 getOFFILLER34() {
        return _OFFILLER34.builder().errmsga(getErrmsga()).build();
    }

    public void setOFFILLER34(String source) {
        setErrmsga(source.substring(0, 1));
    }

    public void setOFFILLER34(_OFFILLER34 source) {
        setOFFILLER34(source.toString());
    }

    public String getErrmsga() {
        return getErrmsgf();
    }

    public void setErrmsga(String source) {
        setErrmsgf(source);
    }

    // [T-Up#INFO][CORPT00.CPY, LINE #120] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER35 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][CORPT00.CPY, LINE #121] ERRMSGI (level: 2)
    private @Getter @Builder.Default String errmsgi = StringUtils.repeat(' ',
            78);

    public void setOFFILLER1(String source) {
        OFFILLER1 = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
    }

    public void setTrnnamef(String source) {
        trnnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER3(String source) {
        OFFILLER3 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnnamei(String source) {
        trnnamei = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01f(String source) {
        title01f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER5(String source) {
        OFFILLER5 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01i(String source) {
        title01i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurdatef(String source) {
        curdatef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER7(String source) {
        OFFILLER7 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurdatei(String source) {
        curdatei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setPgmnamef(String source) {
        pgmnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER9(String source) {
        OFFILLER9 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setPgmnamei(String source) {
        pgmnamei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setTitle02f(String source) {
        title02f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER11(String source) {
        OFFILLER11 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle02i(String source) {
        title02i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurtimef(String source) {
        curtimef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER13(String source) {
        OFFILLER13 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurtimei(String source) {
        curtimei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setMonthlyf(String source) {
        monthlyf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER15(String source) {
        OFFILLER15 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setMonthlyi(String source) {
        monthlyi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setYearlyf(String source) {
        yearlyf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER17(String source) {
        OFFILLER17 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setYearlyi(String source) {
        yearlyi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setCustomf(String source) {
        customf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER19(String source) {
        OFFILLER19 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCustomi(String source) {
        customi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setSdtmmf(String source) {
        sdtmmf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER21(String source) {
        OFFILLER21 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setSdtmmi(String source) {
        sdtmmi = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
    }

    public void setSdtddf(String source) {
        sdtddf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER23(String source) {
        OFFILLER23 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setSdtddi(String source) {
        sdtddi = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
    }

    public void setSdtyyyyf(String source) {
        sdtyyyyf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER25(String source) {
        OFFILLER25 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setSdtyyyyi(String source) {
        sdtyyyyi = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setEdtmmf(String source) {
        edtmmf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER27(String source) {
        OFFILLER27 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setEdtmmi(String source) {
        edtmmi = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
    }

    public void setEdtddf(String source) {
        edtddf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER29(String source) {
        OFFILLER29 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setEdtddi(String source) {
        edtddi = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
    }

    public void setEdtyyyyf(String source) {
        edtyyyyf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER31(String source) {
        OFFILLER31 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setEdtyyyyi(String source) {
        edtyyyyi = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setConfirmf(String source) {
        confirmf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER33(String source) {
        OFFILLER33 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setConfirmi(String source) {
        confirmi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setErrmsgf(String source) {
        errmsgf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER35(String source) {
        OFFILLER35 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setErrmsgi(String source) {
        errmsgi = StringUtils.truncate(StringUtils.rightPad(source, 78), 78);
    }

    public static Corpt00cCorpt0ai createDefaultValueInstance() {
        return new Corpt00cCorpt0ai.builder().build();
    }

    public void set(String source) {
        ByteBuffer tempByteBuffer1;
        source = StringUtils.truncate(StringUtils.rightPad(source, 337), 337);
        OFFILLER1 = source.substring(0, 12);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(12, 14).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            trnnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            trnnamel = 0;
        }
        trnnamef = source.substring(14, 15);
        OFFILLER3 = source.substring(15, 19);
        trnnamei = source.substring(19, 23);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(23, 25).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title01l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title01l = 0;
        }
        title01f = source.substring(25, 26);
        OFFILLER5 = source.substring(26, 30);
        title01i = source.substring(30, 70);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(70, 72).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curdatel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curdatel = 0;
        }
        curdatef = source.substring(72, 73);
        OFFILLER7 = source.substring(73, 77);
        curdatei = source.substring(77, 85);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(85, 87).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            pgmnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            pgmnamel = 0;
        }
        pgmnamef = source.substring(87, 88);
        OFFILLER9 = source.substring(88, 92);
        pgmnamei = source.substring(92, 100);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(100, 102).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title02l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title02l = 0;
        }
        title02f = source.substring(102, 103);
        OFFILLER11 = source.substring(103, 107);
        title02i = source.substring(107, 147);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(147, 149).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curtimel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curtimel = 0;
        }
        curtimef = source.substring(149, 150);
        OFFILLER13 = source.substring(150, 154);
        curtimei = source.substring(154, 162);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(162, 164).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            monthlyl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            monthlyl = 0;
        }
        monthlyf = source.substring(164, 165);
        OFFILLER15 = source.substring(165, 169);
        monthlyi = source.substring(169, 170);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(170, 172).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            yearlyl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            yearlyl = 0;
        }
        yearlyf = source.substring(172, 173);
        OFFILLER17 = source.substring(173, 177);
        yearlyi = source.substring(177, 178);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(178, 180).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            customl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            customl = 0;
        }
        customf = source.substring(180, 181);
        OFFILLER19 = source.substring(181, 185);
        customi = source.substring(185, 186);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(186, 188).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            sdtmml = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            sdtmml = 0;
        }
        sdtmmf = source.substring(188, 189);
        OFFILLER21 = source.substring(189, 193);
        sdtmmi = source.substring(193, 195);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(195, 197).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            sdtddl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            sdtddl = 0;
        }
        sdtddf = source.substring(197, 198);
        OFFILLER23 = source.substring(198, 202);
        sdtddi = source.substring(202, 204);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(204, 206).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            sdtyyyyl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            sdtyyyyl = 0;
        }
        sdtyyyyf = source.substring(206, 207);
        OFFILLER25 = source.substring(207, 211);
        sdtyyyyi = source.substring(211, 215);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(215, 217).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            edtmml = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            edtmml = 0;
        }
        edtmmf = source.substring(217, 218);
        OFFILLER27 = source.substring(218, 222);
        edtmmi = source.substring(222, 224);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(224, 226).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            edtddl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            edtddl = 0;
        }
        edtddf = source.substring(226, 227);
        OFFILLER29 = source.substring(227, 231);
        edtddi = source.substring(231, 233);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(233, 235).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            edtyyyyl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            edtyyyyl = 0;
        }
        edtyyyyf = source.substring(235, 236);
        OFFILLER31 = source.substring(236, 240);
        edtyyyyi = source.substring(240, 244);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(244, 246).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            confirml = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            confirml = 0;
        }
        confirmf = source.substring(246, 247);
        OFFILLER33 = source.substring(247, 251);
        confirmi = source.substring(251, 252);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(252, 254).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            errmsgl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            errmsgl = 0;
        }
        errmsgf = source.substring(254, 255);
        OFFILLER35 = source.substring(255, 259);
        errmsgi = source.substring(259, 337);
    }

    public String get() {
        ByteBuffer tempByteBuffer1;
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) trnnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(trnnamef);
        sb.append(OFFILLER3);
        sb.append(trnnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title01l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title01f);
        sb.append(OFFILLER5);
        sb.append(title01i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curdatel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curdatef);
        sb.append(OFFILLER7);
        sb.append(curdatei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) pgmnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(pgmnamef);
        sb.append(OFFILLER9);
        sb.append(pgmnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title02l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title02f);
        sb.append(OFFILLER11);
        sb.append(title02i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curtimel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curtimef);
        sb.append(OFFILLER13);
        sb.append(curtimei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) monthlyl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(monthlyf);
        sb.append(OFFILLER15);
        sb.append(monthlyi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) yearlyl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(yearlyf);
        sb.append(OFFILLER17);
        sb.append(yearlyi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) customl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(customf);
        sb.append(OFFILLER19);
        sb.append(customi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) sdtmml);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(sdtmmf);
        sb.append(OFFILLER21);
        sb.append(sdtmmi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) sdtddl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(sdtddf);
        sb.append(OFFILLER23);
        sb.append(sdtddi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) sdtyyyyl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(sdtyyyyf);
        sb.append(OFFILLER25);
        sb.append(sdtyyyyi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) edtmml);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(edtmmf);
        sb.append(OFFILLER27);
        sb.append(edtmmi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) edtddl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(edtddf);
        sb.append(OFFILLER29);
        sb.append(edtddi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) edtyyyyl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(edtyyyyf);
        sb.append(OFFILLER31);
        sb.append(edtyyyyi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) confirml);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(confirmf);
        sb.append(OFFILLER33);
        sb.append(confirmi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) errmsgl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(errmsgf);
        sb.append(OFFILLER35);
        sb.append(errmsgi);
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        sb.append(String.valueOf(getTrnnamel()));
        sb.append(getTrnnamef());
        sb.append(OFFILLER3);
        sb.append(getTrnnamei());
        sb.append(String.valueOf(getTitle01l()));
        sb.append(getTitle01f());
        sb.append(OFFILLER5);
        sb.append(getTitle01i());
        sb.append(String.valueOf(getCurdatel()));
        sb.append(getCurdatef());
        sb.append(OFFILLER7);
        sb.append(getCurdatei());
        sb.append(String.valueOf(getPgmnamel()));
        sb.append(getPgmnamef());
        sb.append(OFFILLER9);
        sb.append(getPgmnamei());
        sb.append(String.valueOf(getTitle02l()));
        sb.append(getTitle02f());
        sb.append(OFFILLER11);
        sb.append(getTitle02i());
        sb.append(String.valueOf(getCurtimel()));
        sb.append(getCurtimef());
        sb.append(OFFILLER13);
        sb.append(getCurtimei());
        sb.append(String.valueOf(getMonthlyl()));
        sb.append(getMonthlyf());
        sb.append(OFFILLER15);
        sb.append(getMonthlyi());
        sb.append(String.valueOf(getYearlyl()));
        sb.append(getYearlyf());
        sb.append(OFFILLER17);
        sb.append(getYearlyi());
        sb.append(String.valueOf(getCustoml()));
        sb.append(getCustomf());
        sb.append(OFFILLER19);
        sb.append(getCustomi());
        sb.append(String.valueOf(getSdtmml()));
        sb.append(getSdtmmf());
        sb.append(OFFILLER21);
        sb.append(getSdtmmi());
        sb.append(String.valueOf(getSdtddl()));
        sb.append(getSdtddf());
        sb.append(OFFILLER23);
        sb.append(getSdtddi());
        sb.append(String.valueOf(getSdtyyyyl()));
        sb.append(getSdtyyyyf());
        sb.append(OFFILLER25);
        sb.append(getSdtyyyyi());
        sb.append(String.valueOf(getEdtmml()));
        sb.append(getEdtmmf());
        sb.append(OFFILLER27);
        sb.append(getEdtmmi());
        sb.append(String.valueOf(getEdtddl()));
        sb.append(getEdtddf());
        sb.append(OFFILLER29);
        sb.append(getEdtddi());
        sb.append(String.valueOf(getEdtyyyyl()));
        sb.append(getEdtyyyyf());
        sb.append(OFFILLER31);
        sb.append(getEdtyyyyi());
        sb.append(String.valueOf(getConfirml()));
        sb.append(getConfirmf());
        sb.append(OFFILLER33);
        sb.append(getConfirmi());
        sb.append(String.valueOf(getErrmsgl()));
        sb.append(getErrmsgf());
        sb.append(OFFILLER35);
        sb.append(getErrmsgi());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER2 {
        // [T-Up#INFO][CORPT00.CPY, LINE #23] TRNNAMEA (level: 3)
        private @Getter String trnnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER4 {
        // [T-Up#INFO][CORPT00.CPY, LINE #29] TITLE01A (level: 3)
        private @Getter String title01a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER6 {
        // [T-Up#INFO][CORPT00.CPY, LINE #35] CURDATEA (level: 3)
        private @Getter String curdatea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER8 {
        // [T-Up#INFO][CORPT00.CPY, LINE #41] PGMNAMEA (level: 3)
        private @Getter String pgmnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER10 {
        // [T-Up#INFO][CORPT00.CPY, LINE #47] TITLE02A (level: 3)
        private @Getter String title02a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER12 {
        // [T-Up#INFO][CORPT00.CPY, LINE #53] CURTIMEA (level: 3)
        private @Getter String curtimea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER14 {
        // [T-Up#INFO][CORPT00.CPY, LINE #59] MONTHLYA (level: 3)
        private @Getter String monthlya = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(monthlya);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(monthlya);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER16 {
        // [T-Up#INFO][CORPT00.CPY, LINE #65] YEARLYA (level: 3)
        private @Getter String yearlya = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(yearlya);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(yearlya);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER18 {
        // [T-Up#INFO][CORPT00.CPY, LINE #71] CUSTOMA (level: 3)
        private @Getter String customa = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(customa);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(customa);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER20 {
        // [T-Up#INFO][CORPT00.CPY, LINE #77] SDTMMA (level: 3)
        private @Getter String sdtmma = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtmma);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtmma);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER22 {
        // [T-Up#INFO][CORPT00.CPY, LINE #83] SDTDDA (level: 3)
        private @Getter String sdtdda = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtdda);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtdda);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER24 {
        // [T-Up#INFO][CORPT00.CPY, LINE #89] SDTYYYYA (level: 3)
        private @Getter String sdtyyyya = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtyyyya);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(sdtyyyya);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER26 {
        // [T-Up#INFO][CORPT00.CPY, LINE #95] EDTMMA (level: 3)
        private @Getter String edtmma = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtmma);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtmma);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER28 {
        // [T-Up#INFO][CORPT00.CPY, LINE #101] EDTDDA (level: 3)
        private @Getter String edtdda = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtdda);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtdda);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER30 {
        // [T-Up#INFO][CORPT00.CPY, LINE #107] EDTYYYYA (level: 3)
        private @Getter String edtyyyya = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtyyyya);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(edtyyyya);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER32 {
        // [T-Up#INFO][CORPT00.CPY, LINE #113] CONFIRMA (level: 3)
        private @Getter String confirma = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(confirma);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(confirma);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER34 {
        // [T-Up#INFO][CORPT00.CPY, LINE #119] ERRMSGA (level: 3)
        private @Getter String errmsga = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }
    }
}
