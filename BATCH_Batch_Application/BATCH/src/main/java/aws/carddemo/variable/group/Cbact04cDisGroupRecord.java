package aws.carddemo.variable.group;

import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:55 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor class Cbact04cDisGroupRecord {
    // [T-Up#INFO][CVTRA02Y.cpy, LINE #6] DIS-GROUP-KEY (level: 5)
    private @Getter @Setter Cbact04cDisGroupKey disGroupKey = new Cbact04cDisGroupKey();
    // [T-Up#INFO][CVTRA02Y.cpy, LINE #10] DIS-INT-RATE (level: 5)
    private @Getter BigDecimal disIntRate = BigDecimal.ZERO;
    // [T-Up#INFO][CVTRA02Y.cpy, LINE #11] FILLER (level: 5)
    private @Getter String OFFILLER1 = StringUtils.repeat(' ', 28);

    public void setDisIntRate(BigDecimal source) {
        disIntRate = source.setScale(2, RoundingMode.DOWN);
    }

    public void setOFFILLER1(String source) {
        OFFILLER1 = StringUtils.truncate(StringUtils.rightPad(source, 28), 28);
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 50), 50);
        disGroupKey.set(source.substring(0, 16));
        try {
            disIntRate = DataConverter.convZonedStringToBigDecimal(
                    source.substring(16, 22), 6, 2);
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            disIntRate = BigDecimal.ZERO;
        }
        OFFILLER1 = source.substring(22, 50);
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(disGroupKey.get());
        sb.append(DataConverter.convZonedBigDecimalToString(disIntRate, 6, 2));
        sb.append(OFFILLER1);
        return sb.toString();
    }

    public void set(Cbact04cFdDiscgrpRec source) {
        disGroupKey.setDisAcctGroupId(source.getFdDiscgrpKey()
                .getFdDisAcctGroupId());
        disGroupKey.setDisTranTypeCd(source.getFdDiscgrpKey()
                .getFdDisTranTypeCd());
        disGroupKey.setDisTranCatCd(source.getFdDiscgrpKey()
                .getFdDisTranCatCd());
        disIntRate = DataConverter.convZonedStringToBigDecimal(source
                .getFdDiscgrpData().substring(0, 6), 6, 2);
        OFFILLER1 = source.getFdDiscgrpData().substring(6);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getDisGroupKey().toString());
        sb.append(PictureFormatter.decimalFormatWithSign(disIntRate, "0000.00"));
        sb.append(OFFILLER1);
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor class Cbact04cDisGroupKey {
        // [T-Up#INFO][CVTRA02Y.cpy, LINE #7] DIS-ACCT-GROUP-ID (level: 10)
        private @Getter String disAcctGroupId = StringUtils.repeat(' ', 10);
        // [T-Up#INFO][CVTRA02Y.cpy, LINE #8] DIS-TRAN-TYPE-CD (level: 10)
        private @Getter String disTranTypeCd = StringUtils.repeat(' ', 2);
        // [T-Up#INFO][CVTRA02Y.cpy, LINE #9] DIS-TRAN-CAT-CD (level: 10)
        private @Getter @Setter int disTranCatCd;

        public void setDisAcctGroupId(String source) {
            disAcctGroupId = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setDisTranTypeCd(String source) {
            disTranTypeCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 2), 2);
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 16), 16);
            disAcctGroupId = source.substring(0, 10);
            disTranTypeCd = source.substring(10, 12);
            try {
                disTranCatCd = (int) DataConverter.convZonedStringToLong(
                        source.substring(12, 16), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                disTranCatCd = 0;
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(disAcctGroupId);
            sb.append(disTranTypeCd);
            sb.append(DataConverter.convZonedLongToString(disTranCatCd, 4));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getDisAcctGroupId());
            sb.append(getDisTranTypeCd());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) disTranCatCd, "0000"));
            return sb.toString();
        }
    }
}
