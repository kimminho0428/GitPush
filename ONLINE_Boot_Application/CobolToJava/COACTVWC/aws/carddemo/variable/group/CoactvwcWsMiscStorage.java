package aws.carddemo.variable.group;

import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:46 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcWsMiscStorage {
    // ******************************************************************
    // * General CICS related                                            
    // ******************************************************************
    // [T-Up#INFO][COACTVWC.cbl, LINE #39] WS-CICS-PROCESSNG-VARS (level: 5)
    private @Getter @Setter @Builder.Default CoactvwcWsCicsProcessngVars wsCicsProcessngVars = new CoactvwcWsCicsProcessngVars();
    // ******************************************************************
    // *      Input edits                                                
    // ******************************************************************
    // [T-Up#INFO][COACTVWC.cbl, LINE #50] WS-INPUT-FLAG (level: 5)
    private @Getter @Builder.Default String wsInputFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COACTVWC.cbl, LINE #51] INPUT-OK (level: 88)
    public static final String INPUT_OK = "0";
    // [T-Up#INFO][COACTVWC.cbl, LINE #52] INPUT-ERROR (level: 88)
    public static final String INPUT_ERROR = "1";
    // [T-Up#INFO][COACTVWC.cbl, LINE #53] INPUT-PENDING (level: 88)
    public static final String INPUT_PENDING = StringUtils.repeat((char) 0x00,
            1);
    // [T-Up#INFO][COACTVWC.cbl, LINE #54] WS-PFK-FLAG (level: 5)
    private @Getter @Builder.Default String wsPfkFlag = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][COACTVWC.cbl, LINE #55] PFK-VALID (level: 88)
    public static final String PFK_VALID = "0";
    // [T-Up#INFO][COACTVWC.cbl, LINE #56] PFK-INVALID (level: 88)
    public static final String PFK_INVALID = "1";
    // [T-Up#INFO][COACTVWC.cbl, LINE #57] WS-EDIT-ACCT-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditAcctFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COACTVWC.cbl, LINE #58] FLG-ACCTFILTER-NOT-OK (level: 88)
    public static final String FLG_ACCTFILTER_NOT_OK = "0";
    // [T-Up#INFO][COACTVWC.cbl, LINE #59] FLG-ACCTFILTER-ISVALID (level: 88)
    public static final String FLG_ACCTFILTER_ISVALID = "1";
    // [T-Up#INFO][COACTVWC.cbl, LINE #60] FLG-ACCTFILTER-BLANK (level: 88)
    public static final String FLG_ACCTFILTER_BLANK = " ";
    // [T-Up#INFO][COACTVWC.cbl, LINE #61] WS-EDIT-CUST-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditCustFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COACTVWC.cbl, LINE #62] FLG-CUSTFILTER-NOT-OK (level: 88)
    public static final String FLG_CUSTFILTER_NOT_OK = "0";
    // [T-Up#INFO][COACTVWC.cbl, LINE #63] FLG-CUSTFILTER-ISVALID (level: 88)
    public static final String FLG_CUSTFILTER_ISVALID = "1";
    // [T-Up#INFO][COACTVWC.cbl, LINE #64] FLG-CUSTFILTER-BLANK (level: 88)
    public static final String FLG_CUSTFILTER_BLANK = " ";
    // ******************************************************************
    // * Output edits                                                    
    // ******************************************************************
    // *  05  EDIT-FIELD-9-2                PIC +ZZZ,ZZZ,ZZZ.99.         
    // ******************************************************************
    // *      File and data Handling                                     
    // ******************************************************************
    // [T-Up#INFO][COACTVWC.cbl, LINE #72] WS-XREF-RID (level: 5)
    private @Getter @Setter @Builder.Default CoactvwcWsXrefRid wsXrefRid = new CoactvwcWsXrefRid();
    // [T-Up#INFO][COACTVWC.cbl, LINE #80] WS-FILE-READ-FLAGS (level: 5)
    private @Getter @Setter @Builder.Default CoactvwcWsFileReadFlags wsFileReadFlags = new CoactvwcWsFileReadFlags();
    // [T-Up#INFO][COACTVWC.cbl, LINE #85] WS-FILE-ERROR-MESSAGE (level: 5)
    private @Getter @Setter @Builder.Default CoactvwcWsFileErrorMessage wsFileErrorMessage = new CoactvwcWsFileErrorMessage();
    // ******************************************************************
    // *      Output Message Construction                                
    // ******************************************************************
    // [T-Up#INFO][COACTVWC.cbl, LINE #108] WS-LONG-MSG (level: 5)
    private @Getter @Builder.Default String wsLongMsg = StringUtils.repeat(' ',
            500);
    // [T-Up#INFO][COACTVWC.cbl, LINE #109] WS-INFO-MSG (level: 5)
    private @Getter @Builder.Default String wsInfoMsg = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COACTVWC.cbl, LINE #110] WS-NO-INFO-MESSAGE (level: 88)
    public static final String WS_NO_INFO_MESSAGE_1 = StringUtils.repeat(' ',
            40);
    public static final String WS_NO_INFO_MESSAGE_2 = StringUtils.repeat(
            (char) 0x00, 40);
    // [T-Up#INFO][COACTVWC.cbl, LINE #112] WS-PROMPT-FOR-INPUT (level: 88)
    public static final String WS_PROMPT_FOR_INPUT = "Enter or update id of account to display";
    // [T-Up#INFO][COACTVWC.cbl, LINE #114] WS-INFORM-OUTPUT (level: 88)
    public static final String WS_INFORM_OUTPUT = "Displaying details of given Account";
    // [T-Up#INFO][COACTVWC.cbl, LINE #116] WS-RETURN-MSG (level: 5)
    private @Getter @Builder.Default String wsReturnMsg = StringUtils.repeat(
            ' ', 75);
    // [T-Up#INFO][COACTVWC.cbl, LINE #117] WS-RETURN-MSG-OFF (level: 88)
    public static final String WS_RETURN_MSG_OFF = StringUtils.repeat(' ', 75);
    // [T-Up#INFO][COACTVWC.cbl, LINE #118] WS-EXIT-MESSAGE (level: 88)
    public static final String WS_EXIT_MESSAGE = "PF03 pressed.Exiting              ";
    // [T-Up#INFO][COACTVWC.cbl, LINE #120] WS-PROMPT-FOR-ACCT (level: 88)
    public static final String WS_PROMPT_FOR_ACCT = "Account number not provided";
    // [T-Up#INFO][COACTVWC.cbl, LINE #122] NO-SEARCH-CRITERIA-RECEIVED (level: 88)
    public static final String NO_SEARCH_CRITERIA_RECEIVED = "No input received";
    // [T-Up#INFO][COACTVWC.cbl, LINE #124] SEARCHED-ACCT-ZEROES (level: 88)
    public static final String SEARCHED_ACCT_ZEROES = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COACTVWC.cbl, LINE #126] SEARCHED-ACCT-NOT-NUMERIC (level: 88)
    public static final String SEARCHED_ACCT_NOT_NUMERIC = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COACTVWC.cbl, LINE #128] DID-NOT-FIND-ACCT-IN-CARDXREF (level: 88)
    public static final String DID_NOT_FIND_ACCT_IN_CARDXREF = "Did not find this account in account card xref file";
    // [T-Up#INFO][COACTVWC.cbl, LINE #130] DID-NOT-FIND-ACCT-IN-ACCTDAT (level: 88)
    public static final String DID_NOT_FIND_ACCT_IN_ACCTDAT = "Did not find this account in account master file";
    // [T-Up#INFO][COACTVWC.cbl, LINE #132] DID-NOT-FIND-CUST-IN-CUSTDAT (level: 88)
    public static final String DID_NOT_FIND_CUST_IN_CUSTDAT = "Did not find associated customer in master file";
    // [T-Up#INFO][COACTVWC.cbl, LINE #134] XREF-READ-ERROR (level: 88)
    public static final String XREF_READ_ERROR = "Error reading account card xref File";
    // [T-Up#INFO][COACTVWC.cbl, LINE #136] CODING-TO-BE-DONE (level: 88)
    public static final String CODING_TO_BE_DONE = "Looks Good.... so far";

    public void setWsInputFlag(String source) {
        wsInputFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsPfkFlag(String source) {
        wsPfkFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsEditAcctFlag(String source) {
        wsEditAcctFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsEditCustFlag(String source) {
        wsEditCustFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsLongMsg(String source) {
        wsLongMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 500), 500);
    }

    public void setWsInfoMsg(String source) {
        wsInfoMsg = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setWsReturnMsg(String source) {
        wsReturnMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 75), 75);
    }

    public static CoactvwcWsMiscStorage createDefaultValueInstance() {
        return new CoactvwcWsMiscStorage.builder()
                .wsCicsProcessngVars(
                        CoactvwcWsCicsProcessngVars
                                .createDefaultValueInstance())
                .wsXrefRid(CoactvwcWsXrefRid.createDefaultValueInstance())
                .wsFileReadFlags(
                        CoactvwcWsFileReadFlags.createDefaultValueInstance())
                .wsFileErrorMessage(
                        CoactvwcWsFileErrorMessage.createDefaultValueInstance())
                .build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 749), 749);
        wsCicsProcessngVars.set(source.substring(0, 12));
        wsInputFlag = source.substring(12, 13);
        wsPfkFlag = source.substring(13, 14);
        wsEditAcctFlag = source.substring(14, 15);
        wsEditCustFlag = source.substring(15, 16);
        wsXrefRid.set(source.substring(16, 52));
        wsFileReadFlags.set(source.substring(52, 54));
        wsFileErrorMessage.set(source.substring(54, 134));
        wsLongMsg = source.substring(134, 634);
        wsInfoMsg = source.substring(634, 674);
        wsReturnMsg = source.substring(674, 749);
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(wsCicsProcessngVars.get());
        sb.append(wsInputFlag);
        sb.append(wsPfkFlag);
        sb.append(wsEditAcctFlag);
        sb.append(wsEditCustFlag);
        sb.append(wsXrefRid.get());
        sb.append(wsFileReadFlags.get());
        sb.append(wsFileErrorMessage.get());
        sb.append(wsLongMsg);
        sb.append(wsInfoMsg);
        sb.append(wsReturnMsg);
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCicsProcessngVars().toString());
        sb.append(getWsInputFlag());
        sb.append(getWsPfkFlag());
        sb.append(getWsEditAcctFlag());
        sb.append(getWsEditCustFlag());
        sb.append(getWsXrefRid().toString());
        sb.append(getWsFileReadFlags().toString());
        sb.append(getWsFileErrorMessage().toString());
        sb.append(getWsLongMsg());
        sb.append(getWsInfoMsg());
        sb.append(getWsReturnMsg());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcWsCicsProcessngVars {
        // [T-Up#INFO][COACTVWC.cbl, LINE #40] WS-RESP-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsRespCd = 0;
        // [T-Up#INFO][COACTVWC.cbl, LINE #42] WS-REAS-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsReasCd = 0;
        // [T-Up#INFO][COACTVWC.cbl, LINE #44] WS-TRANID (level: 7)
        private @Getter @Builder.Default String wsTranid = StringUtils.repeat(
                ' ', 4);

        public void setWsTranid(String source) {
            wsTranid = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
        }

        public static CoactvwcWsCicsProcessngVars createDefaultValueInstance() {
            return new CoactvwcWsCicsProcessngVars.builder().wsRespCd(0)
                    .wsReasCd(0).wsTranid(StringUtils.repeat(' ', 4)).build();
        }

        public void set(String source) {
            ByteBuffer tempByteBuffer1;
            source = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
            try {
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.put(source.substring(0, 4).getBytes(
                        StandardCharsets.ISO_8859_1));
                tempByteBuffer1.flip();
                wsRespCd = tempByteBuffer1.getInt();
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsRespCd = 0;
            }
            try {
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.put(source.substring(4, 8).getBytes(
                        StandardCharsets.ISO_8859_1));
                tempByteBuffer1.flip();
                wsReasCd = tempByteBuffer1.getInt();
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsReasCd = 0;
            }
            wsTranid = source.substring(8, 12);
        }

        public String get() {
            ByteBuffer tempByteBuffer1;
            StringBuilder sb = new StringBuilder();
            tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
            tempByteBuffer1.putInt(wsRespCd);
            tempByteBuffer1.flip();
            sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                    .toString());
            tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
            tempByteBuffer1.putInt(wsReasCd);
            tempByteBuffer1.flip();
            sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                    .toString());
            sb.append(wsTranid);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getWsRespCd()));
            sb.append(String.valueOf(getWsReasCd()));
            sb.append(getWsTranid());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcWsXrefRid {
        // [T-Up#INFO][COACTVWC.cbl, LINE #73] WS-CARD-RID-CARDNUM (level: 10)
        private @Getter @Builder.Default String wsCardRidCardnum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COACTVWC.cbl, LINE #74] WS-CARD-RID-CUST-ID (level: 10)
        private @Getter @Setter int wsCardRidCustId;

        public String getWsCardRidCustIdX() {
            String temp1 = DataConverter.convZonedLongToString(
                    getWsCardRidCustId(), 9);
            return temp1;
        }

        public void setWsCardRidCustIdX(String source) {
            try {
                setWsCardRidCustId((int) DataConverter.convZonedStringToLong(
                        source, 9));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidCustId(0);
            }
        }

        // [T-Up#INFO][COACTVWC.cbl, LINE #77] WS-CARD-RID-ACCT-ID (level: 10)
        private @Getter @Setter long wsCardRidAcctId;

        public String getWsCardRidAcctIdX() {
            String temp1 = DataConverter.convZonedLongToString(
                    getWsCardRidAcctId(), 11);
            return temp1;
        }

        public void setWsCardRidAcctIdX(String source) {
            try {
                setWsCardRidAcctId(DataConverter.convZonedStringToLong(source,
                        11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidAcctId(0);
            }
        }

        public void setWsCardRidCardnum(String source) {
            wsCardRidCardnum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }

        public static CoactvwcWsXrefRid createDefaultValueInstance() {
            return new CoactvwcWsXrefRid.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 36), 36);
            wsCardRidCardnum = source.substring(0, 16);
            try {
                wsCardRidCustId = (int) DataConverter.convZonedStringToLong(
                        source.substring(16, 25), 9);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsCardRidCustId = 0;
            }
            try {
                wsCardRidAcctId = DataConverter.convZonedStringToLong(
                        source.substring(25, 36), 11);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsCardRidAcctId = 0;
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsCardRidCardnum);
            sb.append(DataConverter.convZonedLongToString(wsCardRidCustId, 9));
            sb.append(DataConverter.convZonedLongToString(wsCardRidAcctId, 11));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCardRidCardnum());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) wsCardRidCustId, "000000000"));
            sb.append(PictureFormatter.intFormatWithoutSign(wsCardRidAcctId,
                    "00000000000"));
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcWsFileReadFlags {
        // [T-Up#INFO][COACTVWC.cbl, LINE #81] WS-ACCOUNT-MASTER-READ-FLAG (level: 10)
        private @Getter @Builder.Default String wsAccountMasterReadFlag = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTVWC.cbl, LINE #82] FOUND-ACCT-IN-MASTER (level: 88)
        public static final String FOUND_ACCT_IN_MASTER = "1";
        // [T-Up#INFO][COACTVWC.cbl, LINE #83] WS-CUST-MASTER-READ-FLAG (level: 10)
        private @Getter @Builder.Default String wsCustMasterReadFlag = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTVWC.cbl, LINE #84] FOUND-CUST-IN-MASTER (level: 88)
        public static final String FOUND_CUST_IN_MASTER = "1";

        public void setWsAccountMasterReadFlag(String source) {
            wsAccountMasterReadFlag = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsCustMasterReadFlag(String source) {
            wsCustMasterReadFlag = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public static CoactvwcWsFileReadFlags createDefaultValueInstance() {
            return new CoactvwcWsFileReadFlags.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
            wsAccountMasterReadFlag = source.substring(0, 1);
            wsCustMasterReadFlag = source.substring(1, 2);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsAccountMasterReadFlag);
            sb.append(wsCustMasterReadFlag);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsAccountMasterReadFlag());
            sb.append(getWsCustMasterReadFlag());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactvwcWsFileErrorMessage {
        // [T-Up#INFO][COACTVWC.cbl, LINE #86] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER1 = "File Error: ";
        // [T-Up#INFO][COACTVWC.cbl, LINE #88] ERROR-OPNAME (level: 10)
        private @Getter @Builder.Default String errorOpname = StringUtils
                .repeat(' ', 8);
        // [T-Up#INFO][COACTVWC.cbl, LINE #90] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER2 = " on ";
        // [T-Up#INFO][COACTVWC.cbl, LINE #92] ERROR-FILE (level: 10)
        private @Getter @Builder.Default String errorFile = StringUtils.repeat(
                ' ', 9);
        // [T-Up#INFO][COACTVWC.cbl, LINE #94] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER3 = " returned RESP ";
        // [T-Up#INFO][COACTVWC.cbl, LINE #97] ERROR-RESP (level: 10)
        private @Getter @Builder.Default String errorResp = StringUtils.repeat(
                ' ', 10);
        // [T-Up#INFO][COACTVWC.cbl, LINE #99] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER4 = ",RESP2 ";
        // [T-Up#INFO][COACTVWC.cbl, LINE #101] ERROR-RESP2 (level: 10)
        private @Getter @Builder.Default String errorResp2 = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTVWC.cbl, LINE #103] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER5 = StringUtils.repeat(
                ' ', 5);

        public void setOFFILLER1(String source) {
            OFFILLER1 = StringUtils.truncate(StringUtils.rightPad(source, 12),
                    12);
        }

        public void setErrorOpname(String source) {
            errorOpname = StringUtils.truncate(StringUtils.rightPad(source, 8),
                    8);
        }

        public void setOFFILLER2(String source) {
            OFFILLER2 = StringUtils
                    .truncate(StringUtils.rightPad(source, 4), 4);
        }

        public void setErrorFile(String source) {
            errorFile = StringUtils
                    .truncate(StringUtils.rightPad(source, 9), 9);
        }

        public void setOFFILLER3(String source) {
            OFFILLER3 = StringUtils.truncate(StringUtils.rightPad(source, 15),
                    15);
        }

        public void setErrorResp(String source) {
            errorResp = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setOFFILLER4(String source) {
            OFFILLER4 = StringUtils
                    .truncate(StringUtils.rightPad(source, 7), 7);
        }

        public void setErrorResp2(String source) {
            errorResp2 = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setOFFILLER5(String source) {
            OFFILLER5 = StringUtils
                    .truncate(StringUtils.rightPad(source, 5), 5);
        }

        public static CoactvwcWsFileErrorMessage createDefaultValueInstance() {
            return new CoactvwcWsFileErrorMessage.builder()
                    .OFFILLER1(StringUtils.repeat(' ', 12))
                    .errorOpname(StringUtils.repeat(' ', 8))
                    .OFFILLER2(StringUtils.repeat(' ', 4))
                    .errorFile(StringUtils.repeat(' ', 9))
                    .OFFILLER3(StringUtils.repeat(' ', 15))
                    .errorResp(StringUtils.repeat(' ', 10))
                    .OFFILLER4(StringUtils.repeat(' ', 7))
                    .errorResp2(StringUtils.repeat(' ', 10))
                    .OFFILLER5(StringUtils.repeat(' ', 5)).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            OFFILLER1 = source.substring(0, 12);
            errorOpname = source.substring(12, 20);
            OFFILLER2 = source.substring(20, 24);
            errorFile = source.substring(24, 33);
            OFFILLER3 = source.substring(33, 48);
            errorResp = source.substring(48, 58);
            OFFILLER4 = source.substring(58, 65);
            errorResp2 = source.substring(65, 75);
            OFFILLER5 = source.substring(75, 80);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(errorOpname);
            sb.append(OFFILLER2);
            sb.append(errorFile);
            sb.append(OFFILLER3);
            sb.append(errorResp);
            sb.append(OFFILLER4);
            sb.append(errorResp2);
            sb.append(OFFILLER5);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(getErrorOpname());
            sb.append(OFFILLER2);
            sb.append(getErrorFile());
            sb.append(OFFILLER3);
            sb.append(getErrorResp());
            sb.append(OFFILLER4);
            sb.append(getErrorResp2());
            sb.append(OFFILLER5);
            return sb.toString();
        }
    }
}
