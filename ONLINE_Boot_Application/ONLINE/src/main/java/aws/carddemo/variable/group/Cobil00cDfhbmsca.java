package aws.carddemo.variable.group;

import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:47 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor class Cobil00cDfhbmsca {
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #3] DFHBMPEM (level: 2)
    private @Getter String dfhbmpem = "";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #4] DFHBMPNL (level: 2)
    private @Getter String dfhbmpnl = "";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #5] DFHBMPFF (level: 2)
    private @Getter String dfhbmpff = "\f";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #6] DFHBMPCR (level: 2)
    private @Getter String dfhbmpcr = "\r";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #7] DFHBMASK (level: 2)
    private @Getter String dfhbmask = "0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #8] DFHBMUNP (level: 2)
    private @Getter String dfhbmunp = " ";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #9] DFHBMUNN (level: 2)
    private @Getter String dfhbmunn = "&";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #10] DFHBMPRO (level: 2)
    private @Getter String dfhbmpro = "-";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #11] DFHBMBRY (level: 2)
    private @Getter String dfhbmbry = "H";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #12] DFHBMDAR (level: 2)
    private @Getter String dfhbmdar = "<";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #13] DFHBMFSE (level: 2)
    private @Getter String dfhbmfse = "A";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #14] DFHBMPRF (level: 2)
    private @Getter String dfhbmprf = "/";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #15] DFHBMASF (level: 2)
    private @Getter String dfhbmasf = "1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #16] DFHBMASB (level: 2)
    private @Getter String dfhbmasb = "8";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #17] DFHBMEOF (level: 2)
    private @Getter String dfhbmeof = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #18] DFHBMCUR (level: 2)
    private @Getter String dfhbmcur = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #19] DFHBMEC (level: 2)
    private @Getter String dfhbmec = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #20] DFHBMFLG (level: 2)
    private @Getter String dfhbmflg = StringUtils.repeat(' ', 1);
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #21] DFHERASE (level: 88)
    public static final String DFHERASE_1 = "�";
    public static final String DFHERASE_2 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #22] DFHCURSR (level: 88)
    public static final String DFHCURSR_1 = "\2";
    public static final String DFHCURSR_2 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #23] DFHBMDET (level: 2)
    private @Getter String dfhbmdet = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #24] DFHBMPSO-BIN (level: 2)
    private @Getter @Setter int dfhbmpsoBin = 3599;

    public _OFFILLER1 getOFFILLER1() {
        return _OFFILLER1.builder().dfhbmpso(getDfhbmpso())
                .dfhbmpsi(getDfhbmpsi()).build();
    }

    public void setOFFILLER1(String source) {
        setDfhbmpso(source.substring(0, 1));
        setDfhbmpsi(source.substring(1, 2));
    }

    public void setOFFILLER1(_OFFILLER1 source) {
        setOFFILLER1(source.toString());
    }

    public String getDfhbmpso() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhbmpsoBin());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1.substring(0, 1);
    }

    public void setDfhbmpso(String source) {
        ByteBuffer tempByteBuffer1;
        ByteBuffer tempByteBuffer2;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhbmpsoBin());
        tempByteBuffer1.flip();
        tempByteBuffer2 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer2.put(StringUtils.overlay(
                StandardCharsets.ISO_8859_1.decode(tempByteBuffer1).toString(),
                source, 0, 1).getBytes(StandardCharsets.ISO_8859_1));
        tempByteBuffer2.flip();
        setDfhbmpsoBin(tempByteBuffer2.getShort());
    }

    public String getDfhbmpsi() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhbmpsoBin());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1.substring(1);
    }

    public void setDfhbmpsi(String source) {
        ByteBuffer tempByteBuffer1;
        ByteBuffer tempByteBuffer2;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhbmpsoBin());
        tempByteBuffer1.flip();
        tempByteBuffer2 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer2.put(StringUtils.overlay(
                StandardCharsets.ISO_8859_1.decode(tempByteBuffer1).toString(),
                source, 1, 2).getBytes(StandardCharsets.ISO_8859_1));
        tempByteBuffer2.flip();
        setDfhbmpsoBin(tempByteBuffer2.getShort());
    }

    // [T-Up#INFO][DFHBMSCA.cpy, LINE #29] DFHSA (level: 2)
    private @Getter String dfhsa = "(";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #30] DFHCOLOR (level: 2)
    private @Getter String dfhcolor = "B";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #31] DFHPS (level: 2)
    private @Getter String dfhps = "C";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #32] DFHHLT (level: 2)
    private @Getter String dfhhlt = "A";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #33] DFH3270 (level: 2)
    private @Getter String dfh3270 = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #34] DFHVAL (level: 2)
    private @Getter String dfhval = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #35] DFHOUTLN (level: 2)
    private @Getter String dfhoutln = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #36] DFHBKTRN (level: 2)
    private @Getter String dfhbktrn = "F";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #37] DFHALL (level: 2)
    private @Getter String dfhall = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #38] DFHERROR (level: 2)
    private @Getter String dfherror = "?";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #39] DFHDFT (level: 2)
    private @Getter String dfhdft = "�";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #40] DFHDFCOL (level: 2)
    private @Getter String dfhdfcol = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #41] DFHBLUE (level: 2)
    private @Getter String dfhblue = "1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #42] DFHRED (level: 2)
    private @Getter String dfhred = "2";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #43] DFHPINK (level: 2)
    private @Getter String dfhpink = "3";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #44] DFHGREEN (level: 2)
    private @Getter String dfhgreen = "4";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #45] DFHTURQ (level: 2)
    private @Getter String dfhturq = "5";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #46] DFHYELLO (level: 2)
    private @Getter String dfhyello = "6";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #47] DFHNEUTR (level: 2)
    private @Getter String dfhneutr = "7";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #48] DFHBASE (level: 2)
    private @Getter String dfhbase = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #49] DFHDFHI (level: 2)
    private @Getter String dfhdfhi = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #50] DFHBLINK (level: 2)
    private @Getter String dfhblink = "1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #51] DFHREVRS (level: 2)
    private @Getter String dfhrevrs = "2";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #52] DFHUNDLN (level: 2)
    private @Getter String dfhundln = "4";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #53] DFHMFIL (level: 2)
    private @Getter String dfhmfil = "\4";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #54] DFHMENT (level: 2)
    private @Getter String dfhment = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #55] DFHMFE (level: 2)
    private @Getter String dfhmfe = "\6";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #56] DFHUNNOD (level: 2)
    private @Getter String dfhunnod = "(";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #57] DFHUNIMD (level: 2)
    private @Getter String dfhunimd = "I";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #58] DFHUNNUM (level: 2)
    private @Getter String dfhunnum = "J";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #59] DFHUNNUB (level: 2)
    private @Getter String dfhunnub = "Q";
    // * ABOVE VALUE DFHUNNUB ADDED BY APAR PN67669                      
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #61] DFHUNINT (level: 2)
    private @Getter String dfhunint = "R";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #62] DFHUNNON (level: 2)
    private @Getter String dfhunnon = ")";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #63] DFHPROTI (level: 2)
    private @Getter String dfhproti = "Y";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #64] DFHPROTN (level: 2)
    private @Getter String dfhprotn = "%";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #65] DFHMT (level: 2)
    private @Getter String dfhmt = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #66] DFHMFT (level: 2)
    private @Getter String dfhmft = "\5";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #67] DFHMET (level: 2)
    private @Getter String dfhmet = "\3";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #68] DFHMFET (level: 2)
    private @Getter String dfhmfet = "\7";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #69] DFHDFFR (level: 2)
    private @Getter String dfhdffr = "\0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #70] DFHLEFT (level: 2)
    private @Getter String dfhleft = "\b";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #71] DFHOVER (level: 2)
    private @Getter String dfhover = "\4";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #72] DFHRIGHT (level: 2)
    private @Getter String dfhright = "\2";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #73] DFHUNDER (level: 2)
    private @Getter String dfhunder = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #74] DFHBOX-BIN (level: 2)
    private @Getter @Setter int dfhboxBin = 15;

    public _OFFILLER2 getOFFILLER2() {
        return _OFFILLER2.builder().OFFILLER3(getOFFILLER3())
                .dfhbox(getDfhbox()).build();
    }

    public void setOFFILLER2(String source) {
        setOFFILLER3(source.substring(0, 1));
        setDfhbox(source.substring(1, 2));
    }

    public void setOFFILLER2(_OFFILLER2 source) {
        setOFFILLER2(source.toString());
    }

    public String getOFFILLER3() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhboxBin());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1.substring(0, 1);
    }

    public void setOFFILLER3(String source) {
        ByteBuffer tempByteBuffer1;
        ByteBuffer tempByteBuffer2;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhboxBin());
        tempByteBuffer1.flip();
        tempByteBuffer2 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer2.put(StringUtils.overlay(
                StandardCharsets.ISO_8859_1.decode(tempByteBuffer1).toString(),
                source, 0, 1).getBytes(StandardCharsets.ISO_8859_1));
        tempByteBuffer2.flip();
        setDfhboxBin(tempByteBuffer2.getShort());
    }

    public String getDfhbox() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhboxBin());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1.substring(1);
    }

    public void setDfhbox(String source) {
        ByteBuffer tempByteBuffer1;
        ByteBuffer tempByteBuffer2;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getDfhboxBin());
        tempByteBuffer1.flip();
        tempByteBuffer2 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer2.put(StringUtils.overlay(
                StandardCharsets.ISO_8859_1.decode(tempByteBuffer1).toString(),
                source, 1, 2).getBytes(StandardCharsets.ISO_8859_1));
        tempByteBuffer2.flip();
        setDfhboxBin(tempByteBuffer2.getShort());
    }

    // [T-Up#INFO][DFHBMSCA.cpy, LINE #79] DFHSOSI (level: 2)
    private @Getter String dfhsosi = "\1";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #80] DFHTRANS (level: 2)
    private @Getter String dfhtrans = "0";
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #81] DFHOPAQ (level: 2)
    private @Getter String dfhopaq = "�";

    public void setDfhbmpem(String source) {
        dfhbmpem = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpnl(String source) {
        dfhbmpnl = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpff(String source) {
        dfhbmpff = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpcr(String source) {
        dfhbmpcr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmask(String source) {
        dfhbmask = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmunp(String source) {
        dfhbmunp = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmunn(String source) {
        dfhbmunn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmpro(String source) {
        dfhbmpro = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmbry(String source) {
        dfhbmbry = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmdar(String source) {
        dfhbmdar = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmfse(String source) {
        dfhbmfse = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmprf(String source) {
        dfhbmprf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmasf(String source) {
        dfhbmasf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmasb(String source) {
        dfhbmasb = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmeof(String source) {
        dfhbmeof = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmcur(String source) {
        dfhbmcur = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmec(String source) {
        dfhbmec = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmflg(String source) {
        dfhbmflg = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbmdet(String source) {
        dfhbmdet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhsa(String source) {
        dfhsa = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhcolor(String source) {
        dfhcolor = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhps(String source) {
        dfhps = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhhlt(String source) {
        dfhhlt = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfh3270(String source) {
        dfh3270 = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhval(String source) {
        dfhval = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhoutln(String source) {
        dfhoutln = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbktrn(String source) {
        dfhbktrn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhall(String source) {
        dfhall = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfherror(String source) {
        dfherror = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdft(String source) {
        dfhdft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdfcol(String source) {
        dfhdfcol = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhblue(String source) {
        dfhblue = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhred(String source) {
        dfhred = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhpink(String source) {
        dfhpink = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhgreen(String source) {
        dfhgreen = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhturq(String source) {
        dfhturq = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhyello(String source) {
        dfhyello = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhneutr(String source) {
        dfhneutr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhbase(String source) {
        dfhbase = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdfhi(String source) {
        dfhdfhi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhblink(String source) {
        dfhblink = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhrevrs(String source) {
        dfhrevrs = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhundln(String source) {
        dfhundln = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfil(String source) {
        dfhmfil = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhment(String source) {
        dfhment = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfe(String source) {
        dfhmfe = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnod(String source) {
        dfhunnod = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunimd(String source) {
        dfhunimd = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnum(String source) {
        dfhunnum = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnub(String source) {
        dfhunnub = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunint(String source) {
        dfhunint = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunnon(String source) {
        dfhunnon = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhproti(String source) {
        dfhproti = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhprotn(String source) {
        dfhprotn = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmt(String source) {
        dfhmt = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmft(String source) {
        dfhmft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmet(String source) {
        dfhmet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhmfet(String source) {
        dfhmfet = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhdffr(String source) {
        dfhdffr = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhleft(String source) {
        dfhleft = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhover(String source) {
        dfhover = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhright(String source) {
        dfhright = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhunder(String source) {
        dfhunder = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhsosi(String source) {
        dfhsosi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhtrans(String source) {
        dfhtrans = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setDfhopaq(String source) {
        dfhopaq = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getDfhbmpem());
        sb.append(getDfhbmpnl());
        sb.append(getDfhbmpff());
        sb.append(getDfhbmpcr());
        sb.append(getDfhbmask());
        sb.append(getDfhbmunp());
        sb.append(getDfhbmunn());
        sb.append(getDfhbmpro());
        sb.append(getDfhbmbry());
        sb.append(getDfhbmdar());
        sb.append(getDfhbmfse());
        sb.append(getDfhbmprf());
        sb.append(getDfhbmasf());
        sb.append(getDfhbmasb());
        sb.append(getDfhbmeof());
        sb.append(getDfhbmcur());
        sb.append(getDfhbmec());
        sb.append(getDfhbmflg());
        sb.append(getDfhbmdet());
        sb.append(String.valueOf(getDfhbmpsoBin()));
        sb.append(getDfhsa());
        sb.append(getDfhcolor());
        sb.append(getDfhps());
        sb.append(getDfhhlt());
        sb.append(getDfh3270());
        sb.append(getDfhval());
        sb.append(getDfhoutln());
        sb.append(getDfhbktrn());
        sb.append(getDfhall());
        sb.append(getDfherror());
        sb.append(getDfhdft());
        sb.append(getDfhdfcol());
        sb.append(getDfhblue());
        sb.append(getDfhred());
        sb.append(getDfhpink());
        sb.append(getDfhgreen());
        sb.append(getDfhturq());
        sb.append(getDfhyello());
        sb.append(getDfhneutr());
        sb.append(getDfhbase());
        sb.append(getDfhdfhi());
        sb.append(getDfhblink());
        sb.append(getDfhrevrs());
        sb.append(getDfhundln());
        sb.append(getDfhmfil());
        sb.append(getDfhment());
        sb.append(getDfhmfe());
        sb.append(getDfhunnod());
        sb.append(getDfhunimd());
        sb.append(getDfhunnum());
        sb.append(getDfhunnub());
        sb.append(getDfhunint());
        sb.append(getDfhunnon());
        sb.append(getDfhproti());
        sb.append(getDfhprotn());
        sb.append(getDfhmt());
        sb.append(getDfhmft());
        sb.append(getDfhmet());
        sb.append(getDfhmfet());
        sb.append(getDfhdffr());
        sb.append(getDfhleft());
        sb.append(getDfhover());
        sb.append(getDfhright());
        sb.append(getDfhunder());
        sb.append(String.valueOf(getDfhboxBin()));
        sb.append(getDfhsosi());
        sb.append(getDfhtrans());
        sb.append(getDfhopaq());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER1 {
        // [T-Up#INFO][DFHBMSCA.cpy, LINE #27] DFHBMPSO (level: 3)
        private @Getter String dfhbmpso = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][DFHBMSCA.cpy, LINE #28] DFHBMPSI (level: 3)
        private @Getter String dfhbmpsi = StringUtils.repeat(' ', 1);

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(dfhbmpso);
            sb.append(dfhbmpsi);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER2 {
        // [T-Up#INFO][DFHBMSCA.cpy, LINE #77] FILLER (level: 3)
        private @Getter String OFFILLER3 = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][DFHBMSCA.cpy, LINE #78] DFHBOX (level: 3)
        private @Getter String dfhbox = StringUtils.repeat(' ', 1);

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER3);
            sb.append(dfhbox);
            return sb.toString();
        }
    }
}
