package aws.carddemo;

import com.tmax.openframe.online.service.api.AbendHandler;
import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.CocrdlicInputDto;
import aws.carddemo.mapper.CocrdupcMapperInterface.*;
import aws.carddemo.dto.Comen01cInputDto;
import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.CocrdupcInputDto;
import com.tmax.openframe.online.service.exception.ConditionException;
import aws.carddemo.dto.CocrdupcOutputDto;
import aws.carddemo.dto.AwsM2CarddemoCarddataVsamKsdsDto;
import com.tmax.openframe.online.service.api.ReadPointManager;
import com.tmax.openframe.online.service.api.RecordKeyAccessor;
import com.tmax.openframe.online.service.exception.OnlineException;
import com.tmax.openframe.online.service.exception.AbendException;
import static aws.carddemo.variable.group.CocrdupcCarddemoCommarea.CocrdupcCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.CocrdupcCcWorkAreas.CocrdupcCcWorkArea.*;
import static aws.carddemo.variable.group.CocrdupcWsMiscStorage.*;
import static aws.carddemo.variable.group.CocrdupcWsThisProgcommarea.CocrdupcCardUpdateScreenData.*;
import aws.carddemo.variable.CocrdupcVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:45 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COCRDUPC.cbl</li>
 * <li>Variable container class: {@link CocrdupcVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cocrdupc {
    private final ReadPointManager readPointManager;
    private final RecordKeyAccessor recordKeyAccessor;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    private final AbendHandler abendHandler;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> _0000Main = this::_0000Main;
    Consumer<OpenFrameContext> commonReturn = this::commonReturn;
    Consumer<OpenFrameContext> _0000MainExit = this::_0000MainExit;
    Consumer<OpenFrameContext> _1000ProcessInputs = this::_1000ProcessInputs;
    Consumer<OpenFrameContext> _1000ProcessInputsExit = this::_1000ProcessInputsExit;
    Consumer<OpenFrameContext> _1100ReceiveMap = this::_1100ReceiveMap;
    Consumer<OpenFrameContext> _1100ReceiveMapExit = this::_1100ReceiveMapExit;
    Consumer<OpenFrameContext> _1200EditMapInputs = this::_1200EditMapInputs;
    Consumer<OpenFrameContext> _1200EditMapInputsExit = this::_1200EditMapInputsExit;
    Consumer<OpenFrameContext> _1210EditAccount = this::_1210EditAccount;
    Consumer<OpenFrameContext> _1210EditAccountExit = this::_1210EditAccountExit;
    Consumer<OpenFrameContext> _1220EditCard = this::_1220EditCard;
    Consumer<OpenFrameContext> _1220EditCardExit = this::_1220EditCardExit;
    Consumer<OpenFrameContext> _1230EditName = this::_1230EditName;
    Consumer<OpenFrameContext> _1230EditNameExit = this::_1230EditNameExit;
    Consumer<OpenFrameContext> _1240EditCardstatus = this::_1240EditCardstatus;
    Consumer<OpenFrameContext> _1240EditCardstatusExit = this::_1240EditCardstatusExit;
    Consumer<OpenFrameContext> _1250EditExpiryMon = this::_1250EditExpiryMon;
    Consumer<OpenFrameContext> _1250EditExpiryMonExit = this::_1250EditExpiryMonExit;
    Consumer<OpenFrameContext> _1260EditExpiryYear = this::_1260EditExpiryYear;
    Consumer<OpenFrameContext> _1260EditExpiryYearExit = this::_1260EditExpiryYearExit;
    Consumer<OpenFrameContext> _2000DecideAction = this::_2000DecideAction;
    Consumer<OpenFrameContext> _2000DecideActionExit = this::_2000DecideActionExit;
    Consumer<OpenFrameContext> _3000SendMap = this::_3000SendMap;
    Consumer<OpenFrameContext> _3000SendMapExit = this::_3000SendMapExit;
    Consumer<OpenFrameContext> _3100ScreenInit = this::_3100ScreenInit;
    Consumer<OpenFrameContext> _3100ScreenInitExit = this::_3100ScreenInitExit;
    Consumer<OpenFrameContext> _3200SetupScreenVars = this::_3200SetupScreenVars;
    Consumer<OpenFrameContext> _3200SetupScreenVarsExit = this::_3200SetupScreenVarsExit;
    Consumer<OpenFrameContext> _3250SetupInfomsg = this::_3250SetupInfomsg;
    Consumer<OpenFrameContext> _3250SetupInfomsgExit = this::_3250SetupInfomsgExit;
    Consumer<OpenFrameContext> _3300SetupScreenAttrs = this::_3300SetupScreenAttrs;
    Consumer<OpenFrameContext> _3300SetupScreenAttrsExit = this::_3300SetupScreenAttrsExit;
    Consumer<OpenFrameContext> _3400SendScreen = this::_3400SendScreen;
    Consumer<OpenFrameContext> _3400SendScreenExit = this::_3400SendScreenExit;
    Consumer<OpenFrameContext> _9000ReadData = this::_9000ReadData;
    Consumer<OpenFrameContext> _9000ReadDataExit = this::_9000ReadDataExit;
    Consumer<OpenFrameContext> _9100GetcardByacctcard = this::_9100GetcardByacctcard;
    Consumer<OpenFrameContext> _9100GetcardByacctcardExit = this::_9100GetcardByacctcardExit;
    Consumer<OpenFrameContext> _9200WriteProcessing = this::_9200WriteProcessing;
    Consumer<OpenFrameContext> _9200WriteProcessingExit = this::_9200WriteProcessingExit;
    Consumer<OpenFrameContext> _9300CheckChangeInRec = this::_9300CheckChangeInRec;
    Consumer<OpenFrameContext> _9300CheckChangeInRecExit = this::_9300CheckChangeInRecExit;
    Consumer<OpenFrameContext> yyyyStorePfkey = this::yyyyStorePfkey;
    Consumer<OpenFrameContext> yyyyStorePfkeyExit = this::yyyyStorePfkeyExit;
    Consumer<OpenFrameContext> abendRoutine = this::abendRoutine;
    Consumer<OpenFrameContext> abendRoutineExit = this::abendRoutineExit;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(_0000Main);
        methodList.add(commonReturn);
        methodList.add(_0000MainExit);
        methodList.add(_1000ProcessInputs);
        methodList.add(_1000ProcessInputsExit);
        methodList.add(_1100ReceiveMap);
        methodList.add(_1100ReceiveMapExit);
        methodList.add(_1200EditMapInputs);
        methodList.add(_1200EditMapInputsExit);
        methodList.add(_1210EditAccount);
        methodList.add(_1210EditAccountExit);
        methodList.add(_1220EditCard);
        methodList.add(_1220EditCardExit);
        methodList.add(_1230EditName);
        methodList.add(_1230EditNameExit);
        methodList.add(_1240EditCardstatus);
        methodList.add(_1240EditCardstatusExit);
        methodList.add(_1250EditExpiryMon);
        methodList.add(_1250EditExpiryMonExit);
        methodList.add(_1260EditExpiryYear);
        methodList.add(_1260EditExpiryYearExit);
        methodList.add(_2000DecideAction);
        methodList.add(_2000DecideActionExit);
        methodList.add(_3000SendMap);
        methodList.add(_3000SendMapExit);
        methodList.add(_3100ScreenInit);
        methodList.add(_3100ScreenInitExit);
        methodList.add(_3200SetupScreenVars);
        methodList.add(_3200SetupScreenVarsExit);
        methodList.add(_3250SetupInfomsg);
        methodList.add(_3250SetupInfomsgExit);
        methodList.add(_3300SetupScreenAttrs);
        methodList.add(_3300SetupScreenAttrsExit);
        methodList.add(_3400SendScreen);
        methodList.add(_3400SendScreenExit);
        methodList.add(_9000ReadData);
        methodList.add(_9000ReadDataExit);
        methodList.add(_9100GetcardByacctcard);
        methodList.add(_9100GetcardByacctcardExit);
        methodList.add(_9200WriteProcessing);
        methodList.add(_9200WriteProcessingExit);
        methodList.add(_9300CheckChangeInRec);
        methodList.add(_9300CheckChangeInRecExit);
        methodList.add(yyyyStorePfkey);
        methodList.add(yyyyStorePfkeyExit);
        methodList.add(abendRoutine);
        methodList.add(abendRoutineExit);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cocrdupc") == null) {
            CocrdupcVariableContainer container = new CocrdupcVariableContainer();
            context.setProgramVariableContainer("Cocrdupc", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ***************************************************************** 
    // * Program:     COCRDUPC.CBL                                     * 
    // * Layer:       Business logic                                   * 
    // * Function:    Accept and process credit card detail request    * 
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             

    void _0000Main(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #370] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND                                       
                                 LABEL(ABEND-ROUTINE)                               
                       END-EXEC
         */
        abendHandler.setLabel(abendRoutine);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #374] INITIALIZE statement
        container.getCcWorkAreas().setCcWorkArea(
                CocrdupcCcWorkAreas.CocrdupcCcWorkArea
                        .createDefaultValueInstance());
        container.setWsMiscStorage(CocrdupcWsMiscStorage
                .createDefaultValueInstance());
        container.setWsCommarea(StringUtils.repeat(' ', 2000));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #378] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcAcctIdN((long) 0);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #379] MOVE statement
        container.getCcWorkAreas().getCcWorkArea().setCcCardNumN((long) 0);
        // ***************************************************************** 
        // * Store our context                                               
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #383] MOVE statement
        container.getWsMiscStorage().getWsCicsProcessngVars()
                .setWsTranid(container.getWsLiterals().getLitThistranid());
        // ***************************************************************** 
        // * Ensure error message is cleared                               * 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #387] SET statement
        container.getWsMiscStorage().setWsReturnMsg(WS_RETURN_MSG_OFF);
        // ***************************************************************** 
        // * Store passed data if  any                *                      
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #391] IF statement
        if (task.hasCommarea() == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0
                && !(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #394] INITIALIZE statement
            container.setCarddemoCommarea(CocrdupcCarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #396] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #397] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #399] MOVE statement
            container.getCarddemoCommarea().set(
                    container.getDfhcommarea().get().substring(0, 160));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #401] MOVE statement
            container.getWsThisProgcommarea().set(
                    container.getDfhcommarea().get().substring(160, 489));
        }
        // ***************************************************************** 
        // * Remap PFkeys as needed.                                         
        // * Store the Mapped PF Key                                         
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #410] PERFORM statement
        controlManager.run(context, yyyyStorePfkey, yyyyStorePfkeyExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // ***************************************************************** 
        // * Check the AID to see if its valid at this point               * 
        // * F3 - Exit                                                       
        // * Enter show screen again                                         
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #417] SET statement
        container.getWsMiscStorage().setWsPfkFlag(PFK_INVALID);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #418] IF statement
        if (((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_ENTER) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcardAid(), CCARD_AID_PFK03) == 0) || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcardAid(), CCARD_AID_PFK05) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OK_NOT_CONFIRMED) == 0)
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0
                && !(CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils
                        .compare(container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(),
                                CCUP_DETAILS_NOT_FETCHED_2) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #423] SET statement
            container.getWsMiscStorage().setWsPfkFlag(PFK_VALID);
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #426] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsPfkFlag(),
                PFK_INVALID) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #427] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        }
        // ***************************************************************** 
        // * Decide what to do based on inputs received                      
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #433] EVALUATE statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK03) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0 && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoMoreInfo().getCdemoLastMapset(),
                                container.getWsLiterals().getLitCclistmapset()) == 0)
                || ((CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_FAILED_1) == 0 || CobStringUtils.compare(
                        container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(), CCUP_CHANGES_FAILED_2) == 0) && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoMoreInfo().getCdemoLastMapset(),
                                container.getWsLiterals().getLitCclistmapset()) == 0)) {
            // ******************************************************************
            // *       USER PRESSES PF03 TO EXIT                                 
            // *  OR   USER IS DONE WITH UPDATE                                  
            // *            XCTL TO CALLING PROGRAM OR MAIN MENU                 
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #444] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #446] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #448] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getWsLiterals().getLitMenutranid());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #450] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToTranid(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromTranid());
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #453] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromProgram(),
                    StringUtils.repeat((char) 0x00, 8)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromProgram(),
                            StringUtils.repeat(' ', 8)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #455] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getWsLiterals().getLitMenupgm());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #457] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoToProgram(
                                container.getCarddemoCommarea()
                                        .getCdemoGeneralInfo()
                                        .getCdemoFromProgram());
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #460] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsLiterals().getLitThistranid());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #461] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #463] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoMoreInfo().getCdemoLastMapset(), container
                    .getWsLiterals().getLitCclistmapset()) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #464] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctId((long) 0);
                container.getCarddemoCommarea().getCdemoCardInfo()
                        .setCdemoCardNum((long) 0);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #468] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #469] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #470] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsLiterals().getLitThismapset());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #471] MOVE statement
            container.getCarddemoCommarea().getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsLiterals().getLitThismap());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #472] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoToProgram(), "COCRDLIC") == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #473] EXEC_CICS statement
                /*
                                           EXEC CICS                                        
                                           XCTL PROGRAM('COCRDLIC')                         
                                           COMMAREA(CARDDEMO-COMMAREA)                      
                                           END-EXEC
                 */
                CocrdlicInputDto cocrdlicInputDto = new CocrdlicInputDto();
                cocrdlicInputDto
                        .setDfhcommarea(CocrdupcCarddemoCommareaToCocrdlicDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea()));
                programControl.forward("CCLI", cocrdlicInputDto);
                context.setReturnFlag(true);
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #477] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoToProgram(), "COMEN01C") == 0) {
                    // [T-Up#INFO][COCRDUPC.cbl, LINE #478] EXEC_CICS statement
                    /*
                                               EXEC CICS                                        
                                               XCTL PROGRAM('COMEN01C')                         
                                               COMMAREA(CARDDEMO-COMMAREA)                      
                                               END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(CocrdupcCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                }
            }
        } else if ((container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER && CobStringUtils
                .compare(container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoFromProgram(), container.getWsLiterals()
                        .getLitCclistpgm()) == 0)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0 && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoGeneralInfo().getCdemoFromProgram(),
                                container.getWsLiterals().getLitCclistpgm()) == 0)) {
            // ******************************************************************
            // *       USER CAME FROM CREDIT CARD LIST SCREEN                    
            // *            SO WE ALREADY HAVE THE FILTER KEYS                   
            // *            FETCH THE ASSSOCIATED CARD DETAILS FOR UPDATE        
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #492] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #493] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #494] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #495] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #496] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcAcctIdN(
                            container.getCarddemoCommarea()
                                    .getCdemoAccountInfo().getCdemoAcctId());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #497] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcCardNumN(
                            container.getCarddemoCommarea().getCdemoCardInfo()
                                    .getCdemoCardNum());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #498] PERFORM statement
            controlManager.run(context, _9000ReadData, _9000ReadDataExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #500] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_SHOW_DETAILS);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #501] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #503] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .getCcupChangeAction(), CCUP_DETAILS_NOT_FETCHED_2) == 0) && container
                .getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER)
                || (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsLiterals().getLitMenupgm()) == 0 && !(container
                        .getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER))) {
            // ******************************************************************
            // *       FRESH ENTRY INTO PROGRAM                                  
            // *            ASK THE USER FOR THE KEYS TO FETCH CARD TO BE UPDATED
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #512] INITIALIZE statement
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #513] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #515] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #516] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #517] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_FAILED_1) == 0 || CobStringUtils.compare(
                        container.getWsThisProgcommarea()
                                .getCardUpdateScreenData()
                                .getCcupChangeAction(), CCUP_CHANGES_FAILED_2) == 0)) {
            // ******************************************************************
            // *       CARD DATA CHANGES REVIEWED, OKAYED AND DONE SUCESSFULLY   
            // *            RESET THE SEARCH KEYS                                
            // *            ASK THE USER FOR FRESH SEARCH CRITERIA               
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #525] INITIALIZE statement
            container.setWsThisProgcommarea(CocrdupcWsThisProgcommarea
                    .createDefaultValueInstance());
            container.setWsMiscStorage(CocrdupcWsMiscStorage
                    .createDefaultValueInstance());
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId(0);
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum(0);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #529] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #530] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #532] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_REENTER);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #533] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_DETAILS_NOT_FETCHED_1);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #534] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else {
            // ******************************************************************
            // *      CARD DATA HAS BEEN PRESENTED TO USER                       
            // *            CHECK THE USER INPUTS                                
            // *            DECIDE WHAT TO DO                                    
            // *            PRESENT NEXT STEPS TO USER                           
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #542] PERFORM statement
            controlManager.run(context, _1000ProcessInputs,
                    _1000ProcessInputsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #544] PERFORM statement
            controlManager.run(context, _2000DecideAction,
                    _2000DecideActionExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #546] PERFORM statement
            controlManager.run(context, _3000SendMap, _3000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #548] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        }
    }

    void commonReturn(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #553] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #555] MOVE statement
        container.setWsCommarea(container.getCarddemoCommarea().get());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #556] MOVE statement
        container.setWsCommarea(StringUtils.overlay(container.getWsCommarea(),
                container.getWsThisProgcommarea().get(), 160, 489));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #560] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                            TRANSID (LIT-THISTRANID)                                
                            COMMAREA (WS-COMMAREA)                                  
                            LENGTH(LENGTH OF WS-COMMAREA)                           
                       END-EXEC
         */
        TaskDto taskDto = TaskDto.builder()
                .destination(container.getWsLiterals().getLitThistranid())
                .data(Data.session(container.getWsCommarea())).build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    void _0000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #567] EXIT statement
    }

    void _1000ProcessInputs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #571] PERFORM statement
        controlManager.run(context, _1100ReceiveMap, _1100ReceiveMapExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #573] PERFORM statement
        controlManager.run(context, _1200EditMapInputs, _1200EditMapInputsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #575] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardErrorMsg(container.getWsMiscStorage().getWsReturnMsg());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #576] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextProg(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #577] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #578] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
    }

    void _1000ProcessInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #582] EXIT statement
    }

    void _1100ReceiveMap(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #585] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE MAP(LIT-THISMAP)                           
                                 MAPSET(LIT-THISMAPSET))                            
                                 INTO(CCRDUPAI)                                     
                                 RESP(WS-RESP-CD)                                   
                                 RESP2(WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            container.setCcrdupai(((CocrdupcInputDto) task.getInputDto())
                    .getCcrdupai());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #592] INITIALIZE statement
        container.getWsThisProgcommarea().setCcupNewDetails(
                CocrdupcWsThisProgcommarea.CocrdupcCcupNewDetails
                        .createDefaultValueInstance());
        // *    REPLACE * WITH LOW-VALUES                                    
        // [T-Up#INFO][COCRDUPC.cbl, LINE #595] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getAcctsidi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getAcctsidi(),
                        StringUtils.repeat(' ', 11)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #597] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(StringUtils.repeat((char) 0x00, 11));
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #600] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcAcctId(container.getCcrdupai().getAcctsidi());
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(container.getCcrdupai().getAcctsidi());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #604] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCardsidi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCardsidi(),
                        StringUtils.repeat(' ', 16)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #606] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcCardNum(StringUtils.repeat((char) 0x00, 16));
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat((char) 0x00, 16));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #609] MOVE statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcCardNum(container.getCcrdupai().getCardsidi());
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(container.getCcrdupai().getCardsidi());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #613] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCrdnamei(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCrdnamei(),
                        StringUtils.repeat(' ', 50)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #615] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdname(StringUtils.repeat((char) 0x00, 50));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #617] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdname(container.getCcrdupai().getCrdnamei());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #620] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getCrdstcdi(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getCrdstcdi(), " ") == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #622] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdstcd(StringUtils.repeat((char) 0x00, 1));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #624] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata()
                    .setCcupNewCrdstcd(container.getCcrdupai().getCrdstcdi());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #627] MOVE statement
        container.getWsThisProgcommarea().getCcupNewDetails()
                .getCcupNewCarddata().getCcupNewExpiraionDate()
                .setCcupNewExpday(container.getCcrdupai().getExpdayi());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #629] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getExpmoni(), "*") == 0
                || CobStringUtils.compare(container.getCcrdupai().getExpmoni(),
                        StringUtils.repeat(' ', 2)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #631] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpmon(StringUtils.repeat((char) 0x00, 2));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #633] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpmon(container.getCcrdupai().getExpmoni());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #636] IF statement
        if (CobStringUtils.compare(container.getCcrdupai().getExpyeari(), "*") == 0
                || CobStringUtils.compare(
                        container.getCcrdupai().getExpyeari(),
                        StringUtils.repeat(' ', 4)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #638] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpyear(StringUtils.repeat((char) 0x00, 4));
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #640] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .getCcupNewCarddata().getCcupNewExpiraionDate()
                    .setCcupNewExpyear(container.getCcrdupai().getExpyeari());
        }
    }

    void _1100ReceiveMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #645] EXIT statement
    }

    void _1200EditMapInputs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #649] SET statement
        container.getWsMiscStorage().setWsInputFlag(INPUT_OK);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #651] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // *        VALIDATE THE SEARCH KEYS                                 
            // [T-Up#INFO][COCRDUPC.cbl, LINE #653] PERFORM statement
            controlManager.run(context, _1210EditAccount, _1210EditAccountExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #656] PERFORM statement
            controlManager.run(context, _1220EditCard, _1220EditCardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #659] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewCarddata(
                            CocrdupcWsThisProgcommarea.CocrdupcCcupNewDetails.CocrdupcCcupNewCarddata
                                    .createDefaultValueInstance());
            // *       IF THE SEARCH CONDITIONS HAVE PROBLEMS SKIP OTHER EDITS   
            // [T-Up#INFO][COCRDUPC.cbl, LINE #662] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                    && CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #664] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        NO_SEARCH_CRITERIA_RECEIVED);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #667] GOTO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #670] CONTINUE statement
        }
        // *    SEARCH KEYS ALREADY VALIDATED AND DATA FETCHED               
        // [T-Up#INFO][COCRDUPC.cbl, LINE #674] SET statement
        container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #675] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_ISVALID);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #676] SET statement
        container.getWsMiscStorage().setWsEditCardFlag(FLG_CARDFILTER_ISVALID);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #677] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoAccountInfo()
                .setCdemoAcctId(
                        Long.parseLong(container.getWsThisProgcommarea()
                                .getCcupOldDetails().getCcupOldAcctid().trim()));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #678] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoCardInfo()
                .setCdemoCardNum(
                        Long.parseLong(container.getWsThisProgcommarea()
                                .getCcupOldDetails().getCcupOldCardid().trim()));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #679] MOVE statement
        container.getCardRecord().setCardEmbossedName(
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdname());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #680] MOVE statement
        container.getCardRecord().setCardActiveStatus(
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #681] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryDay(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpday());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #682] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryMonth(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpmon());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #683] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardExpiryYear(
                        container.getWsThisProgcommarea().getCcupOldDetails()
                                .getCcupOldCarddata().getCcupOldExpiraionDate()
                                .getCcupOldExpyear());
        // *    NEW DATA IS SAME AS OLD DATA                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #686] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().get().toUpperCase(),
                container.getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().get().toUpperCase()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #688] SET statement
            container.getWsMiscStorage().setWsReturnMsg(NO_CHANGES_DETECTED);
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #691] IF statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0 || CobStringUtils
                .compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OK_NOT_CONFIRMED) == 0)
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #694] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #695] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #696] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #697] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_ISVALID);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #698] GOTO statement
            context.setGotoTarget(_1200EditMapInputsExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #702] SET statement
        container.getWsThisProgcommarea().getCardUpdateScreenData()
                .setCcupChangeAction(CCUP_CHANGES_NOT_OK);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #704] PERFORM statement
        controlManager.run(context, _1230EditName, _1230EditNameExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #707] PERFORM statement
        controlManager.run(context, _1240EditCardstatus,
                _1240EditCardstatusExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #710] PERFORM statement
        controlManager.run(context, _1250EditExpiryMon, _1250EditExpiryMonExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #713] PERFORM statement
        controlManager.run(context, _1260EditExpiryYear,
                _1260EditExpiryYearExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #716] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #717] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #719] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_CHANGES_OK_NOT_CONFIRMED);
        }
    }

    void _1200EditMapInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #724] EXIT statement
    }

    void _1210EditAccount(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #728] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #731] IF statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId(), StringUtils.repeat((char) 0x00, 11)) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcAcctId(), StringUtils.repeat(' ', 11)) == 0)
                || container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #734] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #735] SET statement
            container.getWsMiscStorage()
                    .setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #736] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #737] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_ACCT);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #739] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #740] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #741] GOTO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        }
        // *                                                                 
        // *    Not numeric                                                  
        // *    Not 11 characters                                            
        // [T-Up#INFO][COCRDUPC.cbl, LINE #746] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId())) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #747] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #748] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #749] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #750] MOVE statement
                container.getWsMiscStorage().setWsReturnMsg(
                        "ACCOUNT FILTER,IF SUPPLIED MUST BE A 11 DIGIT NUMBER");
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #754] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #755] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewAcctid(StringUtils.repeat((char) 0x00, 11));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #756] GOTO statement
            context.setGotoTarget(_1210EditAccountExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #758] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container.getCcWorkAreas()
                                    .getCcWorkArea().getCcAcctId().trim()));
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewAcctid(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcAcctId());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #760] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
        }
    }

    void _1210EditAccountExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #765] EXIT statement
    }

    void _1220EditCard(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not numeric                                                  
        // *    Not 16 characters                                            
        // [T-Up#INFO][COCRDUPC.cbl, LINE #771] SET statement
        container.getWsMiscStorage().setWsEditCardFlag(FLG_CARDFILTER_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #774] IF statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum(), StringUtils.repeat((char) 0x00, 16)) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcCardNum(), StringUtils.repeat(' ', 16)) == 0)
                || container.getCcWorkAreas().getCcWorkArea().getCcCardNumN() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #777] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #778] SET statement
            container.getWsMiscStorage()
                    .setWsEditCardFlag(FLG_CARDFILTER_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #779] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #780] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_CARD);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #783] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat('0', 16));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #785] GOTO statement
            context.setGotoTarget(_1220EditCardExit);
            return;
        }
        // *                                                                 
        // *    Not numeric                                                  
        // *    Not 16 characters                                            
        // [T-Up#INFO][COCRDUPC.cbl, LINE #790] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum())) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #791] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #792] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #793] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #794] MOVE statement
                container.getWsMiscStorage().setWsReturnMsg(
                        "CARD ID FILTER,IF SUPPLIED MUST BE A 16 DIGIT NUMBER");
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #798] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #799] MOVE statement
            container.getWsThisProgcommarea().getCcupNewDetails()
                    .setCcupNewCardid(StringUtils.repeat((char) 0x00, 16));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #800] GOTO statement
            context.setGotoTarget(_1220EditCardExit);
            return;
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #802] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcCardNumN());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #803] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupNewDetails()
                    .setCcupNewCardid(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcCardNum());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #804] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_ISVALID);
        }
    }

    void _1220EditCardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #809] EXIT statement
    }

    void _1230EditName(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not BLANK                                                    
        // [T-Up#INFO][COCRDUPC.cbl, LINE #814] SET statement
        container.getWsMiscStorage().setWsEditCardnameFlag(FLG_CARDNAME_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #817] IF statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().getCcupNewCrdname(),
                StringUtils.repeat((char) 0x00, 50)) == 0 || CobStringUtils
                .compare(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdname(),
                        StringUtils.repeat(' ', 50)) == 0)
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdname(), StringUtils.repeat('0', 50)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #820] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #821] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #822] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #823] SET statement
                container.getWsMiscStorage().setWsReturnMsg(WS_PROMPT_FOR_NAME);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #825] GOTO statement
            context.setGotoTarget(_1230EditNameExit);
            return;
        }
        // *    Only Alphabets and space allowed                             
        // [T-Up#INFO][COCRDUPC.cbl, LINE #829] MOVE statement
        container.getWsMiscStorage().setCardNameCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdname());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #830] INSPECT statement
        container.getWsMiscStorage().setCardNameCheck(
                StringUtils.replaceChars(container.getWsMiscStorage()
                        .getCardNameCheck(), container.getWsLiterals()
                        .getLitAllAlphaFrom(), container.getWsLiterals()
                        .getLitAllSpacesTo()));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #834] IF statement
        if (container.getWsMiscStorage().getCardNameCheck().trim().length() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #835] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #837] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #838] SET statement
            container.getWsMiscStorage().setWsEditCardnameFlag(
                    FLG_CARDNAME_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #839] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #840] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        WS_NAME_MUST_BE_ALPHA);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #842] GOTO statement
            context.setGotoTarget(_1230EditNameExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #845] SET statement
        container.getWsMiscStorage()
                .setWsEditCardnameFlag(FLG_CARDNAME_ISVALID);
    }

    void _1230EditNameExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #848] EXIT statement
    }

    void _1240EditCardstatus(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Must be Y or N                                               
        // [T-Up#INFO][COCRDUPC.cbl, LINE #853] SET statement
        container.getWsMiscStorage().setWsEditCardstatusFlag(
                FLG_CARDSTATUS_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #856] IF statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata().getCcupNewCrdstcd(),
                StringUtils.repeat((char) 0x00, 1)) == 0 || CobStringUtils
                .compare(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdstcd(), " ") == 0)
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdstcd(), StringUtils.repeat('0', 1)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #859] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #860] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #861] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #862] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_STATUS_MUST_BE_YES_NO);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #864] GOTO statement
            context.setGotoTarget(_1240EditCardstatusExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #867] MOVE statement
        container.getWsMiscStorage().setFlgYesNoCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #869] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getFlgYesNoCheck(), FLG_YES_NO_VALID_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getFlgYesNoCheck(), FLG_YES_NO_VALID_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #870] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #872] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #873] SET statement
            container.getWsMiscStorage().setWsEditCardstatusFlag(
                    FLG_CARDSTATUS_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #874] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #875] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_STATUS_MUST_BE_YES_NO);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #877] GOTO statement
            context.setGotoTarget(_1240EditCardstatusExit);
            return;
        }
    }

    void _1240EditCardstatusExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #881] EXIT statement
    }

    void _1250EditExpiryMon(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #886] SET statement
        container.getWsMiscStorage().setWsEditCardexpmonFlag(
                FLG_CARDEXPMON_NOT_OK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #889] IF statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata()
                .getCcupNewExpiraionDate().getCcupNewExpmon(),
                StringUtils.repeat((char) 0x00, 2)) == 0 || CobStringUtils
                .compare(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpmon(), StringUtils.repeat(' ', 2)) == 0)
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpmon(),
                        StringUtils.repeat('0', 2)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #892] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #893] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #894] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #895] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_MONTH_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #897] GOTO statement
            context.setGotoTarget(_1250EditExpiryMonExit);
            return;
        }
        // *    Must be numeric                                              
        // *    Must be 1 to 12                                              
        // [T-Up#INFO][COCRDUPC.cbl, LINE #902] MOVE statement
        container.getWsMiscStorage().setCardMonthCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpmon());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #904] IF statement
        if (container.getWsMiscStorage().getCardMonthCheckN() >= VALID_MONTH_START
                && container.getWsMiscStorage().getCardMonthCheckN() <= VALID_MONTH_END) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #905] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #907] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #908] SET statement
            container.getWsMiscStorage().setWsEditCardexpmonFlag(
                    FLG_CARDEXPMON_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #909] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #910] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_MONTH_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #912] GOTO statement
            context.setGotoTarget(_1250EditExpiryMonExit);
            return;
        }
    }

    void _1250EditExpiryMonExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #917] EXIT statement
    }

    void _1260EditExpiryYear(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #922] IF statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCcupNewDetails().getCcupNewCarddata()
                .getCcupNewExpiraionDate().getCcupNewExpyear(),
                StringUtils.repeat((char) 0x00, 4)) == 0 || CobStringUtils
                .compare(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpyear(), StringUtils.repeat(' ', 4)) == 0)
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpyear(),
                        StringUtils.repeat('0', 4)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #925] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #926] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_BLANK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #927] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #928] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_YEAR_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #930] GOTO statement
            context.setGotoTarget(_1260EditExpiryYearExit);
            return;
        }
        // *    Must be numeric                                              
        // *    Must be 1 to 12                                              
        // [T-Up#INFO][COCRDUPC.cbl, LINE #936] SET statement
        container.getWsMiscStorage().setWsEditCardexpyearFlag(
                FLG_CARDEXPYEAR_NOT_OK);
        // [T-Up#INFO][COCRDUPC.cbl, LINE #938] MOVE statement
        container.getWsMiscStorage().setCardYearCheck(
                container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpyear());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #940] IF statement
        if (container.getWsMiscStorage().getCardYearCheckN() >= VALID_YEAR_START
                && container.getWsMiscStorage().getCardYearCheckN() <= VALID_YEAR_END) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #941] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_ISVALID);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #943] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #944] SET statement
            container.getWsMiscStorage().setWsEditCardexpyearFlag(
                    FLG_CARDEXPYEAR_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #945] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #946] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        CARD_EXPIRY_YEAR_NOT_VALID);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #948] GOTO statement
            context.setGotoTarget(_1260EditExpiryYearExit);
            return;
        }
    }

    void _1260EditExpiryYearExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #952] EXIT statement
    }

    void _2000DecideAction(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #955] EVALUATE statement
        if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0 || CobStringUtils.compare(
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .getCcupChangeAction(), CCUP_DETAILS_NOT_FETCHED_2) == 0)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK12) == 0)) {
            // ******************************************************************
            // *       NO DETAILS SHOWN.                                         
            // *       SO GET THEM AND SETUP DETAIL EDIT SCREEN                  
            // ******************************************************************
            // ******************************************************************
            // *       CHANGES MADE. BUT USER CANCELS                            
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #965] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0
                    && CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_ISVALID) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #967] PERFORM statement
                controlManager.run(context, _9000ReadData, _9000ReadDataExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COCRDUPC.cbl, LINE #969] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), FOUND_CARDS_FOR_ACCOUNT) == 0) {
                    // [T-Up#INFO][COCRDUPC.cbl, LINE #970] SET statement
                    container.getWsThisProgcommarea().getCardUpdateScreenData()
                            .setCcupChangeAction(CCUP_SHOW_DETAILS);
                }
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN                                             
            // *       CHECK CHANGES AND ASK CONFIRMATION IF GOOD                
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #978] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsInputFlag(), INPUT_ERROR) == 0
                    || CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #980] CONTINUE statement
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #982] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OK_NOT_CONFIRMED);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_NOT_OK) == 0) {
            // ******************************************************************
            // *       DETAILS SHOWN                                             
            // *       BUT INPUT EDIT ERRORS FOUND                               
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #989] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0
                && CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK05) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED         
            // *       CONFIRMATION GIVEN.SO SAVE THE CHANGES                    
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #996] PERFORM statement
            controlManager.run(context, _9200WriteProcessing,
                    _9200WriteProcessingExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #998] EVALUATE statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), COULD_NOT_LOCK_FOR_UPDATE) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1000] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_LOCK_ERROR);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), LOCKED_BUT_UPDATE_FAILED) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1002] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_BUT_FAILED);
            } else if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1004] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_SHOW_DETAILS);
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1006] SET statement
                container.getWsThisProgcommarea().getCardUpdateScreenData()
                        .setCcupChangeAction(CCUP_CHANGES_OKAYED_AND_DONE);
            }
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // ******************************************************************
            // *       DETAILS EDITED , FOUND OK, CONFIRM SAVE REQUESTED         
            // *       CONFIRMATION NOT GIVEN. SO SHOW DETAILS AGAIN             
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1013] CONTINUE statement
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // ******************************************************************
            // *       SHOW CONFIRMATION. GO BACK TO SQUARE 1                    
            // ******************************************************************
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1018] SET statement
            container.getWsThisProgcommarea().getCardUpdateScreenData()
                    .setCcupChangeAction(CCUP_SHOW_DETAILS);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1019] IF statement
            if (CobStringUtils.compare(container.getCarddemoCommarea()
                    .getCdemoGeneralInfo().getCdemoFromTranid(),
                    StringUtils.repeat((char) 0x00, 4)) == 0
                    || CobStringUtils.compare(container.getCarddemoCommarea()
                            .getCdemoGeneralInfo().getCdemoFromTranid(),
                            StringUtils.repeat(' ', 4)) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1021] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctId((long) 0);
                container.getCarddemoCommarea().getCdemoCardInfo()
                        .setCdemoCardNum((long) 0);
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1023] MOVE statement
                container.getCarddemoCommarea().getCdemoAccountInfo()
                        .setCdemoAcctStatus(StringUtils.repeat((char) 0x00, 1));
            }
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1026] MOVE statement
            container.getAbendData().setAbendCulprit(
                    container.getWsLiterals().getLitThispgm());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1027] MOVE statement
            container.getAbendData().setAbendCode("0001");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1028] MOVE statement
            container.getAbendData()
                    .setAbendReason(StringUtils.repeat(' ', 50));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1029] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED DATA SCENARIO");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1031] PERFORM statement
            controlManager.run(context, abendRoutine, abendRoutineExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    void _2000DecideActionExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1036] EXIT statement
    }

    void _3000SendMap(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1042] PERFORM statement
        controlManager.run(context, _3100ScreenInit, _3100ScreenInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1044] PERFORM statement
        controlManager.run(context, _3200SetupScreenVars,
                _3200SetupScreenVarsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1046] PERFORM statement
        controlManager.run(context, _3250SetupInfomsg, _3250SetupInfomsgExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1048] PERFORM statement
        controlManager.run(context, _3300SetupScreenAttrs,
                _3300SetupScreenAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1050] PERFORM statement
        controlManager.run(context, _3400SendScreen, _3400SendScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    void _3000SendMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1055] EXIT statement
    }

    void _3100ScreenInit(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1059] MOVE statement
        container.setCcrdupao(CocrdupcCcrdupai.createDefaultValueInstance()
                .get());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1061] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1063] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1064] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1065] MOVE statement
        container.setTrnnameo(container.getWsLiterals().getLitThistranid());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1066] MOVE statement
        container.setPgmnameo(container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1068] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1070] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1071] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1072] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1074] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1076] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1077] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1078] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1080] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    void _3100ScreenInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1085] EXIT statement
    }

    void _3200SetupScreenVars(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    INITIALIZE SEARCH CRITERIA                                   
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1090] IF statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1091] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1093] IF statement
            if (container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1094] MOVE statement
                container.setAcctsido(StringUtils.repeat((char) 0x00, 11));
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1096] MOVE statement
                container.setAcctsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId());
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1099] IF statement
            if (container.getCcWorkAreas().getCcWorkArea().getCcCardNumN() == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1100] MOVE statement
                container.setCardsido(StringUtils.repeat((char) 0x00, 16));
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1102] MOVE statement
                container.setCardsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcCardNum());
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1105] EVALUATE statement
            if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_DETAILS_NOT_FETCHED_1) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_DETAILS_NOT_FETCHED_2) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1107] MOVE statement
                container.setCrdnameo(StringUtils.repeat((char) 0x00, 50));
                container.setCrdnameo(StringUtils.repeat((char) 0x00, 50));
                container.setCrdstcdo(StringUtils.repeat((char) 0x00, 1));
                container.setExpdayo(StringUtils.repeat((char) 0x00, 2));
                container.setExpmono(StringUtils.repeat((char) 0x00, 2));
                container.setExpyearo(StringUtils.repeat((char) 0x00, 4));
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_SHOW_DETAILS) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1114] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdname());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1115] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1116] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1117] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpmon());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1118] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpyear());
            } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                    .getCardUpdateScreenData().getCcupChangeAction(),
                    CCUP_CHANGES_MADE_1) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_2) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_3) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_4) == 0
                    || CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getCardUpdateScreenData().getCcupChangeAction(),
                            CCUP_CHANGES_MADE_5) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1120] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdname());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1121] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1122] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpmon());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1123] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupNewDetails().getCcupNewCarddata()
                        .getCcupNewExpiraionDate().getCcupNewExpyear());
                // ******************************************************************
                // *               MOVE OLD VALUES TO NON-DISPLAY FIELDS             
                // *               THAT WE ARE NOT ALLOWING USER TO CHANGE(FOR NOW)  
                // ***************************************************************** 
                // *               MOVE CCUP-NEW-EXPDAY     TO EXPDAYO  OF CCRDUPAO  
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1129] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
            } else {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1131] MOVE statement
                container.setCrdnameo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdname());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1132] MOVE statement
                container.setCrdstcdo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldCrdstcd());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1133] MOVE statement
                container.setExpdayo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpday());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1134] MOVE statement
                container.setExpmono(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpmon());
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1135] MOVE statement
                container.setExpyearo(container.getWsThisProgcommarea()
                        .getCcupOldDetails().getCcupOldCarddata()
                        .getCcupOldExpiraionDate().getCcupOldExpyear());
            }
        }
    }

    void _3200SetupScreenVarsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1142] EXIT statement
    }

    void _3250SetupInfomsg(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    SETUP INFORMATION MESSAGE                                    
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1146] EVALUATE statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1148] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1150] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1152] SET statement
            container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1154] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CHANGES);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1156] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_CONFIRMATION);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_AND_DONE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1158] SET statement
            container.getWsMiscStorage().setWsInfoMsg(CONFIRM_UPDATE_SUCCESS);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_LOCK_ERROR) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1160] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OKAYED_BUT_FAILED) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1162] SET statement
            container.getWsMiscStorage().setWsInfoMsg(INFORM_FAILURE);
        } else if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInfoMsg(), WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1164] SET statement
            container.getWsMiscStorage().setWsInfoMsg(PROMPT_FOR_SEARCH_KEYS);
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1167] MOVE statement
        container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1169] MOVE statement
        container.setErrmsgo(container.getWsMiscStorage().getWsReturnMsg());
    }

    void _3250SetupInfomsgExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1172] EXIT statement
    }

    void _3300SetupScreenAttrs(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    PROTECT OR UNPROTECT BASED ON CONTEXT                        
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1178] EVALUATE statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_DETAILS_NOT_FETCHED_1) == 0
                || CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_DETAILS_NOT_FETCHED_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1180] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmfse());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1182] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_SHOW_DETAILS) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0)) {
            // *                                  EXPDAYA  OF CCRDUPAI           
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1189] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmprf());
            // *                                  EXPDAYA  OF CCRDUPAI           
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1192] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmfse());
        } else if ((CobStringUtils.compare(container.getWsThisProgcommarea()
                .getCardUpdateScreenData().getCcupChangeAction(),
                CCUP_CHANGES_OK_NOT_CONFIRMED) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_OKAYED_AND_DONE) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1199] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        } else {
            // *                                  EXPDAYA  OF CCRDUPAI           
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1207] MOVE statement
            container.getCcrdupai().setAcctsida(
                    container.getDfhbmsca().getDfhbmfse());
            container.getCcrdupai().setCardsida(
                    container.getDfhbmsca().getDfhbmfse());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1209] MOVE statement
            container.getCcrdupai().setCrdnamea(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setCrdstcda(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpmona(
                    container.getDfhbmsca().getDfhbmprf());
            container.getCcrdupai().setExpyeara(
                    container.getDfhbmsca().getDfhbmprf());
        }
        // *                                  EXPDAYA  OF CCRDUPAI           
        // *    POSITION CURSOR                                              
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1217] EVALUATE statement
        if ((CobStringUtils.compare(
                container.getWsMiscStorage().getWsInfoMsg(),
                FOUND_CARDS_FOR_ACCOUNT) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsReturnMsg(), NO_CHANGES_DETECTED) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1220] MOVE statement
            container.getCcrdupai().setCrdnamel(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1223] MOVE statement
            container.getCcrdupai().setAcctsidl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1226] MOVE statement
            container.getCcrdupai().setCardsidl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardnameFlag(), FLG_CARDNAME_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1229] MOVE statement
            container.getCcrdupai().setCrdnamel(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardstatusFlag(), FLG_CARDSTATUS_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1232] MOVE statement
            container.getCcrdupai().setCrdstcdl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1235] MOVE statement
            container.getCcrdupai().setExpmonl(-1);
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_BLANK) == 0)) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1238] MOVE statement
            container.getCcrdupai().setExpyearl(-1);
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1240] MOVE statement
            container.getCcrdupai().setAcctsidl(-1);
        }
        // *    SETUP COLOR                                                  
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1244] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoMoreInfo().getCdemoLastMapset(), container
                .getWsLiterals().getLitCclistmapset()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1245] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhdfcol());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1246] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhdfcol());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1249] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1250] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1253] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1255] MOVE statement
            container.setAcctsido("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1256] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1259] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1260] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1263] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_BLANK) == 0
                && container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1265] MOVE statement
            container.setCardsido("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1266] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1269] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1271] MOVE statement
            container.setCrdnamec(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1274] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardnameFlag(), FLG_CARDNAME_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1276] MOVE statement
            container.setCrdnameo("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1277] MOVE statement
            container.setCrdnamec(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1280] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1282] MOVE statement
            container.setCrdstcdc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1285] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardstatusFlag(), FLG_CARDSTATUS_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1287] MOVE statement
            container.setCrdstcdo("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1288] MOVE statement
            container.setCrdstcdc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1291] MOVE statement
        container.setExpdayc(container.getDfhbmsca().getDfhbmdar());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1293] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1295] MOVE statement
            container.setExpmonc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1298] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpmonFlag(), FLG_CARDEXPMON_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1300] MOVE statement
            container.setExpmono("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1301] MOVE statement
            container.setExpmonc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1304] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_NOT_OK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1306] MOVE statement
            container.setExpyearc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1309] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardexpyearFlag(), FLG_CARDEXPYEAR_BLANK) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getCardUpdateScreenData().getCcupChangeAction(),
                        CCUP_CHANGES_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1311] MOVE statement
            container.setExpyearo("*");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1312] MOVE statement
            container.setExpyearc(container.getDfhbmsca().getDfhred());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1315] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                WS_NO_INFO_MESSAGE_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInfoMsg(), WS_NO_INFO_MESSAGE_2) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1316] MOVE statement
            container.getCcrdupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmdar());
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1318] MOVE statement
            container.getCcrdupai().setInfomsga(
                    container.getDfhbmsca().getDfhbmbry());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1321] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                PROMPT_FOR_CONFIRMATION) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1322] MOVE statement
            container.getCcrdupai().setFkeysca(
                    container.getDfhbmsca().getDfhbmbry());
        }
    }

    void _3300SetupScreenAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1326] EXIT statement
    }

    void _3400SendScreen(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1332] MOVE statement
        container
                .getCcWorkAreas()
                .getCcWorkArea()
                .setCcardNextMapset(
                        container.getWsLiterals().getLitThismapset());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1333] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextMap(container.getWsLiterals().getLitThismap());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1335] EXEC_CICS statement
        /*
                       EXEC CICS SEND MAP('CCRDUPA')                                
                                      MAPSET('COCRDUP')                             
                                      FROM(CCRDUPAO)                                
                                      CURSOR                                        
                                      ERASE                                         
                                      FREEKB                                        
                                      RESP(WS-RESP-CD)                              
                       END-EXEC
         */
        try {
            ((CocrdupcOutputDto) task.getOutputDto())
                    .setPageName("COCRDUP_CCRDUPA");
            ((CocrdupcOutputDto) task.getOutputDto()).setCcrdupao(container
                    .getCcrdupao());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
    }

    void _3400SendScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1345] EXIT statement
    }

    void _9000ReadData(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1351] INITIALIZE statement
        container.getWsThisProgcommarea().setCcupOldDetails(
                CocrdupcWsThisProgcommarea.CocrdupcCcupOldDetails
                        .createDefaultValueInstance());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1352] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCcupOldDetails()
                .setCcupOldAcctid(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcAcctId());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1353] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCcupOldDetails()
                .setCcupOldCardid(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1355] PERFORM statement
        controlManager.run(context, _9100GetcardByacctcard,
                _9100GetcardByacctcardExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1358] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsInfoMsg(),
                FOUND_CARDS_FOR_ACCOUNT) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1360] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .setCcupOldCvvCd(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getCardRecord()
                                            .getCardCvvCd())), 3, '0'));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1362] INSPECT statement
            container.getCardRecord().setCardEmbossedName(
                    StringUtils.replaceChars(container.getCardRecord()
                            .getCardEmbossedName(), container.getWsLiterals()
                            .getLitLower(), container.getWsLiterals()
                            .getLitUpper()));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1366] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdname(
                            container.getCardRecord().getCardEmbossedName());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1367] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpyear(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(0, 4));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1369] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpmon(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(5, 7));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1371] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpday(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(8, 10));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1373] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdstcd(
                            container.getCardRecord().getCardActiveStatus());
        }
    }

    void _9000ReadDataExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1379] EXIT statement
    }

    void _9100GetcardByacctcard(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Read the Card file                                           
        // *                                                                 
        // *    MOVE CC-ACCT-ID-N            TO WS-CARD-RID-ACCT-ID          
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1386] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCardRid()
                .setWsCardRidCardnum(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1388] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            FILE      (LIT-CARDFILENAME)                            
                            RIDFLD    (WS-CARD-RID-CARDNUM)                         
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CARDNUM)               
                            INTO      (CARD-RECORD)                                 
                            LENGTH    (LENGTH OF CARD-RECORD)                       
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = recordKeyAccessor
                    .read("awsM2CarddemoCarddataVsamKsdsDao", container
                            .getWsMiscStorage().getWsCardRid()
                            .getWsCardRidCardnum());
            container
                    .setCardRecord(CocrdupcCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCarddataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1398] EVALUATE statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1400] SET statement
            container.getWsMiscStorage().setWsInfoMsg(FOUND_CARDS_FOR_ACCOUNT);
        } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 13) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1402] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1403] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1404] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_NOT_OK);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1405] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1406] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        DID_NOT_FIND_ACCTCARD_COMBO);
            }
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1409] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1410] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1411] SET statement
                container.getWsMiscStorage().setWsEditAcctFlag(
                        FLG_ACCTFILTER_NOT_OK);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1413] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1414] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorFile(
                            container.getWsLiterals().getLitCardfilename());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1415] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1416] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1417] MOVE statement
            container.getWsMiscStorage().setWsReturnMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
        }
    }

    void _9100GetcardByacctcardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1422] EXIT statement
    }

    void _9200WriteProcessing(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // *    Read the Card file                                           
        // *                                                                 
        // *    MOVE CC-ACCT-ID-N            TO WS-CARD-RID-ACCT-ID          
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1431] MOVE statement
        container
                .getWsMiscStorage()
                .getWsCardRid()
                .setWsCardRidCardnum(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcCardNum());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1433] EXEC_CICS statement
        /*
                       EXEC CICS READ                                               
                            FILE      (LIT-CARDFILENAME)                            
                            UPDATE                                                  
                            RIDFLD    (WS-CARD-RID-CARDNUM)                         
                            KEYLENGTH (LENGTH OF WS-CARD-RID-CARDNUM)               
                            INTO      (CARD-RECORD)                                 
                            LENGTH    (LENGTH OF CARD-RECORD)                       
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = recordKeyAccessor
                    .readForUpdate("awsM2CarddemoCarddataVsamKsdsDao",
                            container.getWsMiscStorage().getWsCardRid()
                                    .getWsCardRidCardnum());
            container
                    .setCardRecord(CocrdupcCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCarddataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // ***************************************************************** 
        // *    Could we lock the record ?                                   
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1447] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1448] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1450] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1451] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsReturnMsg(), WS_RETURN_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDUPC.cbl, LINE #1452] SET statement
                container.getWsMiscStorage().setWsReturnMsg(
                        COULD_NOT_LOCK_FOR_UPDATE);
            }
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1454] GOTO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // ***************************************************************** 
        // *    Did someone change the record while we were out ?            
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1459] PERFORM statement
        controlManager.run(context, _9300CheckChangeInRec,
                _9300CheckChangeInRecExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1461] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsReturnMsg(), DATA_WAS_CHANGED_BEFORE_UPDATE) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1462] GOTO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // ***************************************************************** 
        // * Prepare the update                                              
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1467] INITIALIZE statement
        container.getWsThisProgcommarea().setCardUpdateRecord(
                CocrdupcWsThisProgcommarea.CocrdupcCardUpdateRecord
                        .createDefaultValueInstance());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1468] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateNum(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCardid());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1469] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateAcctId(
                        container.getCcWorkAreas().getCcWorkArea()
                                .getCcAcctIdN());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1470] MOVE statement
        container
                .getWsMiscStorage()
                .getCicsOutputEditVars()
                .setCardCvvCdX(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCvvCd());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1471] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateCvvCd(
                        container.getWsMiscStorage().getCicsOutputEditVars()
                                .getCardCvvCdN());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1472] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateEmbossedName(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCarddata().getCcupNewCrdname());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1473] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container
                .getWsThisProgcommarea().getCardUpdateRecord()
                .getCardUpdateExpiraionDate());
        tempStringBuilder1
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpyear())
                .append("-")
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpmon())
                .append("-")
                .append(container.getWsThisProgcommarea().getCcupNewDetails()
                        .getCcupNewCarddata().getCcupNewExpiraionDate()
                        .getCcupNewExpday());
        if (tempStringBuilder1.length() <= 10) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getWsThisProgcommarea().getCardUpdateRecord()
                    .setCardUpdateExpiraionDate(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1481] MOVE statement
        container
                .getWsThisProgcommarea()
                .getCardUpdateRecord()
                .setCardUpdateActiveStatus(
                        container.getWsThisProgcommarea().getCcupNewDetails()
                                .getCcupNewCarddata().getCcupNewCrdstcd());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1483] EXEC_CICS statement
        /*
                       EXEC CICS                                                    
                            REWRITE FILE(LIT-CARDFILENAME)                          
                                    FROM(CARD-UPDATE-RECORD)                        
                                    LENGTH(LENGTH OF CARD-UPDATE-RECORD)            
                                    RESP      (WS-RESP-CD)                          
                                    RESP2     (WS-REAS-CD)                          
                       END-EXEC
         */
        try {
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = CocrdupcCardUpdateRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                    .toTarget(container.getWsThisProgcommarea()
                            .getCardUpdateRecord());
            recordKeyAccessor.updateLast("awsM2CarddemoCarddataVsamKsdsDao",
                    awsM2CarddemoCarddataVsamKsdsDto);
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // ***************************************************************** 
        // * Did the update succeed ?  *                                     
        // ***************************************************************** 
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1494] IF statement
        if (container.getWsMiscStorage().getWsCicsProcessngVars().getWsRespCd() == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1495] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1497] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    LOCKED_BUT_UPDATE_FAILED);
        }
    }

    void _9200WriteProcessingExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1501] EXIT statement
    }

    void _9300CheckChangeInRec(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1505] INSPECT statement
        container.getCardRecord().setCardEmbossedName(
                StringUtils
                        .replaceChars(container.getCardRecord()
                                .getCardEmbossedName(), container
                                .getWsLiterals().getLitLower(), container
                                .getWsLiterals().getLitUpper()));
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1509] IF statement
        if (CobStringUtils.compare(PictureFormatter.intFormatWithoutSign(
                container.getCardRecord().getCardCvvCd(), "000"), container
                .getWsThisProgcommarea().getCcupOldDetails().getCcupOldCvvCd()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardEmbossedName(), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdname()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(0, 4), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpyear()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(5, 7), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpmon()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardExpiraionDate().substring(8, 10), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldExpiraionDate()
                        .getCcupOldExpday()) == 0
                && CobStringUtils.compare(container.getCardRecord()
                        .getCardActiveStatus(), container
                        .getWsThisProgcommarea().getCcupOldDetails()
                        .getCcupOldCarddata().getCcupOldCrdstcd()) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1515] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1517] SET statement
            container.getWsMiscStorage().setWsReturnMsg(
                    DATA_WAS_CHANGED_BEFORE_UPDATE);
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1518] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .setCcupOldCvvCd(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getCardRecord()
                                            .getCardCvvCd())), 3, '0'));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1519] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdname(
                            container.getCardRecord().getCardEmbossedName());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1520] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpyear(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(0, 4));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1521] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpmon(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(5, 7));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1522] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .getCcupOldExpiraionDate()
                    .setCcupOldExpday(
                            container.getCardRecord().getCardExpiraionDate()
                                    .substring(8, 10));
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1523] MOVE statement
            container
                    .getWsThisProgcommarea()
                    .getCcupOldDetails()
                    .getCcupOldCarddata()
                    .setCcupOldCrdstcd(
                            container.getCardRecord().getCardActiveStatus());
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1524] GOTO statement
            context.setGotoTarget(_9200WriteProcessingExit);
            return;
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1525] EXIT statement
    }

    void _9300CheckChangeInRecExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1528] EXIT statement
    }

    // ******************************************************************
    // *Common code to store PFKey                                       
    // ******************************************************************
    //       *COPY 'CSSTRPFY'                                                  
    //       *    .                                                            
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSSTRPFY.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************

    void yyyyStorePfkey(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // ***************************************************************** 
        // * Map AID to PFKey in COMMON Area                                 
        // ***************************************************************** 
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #22] EVALUATE statement
        if (CobStringUtils.compare(task.getPressedKey(), container.getDfhaid()
                .getDfhenter()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #24] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhclear()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #26] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_CLEAR);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #28] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA1);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #30] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA2);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #32] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #34] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf3()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #36] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf4()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #38] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf5()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #40] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf6()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #42] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf7()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #44] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf8()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #46] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf9()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #48] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf10()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #50] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf11()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #52] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf12()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #54] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf13()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #56] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf14()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #58] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf15()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #60] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf16()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #62] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf17()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #64] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf18()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #66] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf19()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #68] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf20()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #70] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf21()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #72] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf22()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #74] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf23()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #76] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf24()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #78] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        }
    }

    void yyyyStorePfkeyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #82] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT 
    // *                                                                 

    void abendRoutine(OpenFrameContext context) {
        CocrdupcVariableContainer container = (CocrdupcVariableContainer) context
                .getProgramVariableContainer("Cocrdupc");
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1539] IF statement
        if (CobStringUtils.compare(container.getAbendData().getAbendMsg(),
                StringUtils.repeat((char) 0x00, 72)) == 0) {
            // [T-Up#INFO][COCRDUPC.cbl, LINE #1540] MOVE statement
            container.getAbendData().setAbendMsg("UNEXPECTED ABEND OCCURRED.");
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1543] MOVE statement
        container.getAbendData().setAbendCulprit(
                container.getWsLiterals().getLitThispgm());
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1545] EXEC_CICS statement
        /*
                       EXEC CICS SEND                                               
                                        FROM (ABEND-DATA)                           
                                        LENGTH(LENGTH OF ABEND-DATA)                
                                        NOHANDLE                                    
                                        ERASE                                       
                       END-EXEC
         */
        try {
            task.getOutputDto().getSystemDto()
                    .setNotification(container.getAbendData());
        } catch (OnlineException e) {
        }
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1552] EXEC_CICS statement
        /*
                       EXEC CICS HANDLE ABEND                                       
                            CANCEL                                                  
                       END-EXEC
         */
        abendHandler.cancel();
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1556] EXEC_CICS statement
        /*
                       EXEC CICS ABEND                                              
                            ABCODE('9999')                                          
                       END-EXEC
         */
        throw new AbendException();
    }

    void abendRoutineExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDUPC.cbl, LINE #1561] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT 
    // *                                                                 
}
