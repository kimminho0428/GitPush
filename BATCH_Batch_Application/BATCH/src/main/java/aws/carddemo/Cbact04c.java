package aws.carddemo;

import static aws.carddemo.variable.Cbact04cVariableContainer.*;
import aws.carddemo.file.*;
import aws.carddemo.variable.Cbact04cVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.batch.runtime.data.Dd;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:55 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBACT04C.cbl</li>
 * <li>Variable container class: {@link Cbact04cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>TCATBAL-FILE: FD class {@code ->} {@link Cbact04cFdTcatbalFile}, record class {@code -> } {@link Cbact04cFdTranCatBalRecord}</li>
 * <li>XREF-FILE: FD class {@code ->} {@link Cbact04cFdXrefFile}, record class {@code -> } {@link Cbact04cFdXreffileRec}</li>
 * <li>ACCOUNT-FILE: FD class {@code ->} {@link Cbact04cFdAccountFile}, record class {@code -> } {@link Cbact04cFdAcctfileRec}</li>
 * <li>DISCGRP-FILE: FD class {@code ->} {@link Cbact04cFdDiscgrpFile}, record class {@code -> } {@link Cbact04cFdDiscgrpRec}</li>
 * <li>TRANSACT-FILE: FD class {@code ->} {@link Cbact04cFdTransactFile}, record class {@code -> } {@link Cbact04cFdTranfileRec}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cbact04c {
    // *                                                                 
    @Autowired
    private Cbact04cFileOpTcatbalFile fdTcatbalFile;
    @Autowired
    private Cbact04cFileOpXrefFile fdXrefFile;
    @Autowired
    private Cbact04cFileOpDiscgrpFile fdDiscgrpFile;
    @Autowired
    private Cbact04cFileOpAccountFile fdAccountFile;
    @Autowired
    private Cbact04cFileOpTransactFile fdTransactFile;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _0000TcatbalfOpen = this::_0000TcatbalfOpen;
    Consumer<OpenFrameContext> _0100XreffileOpen = this::_0100XreffileOpen;
    Consumer<OpenFrameContext> _0200DiscgrpOpen = this::_0200DiscgrpOpen;
    Consumer<OpenFrameContext> _0300AcctfileOpen = this::_0300AcctfileOpen;
    Consumer<OpenFrameContext> _0400TranfileOpen = this::_0400TranfileOpen;
    Consumer<OpenFrameContext> _1000TcatbalfGetNext = this::_1000TcatbalfGetNext;
    Consumer<OpenFrameContext> _1050UpdateAccount = this::_1050UpdateAccount;
    Consumer<OpenFrameContext> _1100GetAcctData = this::_1100GetAcctData;
    Consumer<OpenFrameContext> _1110GetXrefData = this::_1110GetXrefData;
    Consumer<OpenFrameContext> _1200GetInterestRate = this::_1200GetInterestRate;
    Consumer<OpenFrameContext> _1200AGetDefaultIntRate = this::_1200AGetDefaultIntRate;
    Consumer<OpenFrameContext> _1300ComputeInterest = this::_1300ComputeInterest;
    Consumer<OpenFrameContext> _1300BWriteTx = this::_1300BWriteTx;
    Consumer<OpenFrameContext> _1400ComputeFees = this::_1400ComputeFees;
    Consumer<OpenFrameContext> _9000TcatbalfClose = this::_9000TcatbalfClose;
    Consumer<OpenFrameContext> _9100XreffileClose = this::_9100XreffileClose;
    Consumer<OpenFrameContext> _9200DiscgrpClose = this::_9200DiscgrpClose;
    Consumer<OpenFrameContext> _9300AcctfileClose = this::_9300AcctfileClose;
    Consumer<OpenFrameContext> _9400TranfileClose = this::_9400TranfileClose;
    Consumer<OpenFrameContext> zGetDb2FormatTimestamp = this::zGetDb2FormatTimestamp;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_0000TcatbalfOpen);
        methodList.add(_0100XreffileOpen);
        methodList.add(_0200DiscgrpOpen);
        methodList.add(_0300AcctfileOpen);
        methodList.add(_0400TranfileOpen);
        methodList.add(_1000TcatbalfGetNext);
        methodList.add(_1050UpdateAccount);
        methodList.add(_1100GetAcctData);
        methodList.add(_1110GetXrefData);
        methodList.add(_1200GetInterestRate);
        methodList.add(_1200AGetDefaultIntRate);
        methodList.add(_1300ComputeInterest);
        methodList.add(_1300BWriteTx);
        methodList.add(_1400ComputeFees);
        methodList.add(_9000TcatbalfClose);
        methodList.add(_9100XreffileClose);
        methodList.add(_9200DiscgrpClose);
        methodList.add(_9300AcctfileClose);
        methodList.add(_9400TranfileClose);
        methodList.add(zGetDb2FormatTimestamp);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext, String externalParms) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbact04c") == null) {
            Cbact04cVariableContainer container = new Cbact04cVariableContainer();
            context.setProgramVariableContainer("Cbact04c", container);
        }
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        if (externalParms != null) {
            container.getExternalParms().setParmLength(externalParms.length());
            container.getExternalParms().setParmDate(externalParms);
        } else {
            container.getExternalParms().setParmLength(0);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBACT04C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : BATCH COBOL Program                               
    // * Function    : This is a interest calculator program.            
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // ***************************************************************** 

    void unnamedSentence(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #192] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBACT04C");
        // [T-Up#INFO][CBACT04C.cbl, LINE #193] PERFORM statement
        controlManager.run(context, _0000TcatbalfOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #194] PERFORM statement
        controlManager.run(context, _0100XreffileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #195] PERFORM statement
        controlManager.run(context, _0200DiscgrpOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #196] PERFORM statement
        controlManager.run(context, _0300AcctfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #197] PERFORM statement
        controlManager.run(context, _0400TranfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #199] PERFORM statement
        while (!(CobStringUtils.compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #200] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBACT04C.cbl, LINE #201] PERFORM statement
                controlManager.run(context, _1000TcatbalfGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT04C.cbl, LINE #202] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBACT04C.cbl, LINE #203] ADD statement
                    container.getWsCounters().setWsRecordCount(
                            container.getWsCounters().getWsRecordCount() + 1);
                    // [T-Up#INFO][CBACT04C.cbl, LINE #204] DISPLAY statement
                    System.out.println(container.getTranCatBalRecord());
                    // [T-Up#INFO][CBACT04C.cbl, LINE #205] IF statement
                    if (CobStringUtils.compare(
                            PictureFormatter.intFormatWithoutSign(container
                                    .getTranCatBalRecord().getTranCatKey()
                                    .getTrancatAcctId(), "00000000000"),
                            container.getWsMiscVars().getWsLastAcctNum()) != 0) {
                        // [T-Up#INFO][CBACT04C.cbl, LINE #206] IF statement
                        if (CobStringUtils.compare(container.getWsMiscVars()
                                .getWsFirstTime(), "Y") != 0) {
                            // [T-Up#INFO][CBACT04C.cbl, LINE #207] PERFORM statement
                            controlManager.run(context, _1050UpdateAccount);
                            if (controlManager.isTerminate(context)) {
                                return;
                            }
                        } else {
                            // [T-Up#INFO][CBACT04C.cbl, LINE #209] MOVE statement
                            container.getWsMiscVars().setWsFirstTime("N");
                        }
                        // [T-Up#INFO][CBACT04C.cbl, LINE #211] MOVE statement
                        container.getWsMiscVars().setWsTotalInt(
                                BigDecimal.valueOf(0));
                        // [T-Up#INFO][CBACT04C.cbl, LINE #212] MOVE statement
                        container.getWsMiscVars()
                                .setWsLastAcctNum(
                                        StringUtils.leftPad(String.valueOf(Math
                                                .abs(container
                                                        .getTranCatBalRecord()
                                                        .getTranCatKey()
                                                        .getTrancatAcctId())),
                                                11, '0'));
                        // [T-Up#INFO][CBACT04C.cbl, LINE #213] MOVE statement
                        container.getFdAcctfileRec().setFdAcctId(
                                container.getTranCatBalRecord().getTranCatKey()
                                        .getTrancatAcctId());
                        // [T-Up#INFO][CBACT04C.cbl, LINE #214] PERFORM statement
                        controlManager.run(context, _1100GetAcctData);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                        // [T-Up#INFO][CBACT04C.cbl, LINE #215] MOVE statement
                        container.getFdXreffileRec().setFdXrefAcctId(
                                container.getTranCatBalRecord().getTranCatKey()
                                        .getTrancatAcctId());
                        // [T-Up#INFO][CBACT04C.cbl, LINE #216] PERFORM statement
                        controlManager.run(context, _1110GetXrefData);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                    // *              DISPLAY 'ACCT-GROUP-ID: ' ACCT-GROUP-ID            
                    // *              DISPLAY 'TRANCAT-CD: ' TRANCAT-CD                  
                    // *              DISPLAY 'TRANCAT-TYPE-CD: ' TRANCAT-TYPE-CD        
                    // [T-Up#INFO][CBACT04C.cbl, LINE #221] MOVE statement
                    container
                            .getFdDiscgrpRec()
                            .getFdDiscgrpKey()
                            .setFdDisAcctGroupId(
                                    container.getAccountRecord()
                                            .getAcctGroupId());
                    // [T-Up#INFO][CBACT04C.cbl, LINE #222] MOVE statement
                    container
                            .getFdDiscgrpRec()
                            .getFdDiscgrpKey()
                            .setFdDisTranCatCd(
                                    container.getTranCatBalRecord()
                                            .getTranCatKey().getTrancatCd());
                    // [T-Up#INFO][CBACT04C.cbl, LINE #223] MOVE statement
                    container
                            .getFdDiscgrpRec()
                            .getFdDiscgrpKey()
                            .setFdDisTranTypeCd(
                                    container.getTranCatBalRecord()
                                            .getTranCatKey().getTrancatTypeCd());
                    // [T-Up#INFO][CBACT04C.cbl, LINE #224] PERFORM statement
                    controlManager.run(context, _1200GetInterestRate);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBACT04C.cbl, LINE #225] IF statement
                    if (container.getDisGroupRecord().getDisIntRate()
                            .compareTo(BigDecimal.valueOf(0)) != 0) {
                        // [T-Up#INFO][CBACT04C.cbl, LINE #226] PERFORM statement
                        controlManager.run(context, _1300ComputeInterest);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                        // [T-Up#INFO][CBACT04C.cbl, LINE #227] PERFORM statement
                        controlManager.run(context, _1400ComputeFees);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                }
            } else {
                // [T-Up#INFO][CBACT04C.cbl, LINE #231] PERFORM statement
                controlManager.run(context, _1050UpdateAccount);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #235] PERFORM statement
        controlManager.run(context, _9000TcatbalfClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #236] PERFORM statement
        controlManager.run(context, _9100XreffileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #237] PERFORM statement
        controlManager.run(context, _9200DiscgrpClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #238] PERFORM statement
        controlManager.run(context, _9300AcctfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #239] PERFORM statement
        controlManager.run(context, _9400TranfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #241] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBACT04C");
        // [T-Up#INFO][CBACT04C.cbl, LINE #243] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // *---------------------------------------------------------------* 

    void _0000TcatbalfOpen(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #246] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #247] OPEN statement
        fdTcatbalFile.open(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #248] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #249] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #251] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #253] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #254] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #256] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION CATEGORY BALANCE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #257] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #258] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #259] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #261] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0100XreffileOpen(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #264] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #265] OPEN statement
        fdXrefFile.open(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #266] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #267] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #269] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #271] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #272] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #274] DISPLAY statement
            System.out.print("ERROR OPENING CROSS REF FILE");
            System.out.println(container.getXreffileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #275] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #276] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #277] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #279] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0200DiscgrpOpen(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #282] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #283] OPEN statement
        fdDiscgrpFile.open(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #284] IF statement
        if (CobStringUtils.compare(container.getDiscgrpStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #285] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #287] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #289] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #290] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #292] DISPLAY statement
            System.out.println("ERROR OPENING DALY REJECTS FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #293] MOVE statement
            container.getIoStatus().set(container.getDiscgrpStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #294] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #295] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #297] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0300AcctfileOpen(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #301] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #302] OPEN statement
        fdAccountFile.open(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #303] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #304] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #306] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #308] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #309] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #311] DISPLAY statement
            System.out.println("ERROR OPENING ACCOUNT MASTER FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #312] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #313] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #314] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #316] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0400TranfileOpen(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #319] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #320] OPEN statement
        fdTransactFile.open(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #321] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #322] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #324] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #326] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #327] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #329] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #330] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #331] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #332] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #334] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1000TcatbalfGetNext(OpenFrameContext context) {
        Cbact04cFdTranCatBalRecord tempCbact04cFdTranCatBalRecord1;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #337] READ statement
        tempCbact04cFdTranCatBalRecord1 = fdTcatbalFile.readNext(context);
        if (tempCbact04cFdTranCatBalRecord1 != null) {
            container.setFdTranCatBalRecord(tempCbact04cFdTranCatBalRecord1);
            container.getTranCatBalRecord().set(
                    container.getFdTranCatBalRecord());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #338] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #339] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #341] IF statement
            if (CobStringUtils.compare(container.getTcatbalfStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBACT04C.cbl, LINE #342] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBACT04C.cbl, LINE #344] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #347] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #348] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #350] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBACT04C.cbl, LINE #351] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBACT04C.cbl, LINE #353] DISPLAY statement
                System.out.println("ERROR READING TRANSACTION CATEGORY FILE");
                // [T-Up#INFO][CBACT04C.cbl, LINE #354] MOVE statement
                container.getIoStatus().set(container.getTcatbalfStatus());
                // [T-Up#INFO][CBACT04C.cbl, LINE #355] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT04C.cbl, LINE #356] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #359] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1050UpdateAccount(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // * Update the balances in account record to reflect posted trans.  
        // [T-Up#INFO][CBACT04C.cbl, LINE #363] ADD statement
        container.getAccountRecord().setAcctCurrBal(
                container.getAccountRecord().getAcctCurrBal()
                        .add(container.getWsMiscVars().getWsTotalInt()));
        // [T-Up#INFO][CBACT04C.cbl, LINE #364] MOVE statement
        container.getAccountRecord()
                .setAcctCurrCycCredit(BigDecimal.valueOf(0));
        // [T-Up#INFO][CBACT04C.cbl, LINE #365] MOVE statement
        container.getAccountRecord().setAcctCurrCycDebit(BigDecimal.valueOf(0));
        // [T-Up#INFO][CBACT04C.cbl, LINE #367] REWRITE statement
        container.getFdAcctfileRec().set(container.getAccountRecord());
        fdAccountFile.rewrite(context, container.getFdAcctfileRec(), container
                .getFdAcctfileRec().getFdAcctId());
        // [T-Up#INFO][CBACT04C.cbl, LINE #368] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #369] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #371] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #373] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #374] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #376] DISPLAY statement
            System.out.println("ERROR RE-WRITING ACCOUNT FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #377] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #378] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #379] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #381] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1100GetAcctData(OpenFrameContext context) {
        Cbact04cFdAcctfileRec tempCbact04cFdAcctfileRec1;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #384] READ statement
        tempCbact04cFdAcctfileRec1 = fdAccountFile.readKey(context, container
                .getFdAcctfileRec().getFdAcctId());
        if (tempCbact04cFdAcctfileRec1 != null) {
            container.setFdAcctfileRec(tempCbact04cFdAcctfileRec1);
            container.getAccountRecord().set(container.getFdAcctfileRec());
        } else if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #386] DISPLAY statement
            System.out.print("ACCOUNT NOT FOUND: ");
            System.out.println(container.getFdAcctfileRec().getFdAcctId());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #389] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #390] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #392] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #394] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #395] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #397] DISPLAY statement
            System.out.println("ERROR READING ACCOUNT FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #398] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #399] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #400] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #402] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1110GetXrefData(OpenFrameContext context) {
        Cbact04cFdXreffileRec tempCbact04cFdXreffileRec1;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #405] READ statement
        tempCbact04cFdXreffileRec1 = fdXrefFile.readAixKey(context, container
                .getFdXreffileRec().getFdXrefAcctId());
        if (tempCbact04cFdXreffileRec1 != null) {
            container.setFdXreffileRec(tempCbact04cFdXreffileRec1);
            container.getCardXrefRecord().set(container.getFdXreffileRec());
        } else if (fdXrefFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #408] DISPLAY statement
            System.out.print("ACCOUNT NOT FOUND: ");
            System.out.println(container.getFdXreffileRec().getFdXrefAcctId());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #411] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #412] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #414] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #416] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #417] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #419] DISPLAY statement
            System.out.println("ERROR READING XREF FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #420] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #421] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #422] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #424] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1200GetInterestRate(OpenFrameContext context) {
        Cbact04cFdDiscgrpRec tempCbact04cFdDiscgrpRec1;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #427] READ statement
        tempCbact04cFdDiscgrpRec1 = fdDiscgrpFile.readKey(context, container
                .getFdDiscgrpRec().getFdDiscgrpKey());
        if (tempCbact04cFdDiscgrpRec1 != null) {
            container.setFdDiscgrpRec(tempCbact04cFdDiscgrpRec1);
            container.getDisGroupRecord().set(container.getFdDiscgrpRec());
        } else if (fdDiscgrpFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #429] DISPLAY statement
            System.out.println("DISCLOSURE GROUP RECORD MISSING");
            // [T-Up#INFO][CBACT04C.cbl, LINE #430] DISPLAY statement
            System.out.println("TRY WITH DEFAULT GROUP CODE");
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #433] IF statement
        if (CobStringUtils.compare(container.getDiscgrpStatus().get(), "00") == 0
                || CobStringUtils.compare(container.getDiscgrpStatus().get(),
                        "23") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #434] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #436] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #439] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #440] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #442] DISPLAY statement
            System.out.println("ERROR READING DISCLOSURE GROUP FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #443] MOVE statement
            container.getIoStatus().set(container.getDiscgrpStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #444] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #445] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #447] IF statement
        if (CobStringUtils.compare(container.getDiscgrpStatus().get(), "23") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #448] MOVE statement
            container.getFdDiscgrpRec().getFdDiscgrpKey()
                    .setFdDisAcctGroupId("DEFAULT");
            // [T-Up#INFO][CBACT04C.cbl, LINE #449] PERFORM statement
            controlManager.run(context, _1200AGetDefaultIntRate);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #451] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1200AGetDefaultIntRate(OpenFrameContext context) {
        Cbact04cFdDiscgrpRec tempCbact04cFdDiscgrpRec1;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #455] READ statement
        tempCbact04cFdDiscgrpRec1 = fdDiscgrpFile.readKey(context, container
                .getFdDiscgrpRec().getFdDiscgrpKey());
        if (tempCbact04cFdDiscgrpRec1 != null) {
            container.setFdDiscgrpRec(tempCbact04cFdDiscgrpRec1);
            container.getDisGroupRecord().set(container.getFdDiscgrpRec());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #457] IF statement
        if (CobStringUtils.compare(container.getDiscgrpStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #458] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #460] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #463] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #464] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #466] DISPLAY statement
            System.out.println("ERROR READING DEFAULT DISCLOSURE GROUP");
            // [T-Up#INFO][CBACT04C.cbl, LINE #467] MOVE statement
            container.getIoStatus().set(container.getDiscgrpStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #468] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #469] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #471] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1300ComputeInterest(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #475] COMPUTE statement
        container.getWsMiscVars()
                .setWsMonthlyInt(
                        container
                                .getTranCatBalRecord()
                                .getTranCatBal()
                                .multiply(
                                        container.getDisGroupRecord()
                                                .getDisIntRate())
                                .divide(BigDecimal.valueOf(1200), 4,
                                        RoundingMode.DOWN));
        // [T-Up#INFO][CBACT04C.cbl, LINE #478] ADD statement
        container.getWsMiscVars().setWsTotalInt(
                container.getWsMiscVars().getWsTotalInt()
                        .add(container.getWsMiscVars().getWsMonthlyInt()));
        // [T-Up#INFO][CBACT04C.cbl, LINE #479] PERFORM statement
        controlManager.run(context, _1300BWriteTx);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #481] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1300BWriteTx(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #485] ADD statement
        container.getWsCounters().setWsTranidSuffix(
                container.getWsCounters().getWsTranidSuffix() + 1);
        // [T-Up#INFO][CBACT04C.cbl, LINE #487] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getTranRecord()
                .getTranId());
        tempStringBuilder1.append(container.getExternalParms().getParmDate())
                .append(container.getWsCounters().getWsTranidSuffix());
        if (tempStringBuilder1.length() <= 16) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getTranRecord().setTranId(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #493] MOVE statement
        container.getTranRecord().setTranTypeCd("01");
        // [T-Up#INFO][CBACT04C.cbl, LINE #494] MOVE statement
        container.getTranRecord().setTranCatCd(Integer.parseInt("05".trim()));
        // [T-Up#INFO][CBACT04C.cbl, LINE #495] MOVE statement
        container.getTranRecord().setTranSource("System");
        // [T-Up#INFO][CBACT04C.cbl, LINE #496] STRING statement
        tempStringBuilder1 = new StringBuilder();
        tempStringBuilder2 = new StringBuilder(container.getTranRecord()
                .getTranDesc());
        tempStringBuilder1.append("Int. for a/c ").append(
                container.getAccountRecord().getAcctId());
        if (tempStringBuilder1.length() <= 100) {
            tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                    tempStringBuilder1.toString());
            container.getTranRecord()
                    .setTranDesc(tempStringBuilder2.toString());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #501] MOVE statement
        container.getTranRecord().setTranAmt(
                container.getWsMiscVars().getWsMonthlyInt());
        // [T-Up#INFO][CBACT04C.cbl, LINE #502] MOVE statement
        container.getTranRecord().setTranMerchantId(0);
        // [T-Up#INFO][CBACT04C.cbl, LINE #503] MOVE statement
        container.getTranRecord().setTranMerchantName(
                StringUtils.repeat(' ', 50));
        // [T-Up#INFO][CBACT04C.cbl, LINE #504] MOVE statement
        container.getTranRecord().setTranMerchantCity(
                StringUtils.repeat(' ', 50));
        // [T-Up#INFO][CBACT04C.cbl, LINE #505] MOVE statement
        container.getTranRecord().setTranMerchantZip(
                StringUtils.repeat(' ', 10));
        // [T-Up#INFO][CBACT04C.cbl, LINE #506] MOVE statement
        container.getTranRecord().setTranCardNum(
                container.getCardXrefRecord().getXrefCardNum());
        // [T-Up#INFO][CBACT04C.cbl, LINE #507] PERFORM statement
        controlManager.run(context, zGetDb2FormatTimestamp);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #508] MOVE statement
        container.getTranRecord().setTranOrigTs(container.getDb2FormatTs());
        // [T-Up#INFO][CBACT04C.cbl, LINE #509] MOVE statement
        container.getTranRecord().setTranProcTs(container.getDb2FormatTs());
        // [T-Up#INFO][CBACT04C.cbl, LINE #511] WRITE statement
        container.getFdTranfileRec().set(container.getTranRecord());
        fdTransactFile.write(context, container.getFdTranfileRec());
        // [T-Up#INFO][CBACT04C.cbl, LINE #512] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #513] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #515] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #518] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #519] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #521] DISPLAY statement
            System.out.println("ERROR WRITING TRANSACTION RECORD");
            // [T-Up#INFO][CBACT04C.cbl, LINE #522] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #523] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #524] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #526] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1400ComputeFees(OpenFrameContext context) {
        // * To be implemented                                               
        // [T-Up#INFO][CBACT04C.cbl, LINE #531] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9000TcatbalfClose(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #534] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #535] CLOSE statement
        fdTcatbalFile.close(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #536] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #537] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #539] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #541] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #542] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #544] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #545] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #546] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #547] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #549] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9100XreffileClose(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #553] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #554] CLOSE statement
        fdXrefFile.close(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #555] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #556] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #558] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #560] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #561] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #563] DISPLAY statement
            System.out.println("ERROR CLOSING CROSS REF FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #564] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #565] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #566] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #568] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9200DiscgrpClose(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #571] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #572] CLOSE statement
        fdDiscgrpFile.close(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #573] IF statement
        if (CobStringUtils.compare(container.getDiscgrpStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #574] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #576] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #578] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #579] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #581] DISPLAY statement
            System.out.println("ERROR CLOSING DISCLOSURE GROUP FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #582] MOVE statement
            container.getIoStatus().set(container.getDiscgrpStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #583] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #584] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #586] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9300AcctfileClose(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #589] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #590] CLOSE statement
        fdAccountFile.close(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #591] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #592] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #594] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #596] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #597] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #599] DISPLAY statement
            System.out.println("ERROR CLOSING ACCOUNT FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #600] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #601] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #602] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #604] EXIT statement
    }

    void _9400TranfileClose(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #607] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT04C.cbl, LINE #608] CLOSE statement
        fdTransactFile.close(context);
        // [T-Up#INFO][CBACT04C.cbl, LINE #609] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #610] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #612] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #614] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #615] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #617] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION FILE");
            // [T-Up#INFO][CBACT04C.cbl, LINE #618] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBACT04C.cbl, LINE #619] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT04C.cbl, LINE #620] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #622] EXIT statement
    }

    void zGetDb2FormatTimestamp(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #625] MOVE statement
        container.getCobolTs().set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][CBACT04C.cbl, LINE #626] MOVE statement
        container.setDb2Yyyy(container.getCobolTs().getCobYyyy());
        // [T-Up#INFO][CBACT04C.cbl, LINE #627] MOVE statement
        container.setDb2Mm(container.getCobolTs().getCobMm());
        // [T-Up#INFO][CBACT04C.cbl, LINE #628] MOVE statement
        container.setDb2Dd(container.getCobolTs().getCobDd());
        // [T-Up#INFO][CBACT04C.cbl, LINE #629] MOVE statement
        container.setDb2Hh(container.getCobolTs().getCobHh());
        // [T-Up#INFO][CBACT04C.cbl, LINE #630] MOVE statement
        container.setDb2Min(container.getCobolTs().getCobMin());
        // [T-Up#INFO][CBACT04C.cbl, LINE #631] MOVE statement
        container.setDb2Ss(container.getCobolTs().getCobSs());
        // [T-Up#INFO][CBACT04C.cbl, LINE #632] MOVE statement
        container.setDb2Mil(Integer
                .parseInt(container.getCobolTs().getCobMil()));
        // [T-Up#INFO][CBACT04C.cbl, LINE #633] MOVE statement
        container.setDb2Rest("0000");
        // [T-Up#INFO][CBACT04C.cbl, LINE #634] MOVE statement
        container.setDb2Streep1("-");
        container.setDb2Streep2("-");
        container.setDb2Streep3("-");
        // [T-Up#INFO][CBACT04C.cbl, LINE #635] MOVE statement
        container.setDb2Dot1(".");
        container.setDb2Dot2(".");
        container.setDb2Dot3(".");
        // *    DISPLAY 'DB2-TIMESTAMP = ' DB2-FORMAT-TS                     
        // [T-Up#INFO][CBACT04C.cbl, LINE #637] EXIT statement
    }

    void _9999AbendProgram(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #640] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBACT04C.cbl, LINE #641] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBACT04C.cbl, LINE #642] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBACT04C.cbl, LINE #643] CALL statement
        throw new RuntimeException();
    }

    // ***************************************************************** 

    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbact04cVariableContainer container = (Cbact04cVariableContainer) context
                .getProgramVariableContainer("Cbact04c");
        // [T-Up#INFO][CBACT04C.cbl, LINE #647] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBACT04C.cbl, LINE #649] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBACT04C.cbl, LINE #650] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBACT04C.cbl, LINE #651] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBACT04C.cbl, LINE #652] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBACT04C.cbl, LINE #653] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBACT04C.cbl, LINE #655] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBACT04C.cbl, LINE #656] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBACT04C.cbl, LINE #657] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBACT04C.cbl, LINE #659] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:31 CDT 
    // *                                                                 
}
