package aws.carddemo;

import static aws.carddemo.variable.Cbact02cVariableContainer.*;
import aws.carddemo.file.*;
import aws.carddemo.variable.Cbact02cVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.batch.runtime.data.Dd;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:55 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBACT02C.cbl</li>
 * <li>Variable container class: {@link Cbact02cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>CARDFILE-FILE: FD class {@code ->} {@link Cbact02cFdCardfileFile}, record class {@code -> } {@link Cbact02cFdCardfileRec}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cbact02c {
    // *                                                                 
    @Autowired
    private Cbact02cFileOpCardfileFile fdCardfileFile;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _1000CardfileGetNext = this::_1000CardfileGetNext;
    Consumer<OpenFrameContext> _0000CardfileOpen = this::_0000CardfileOpen;
    Consumer<OpenFrameContext> _9000CardfileClose = this::_9000CardfileClose;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_1000CardfileGetNext);
        methodList.add(_0000CardfileOpen);
        methodList.add(_9000CardfileClose);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbact02c") == null) {
            Cbact02cVariableContainer container = new Cbact02cVariableContainer();
            context.setProgramVariableContainer("Cbact02c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBACT02C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : BATCH COBOL Program                               
    // * Function    : Read and print card data file.                    
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // ***************************************************************** 

    void unnamedSentence(OpenFrameContext context) {
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #71] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBACT02C");
        // [T-Up#INFO][CBACT02C.cbl, LINE #72] PERFORM statement
        controlManager.run(context, _0000CardfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #74] PERFORM statement
        while (!(CobStringUtils.compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #75] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBACT02C.cbl, LINE #76] PERFORM statement
                controlManager.run(context, _1000CardfileGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT02C.cbl, LINE #77] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBACT02C.cbl, LINE #78] DISPLAY statement
                    System.out.println(container.getCardRecord());
                }
            }
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #83] PERFORM statement
        controlManager.run(context, _9000CardfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #85] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBACT02C");
        // [T-Up#INFO][CBACT02C.cbl, LINE #87] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // ***************************************************************** 
    // * I/O ROUTINES TO ACCESS A KSDS, VSAM DATA SET...               * 
    // ***************************************************************** 

    void _1000CardfileGetNext(OpenFrameContext context) {
        Cbact02cFdCardfileRec tempCbact02cFdCardfileRec1;
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #93] READ statement
        tempCbact02cFdCardfileRec1 = fdCardfileFile.readNext(context);
        if (tempCbact02cFdCardfileRec1 != null) {
            container.setFdCardfileRec(tempCbact02cFdCardfileRec1);
            container.getCardRecord().set(container.getFdCardfileRec());
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #94] IF statement
        if (CobStringUtils.compare(container.getCardfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #95] MOVE statement
            container.setApplResult(0);
        } else {
            // *        DISPLAY CARD-RECORD                                      
            // [T-Up#INFO][CBACT02C.cbl, LINE #98] IF statement
            if (CobStringUtils.compare(container.getCardfileStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBACT02C.cbl, LINE #99] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBACT02C.cbl, LINE #101] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #104] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #105] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #107] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBACT02C.cbl, LINE #108] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBACT02C.cbl, LINE #110] DISPLAY statement
                System.out.println("ERROR READING CARDFILE");
                // [T-Up#INFO][CBACT02C.cbl, LINE #111] MOVE statement
                container.getIoStatus().set(container.getCardfileStatus());
                // [T-Up#INFO][CBACT02C.cbl, LINE #112] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBACT02C.cbl, LINE #113] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #116] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0000CardfileOpen(OpenFrameContext context) {
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #119] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT02C.cbl, LINE #120] OPEN statement
        fdCardfileFile.open(context);
        // [T-Up#INFO][CBACT02C.cbl, LINE #121] IF statement
        if (CobStringUtils.compare(container.getCardfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #122] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #124] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #126] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #127] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #129] DISPLAY statement
            System.out.println("ERROR OPENING CARDFILE");
            // [T-Up#INFO][CBACT02C.cbl, LINE #130] MOVE statement
            container.getIoStatus().set(container.getCardfileStatus());
            // [T-Up#INFO][CBACT02C.cbl, LINE #131] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT02C.cbl, LINE #132] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #134] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9000CardfileClose(OpenFrameContext context) {
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #137] ADD statement
        container.setApplResult(8);
        // [T-Up#INFO][CBACT02C.cbl, LINE #138] CLOSE statement
        fdCardfileFile.close(context);
        // [T-Up#INFO][CBACT02C.cbl, LINE #139] IF statement
        if (CobStringUtils.compare(container.getCardfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #140] SUBTRACT statement
            container.setApplResult(container.getApplResult()
                    - container.getApplResult());
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #142] ADD statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #144] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #145] CONTINUE statement
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #147] DISPLAY statement
            System.out.println("ERROR CLOSING CARDFILE");
            // [T-Up#INFO][CBACT02C.cbl, LINE #148] MOVE statement
            container.getIoStatus().set(container.getCardfileStatus());
            // [T-Up#INFO][CBACT02C.cbl, LINE #149] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBACT02C.cbl, LINE #150] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #152] EXIT statement
    }

    void _9999AbendProgram(OpenFrameContext context) {
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #155] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBACT02C.cbl, LINE #156] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBACT02C.cbl, LINE #157] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBACT02C.cbl, LINE #158] CALL statement
        throw new RuntimeException();
    }

    // ***************************************************************** 

    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbact02cVariableContainer container = (Cbact02cVariableContainer) context
                .getProgramVariableContainer("Cbact02c");
        // [T-Up#INFO][CBACT02C.cbl, LINE #162] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBACT02C.cbl, LINE #164] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBACT02C.cbl, LINE #165] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBACT02C.cbl, LINE #166] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBACT02C.cbl, LINE #167] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBACT02C.cbl, LINE #168] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBACT02C.cbl, LINE #170] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBACT02C.cbl, LINE #171] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBACT02C.cbl, LINE #172] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBACT02C.cbl, LINE #174] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:31 CDT 
    // *                                                                 
}
