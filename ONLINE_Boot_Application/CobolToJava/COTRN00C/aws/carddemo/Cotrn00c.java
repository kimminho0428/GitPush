package aws.carddemo;

import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.Cosgn00cInputDto;
import aws.carddemo.mapper.Cotrn00cMapperInterface.*;
import aws.carddemo.dto.Comen01cInputDto;
import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import aws.carddemo.dto.Cotrn01cInputDto;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.Cotrn00cOutputDto;
import aws.carddemo.dto.Cotrn00cInputDto;
import com.tmax.openframe.online.service.exception.ConditionException;
import aws.carddemo.dao.AwsM2CarddemoTransactVsamKsdsDao;
import aws.carddemo.dto.AwsM2CarddemoTransactVsamKsdsDto;
import com.tmax.openframe.online.service.api.ReadPointManager;
import com.tmax.openframe.online.service.dto.ReadPoint;
import com.tmax.openframe.online.service.api.ReadPointAccessor;
import static aws.carddemo.variable.group.Cotrn00cCarddemoCommarea.Cotrn00cCdemoCt00Info.*;
import static aws.carddemo.variable.group.Cotrn00cCarddemoCommarea.Cotrn00cCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.Cotrn00cWsVariables.*;
import aws.carddemo.variable.Cotrn00cVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:43 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COTRN00C.cbl</li>
 * <li>Variable container class: {@link Cotrn00cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cotrn00c {
    private final ReadPointAccessor readPointAccessor;
    private final ReadPointManager readPointManager;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> processPf7Key = this::processPf7Key;
    Consumer<OpenFrameContext> processPf8Key = this::processPf8Key;
    Consumer<OpenFrameContext> processPageForward = this::processPageForward;
    Consumer<OpenFrameContext> processPageBackward = this::processPageBackward;
    Consumer<OpenFrameContext> populateTranData = this::populateTranData;
    Consumer<OpenFrameContext> initializeTranData = this::initializeTranData;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendTrnlstScreen = this::sendTrnlstScreen;
    Consumer<OpenFrameContext> receiveTrnlstScreen = this::receiveTrnlstScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> startbrTransactFile = this::startbrTransactFile;
    Consumer<OpenFrameContext> readnextTransactFile = this::readnextTransactFile;
    Consumer<OpenFrameContext> readprevTransactFile = this::readprevTransactFile;
    Consumer<OpenFrameContext> endbrTransactFile = this::endbrTransactFile;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(processPf7Key);
        methodList.add(processPf8Key);
        methodList.add(processPageForward);
        methodList.add(processPageBackward);
        methodList.add(populateTranData);
        methodList.add(initializeTranData);
        methodList.add(returnToPrevScreen);
        methodList.add(sendTrnlstScreen);
        methodList.add(receiveTrnlstScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(startbrTransactFile);
        methodList.add(readnextTransactFile);
        methodList.add(readprevTransactFile);
        methodList.add(endbrTransactFile);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cotrn00c") == null) {
            Cotrn00cVariableContainer container = new Cotrn00cVariableContainer();
            context.setProgramVariableContainer("Cotrn00c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : COTRN00C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : CICS COBOL Program                                
    // * Function    : List Transactions from TRANSACT file              
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION                        
    // *----------------------------------------------------------------*

    void mainPara(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #97] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][COTRN00C.cbl, LINE #98] SET statement
        container.getWsVariables().setWsTransactEof(TRANSACT_NOT_EOF);
        // [T-Up#INFO][COTRN00C.cbl, LINE #99] SET statement
        container.getCarddemoCommarea().getCdemoCt00Info()
                .setCdemoCt00NextPageFlg(NEXT_PAGE_NO);
        // [T-Up#INFO][COTRN00C.cbl, LINE #100] SET statement
        container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_YES);
        // [T-Up#INFO][COTRN00C.cbl, LINE #102] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][COTRN00C.cbl, LINE #105] MOVE statement
        container.getCotrn0ai().setTrnidinl(-1);
        // [T-Up#INFO][COTRN00C.cbl, LINE #107] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #108] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][COTRN00C.cbl, LINE #109] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][COTRN00C.cbl, LINE #110] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][COTRN00C.cbl, LINE #111] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][COTRN00C.cbl, LINE #112] EXEC_CICS statement
            /*
                               EXEC CICS                                                
                               XCTL PROGRAM('COSGN00C')                                 
                               COMMAREA(CARDDEMO-COMMAREA)                              
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            cosgn00cInputDto
                    .setDfhcommarea(Cotrn00cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][COTRN00C.cbl, LINE #116] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #118] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 218),
                            0, 218));
            // [T-Up#INFO][COTRN00C.cbl, LINE #119] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #120] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][COTRN00C.cbl, LINE #121] MOVE statement
                container.setCotrn0ao(Cotrn00cCotrn0ai
                        .createDefaultValueInstance().get());
                // [T-Up#INFO][COTRN00C.cbl, LINE #122] PERFORM statement
                controlManager.run(context, processEnterKey);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #123] PERFORM statement
                controlManager.run(context, sendTrnlstScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][COTRN00C.cbl, LINE #125] PERFORM statement
                controlManager.run(context, receiveTrnlstScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #126] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #128] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #130] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COMEN01C");
                    // [T-Up#INFO][COTRN00C.cbl, LINE #131] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][COTRN00C.cbl, LINE #132] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][COTRN00C.cbl, LINE #133] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][COTRN00C.cbl, LINE #134] EXEC_CICS statement
                    /*
                                                   EXEC CICS                                    
                                                   XCTL PROGRAM('COMEN01C')                     
                                                   COMMAREA(CARDDEMO-COMMAREA)                  
                                                   END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(Cotrn00cCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][COTRN00C.cbl, LINE #138] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf7()) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #140] PERFORM statement
                    controlManager.run(context, processPf7Key);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf8()) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #142] PERFORM statement
                    controlManager.run(context, processPf8Key);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #144] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][COTRN00C.cbl, LINE #145] MOVE statement
                    container.getCotrn0ai().setTrnidinl(-1);
                    // [T-Up#INFO][COTRN00C.cbl, LINE #146] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][COTRN00C.cbl, LINE #147] PERFORM statement
                    controlManager.run(context, sendTrnlstScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #152] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                                 TRANSID (WS-TRANID)                                
                                 COMMAREA (CARDDEMO-COMMAREA)                       
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CT00")
                .data(Data
                        .session(Cotrn00cCarddemoCommareaToCotrn00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY                          
    // *----------------------------------------------------------------*

    void processEnterKey(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #162] EVALUATE statement
        if (CobStringUtils.compare(container.getCotrn0ai().getSel0001i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0001i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #164] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0001i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #165] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid01i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0002i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0002i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #167] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0002i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #168] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid02i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0003i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0003i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #170] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0003i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #171] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid03i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0004i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0004i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #173] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0004i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #174] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid04i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0005i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0005i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #176] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0005i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #177] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid05i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0006i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0006i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #179] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0006i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #180] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid06i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0007i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0007i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #182] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0007i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #183] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid07i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0008i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0008i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #185] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0008i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #186] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid08i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0009i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0009i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #188] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0009i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #189] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid09i());
        } else if (CobStringUtils.compare(
                container.getCotrn0ai().getSel0010i(), " ") != 0
                && CobStringUtils.compare(
                        container.getCotrn0ai().getSel0010i(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #191] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(
                            container.getCotrn0ai().getSel0010i());
            // [T-Up#INFO][COTRN00C.cbl, LINE #192] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(
                            container.getCotrn0ai().getTrnid10i());
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #194] MOVE statement
            container.getCarddemoCommarea().getCdemoCt00Info()
                    .setCdemoCt00TrnSelFlg(" ");
            // [T-Up#INFO][COTRN00C.cbl, LINE #195] MOVE statement
            container.getCarddemoCommarea().getCdemoCt00Info()
                    .setCdemoCt00TrnSelected(StringUtils.repeat(' ', 16));
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #197] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCt00Info().getCdemoCt00TrnSelFlg(), " ") != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00TrnSelFlg(),
                        StringUtils.repeat((char) 0x00, 1)) != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00TrnSelected(),
                        StringUtils.repeat(' ', 16)) != 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00TrnSelected(),
                        StringUtils.repeat((char) 0x00, 16)) != 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #199] EVALUATE statement
            switch (container.getCarddemoCommarea().getCdemoCt00Info()
                    .getCdemoCt00TrnSelFlg()) {
            case "S":
            case "s": {
                // [T-Up#INFO][COTRN00C.cbl, LINE #202] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoToProgram("COTRN01C");
                // [T-Up#INFO][COTRN00C.cbl, LINE #203] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromTranid(
                                container.getWsVariables().getWsTranid());
                // [T-Up#INFO][COTRN00C.cbl, LINE #204] MOVE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoGeneralInfo()
                        .setCdemoFromProgram(
                                container.getWsVariables().getWsPgmname());
                // [T-Up#INFO][COTRN00C.cbl, LINE #205] MOVE statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(0);
                // [T-Up#INFO][COTRN00C.cbl, LINE #206] EXEC_CICS statement
                /*
                                            EXEC CICS                                       
                                                XCTL PROGRAM('COTRN01C')                    
                                                COMMAREA(CARDDEMO-COMMAREA)                 
                                            END-EXEC
                 */
                Cotrn01cInputDto cotrn01cInputDto = new Cotrn01cInputDto();
                cotrn01cInputDto
                        .setDfhcommarea(Cotrn00cCarddemoCommareaToCotrn01cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea()));
                programControl.forward("CT01", cotrn01cInputDto);
                context.setReturnFlag(true);
                break;
            }
            default: {
                // *                SET TRANSACT-EOF TO TRUE                         
                // [T-Up#INFO][COTRN00C.cbl, LINE #212] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Invalid selection. Valid value is S");
                // [T-Up#INFO][COTRN00C.cbl, LINE #215] MOVE statement
                container.getCotrn0ai().setTrnidinl(-1);
                break;
            }
            }
        }
        // *                PERFORM SEND-TRNLST-SCREEN                       
        // [T-Up#INFO][COTRN00C.cbl, LINE #220] IF statement
        if (CobStringUtils.compare(container.getCotrn0ai().getTrnidini(),
                StringUtils.repeat(' ', 16)) == 0
                || CobStringUtils.compare(
                        container.getCotrn0ai().getTrnidini(),
                        StringUtils.repeat((char) 0x00, 16)) == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #221] MOVE statement
            container.getTranRecord().setTranId(
                    StringUtils.repeat((char) 0x00, 16));
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #223] IF statement
            if (StringUtils.isNumeric(container.getCotrn0ai().getTrnidini())) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #224] MOVE statement
                container.getTranRecord().setTranId(
                        container.getCotrn0ai().getTrnidini());
            } else {
                // [T-Up#INFO][COTRN00C.cbl, LINE #226] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][COTRN00C.cbl, LINE #227] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Tran ID must be Numeric ...");
                // [T-Up#INFO][COTRN00C.cbl, LINE #230] MOVE statement
                container.getCotrn0ai().setTrnidinl(-1);
                // [T-Up#INFO][COTRN00C.cbl, LINE #231] PERFORM statement
                controlManager.run(context, sendTrnlstScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #235] MOVE statement
        container.getCotrn0ai().setTrnidinl(-1);
        // [T-Up#INFO][COTRN00C.cbl, LINE #238] MOVE statement
        container.getCarddemoCommarea().getCdemoCt00Info()
                .setCdemoCt00PageNum(0);
        // [T-Up#INFO][COTRN00C.cbl, LINE #239] PERFORM statement
        controlManager.run(context, processPageForward);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #241] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #242] MOVE statement
            container.setTrnidino(StringUtils.repeat(' ', 16));
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PF7-KEY                            
    // *----------------------------------------------------------------*

    void processPf7Key(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #250] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCt00Info().getCdemoCt00TrnidFirst(),
                StringUtils.repeat(' ', 16)) == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00TrnidFirst(),
                        StringUtils.repeat((char) 0x00, 16)) == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #251] MOVE statement
            container.getTranRecord().setTranId(
                    StringUtils.repeat((char) 0x00, 16));
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #253] MOVE statement
            container.getTranRecord().setTranId(
                    container.getCarddemoCommarea().getCdemoCt00Info()
                            .getCdemoCt00TrnidFirst());
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #256] SET statement
        container.getCarddemoCommarea().getCdemoCt00Info()
                .setCdemoCt00NextPageFlg(NEXT_PAGE_YES);
        // [T-Up#INFO][COTRN00C.cbl, LINE #257] MOVE statement
        container.getCotrn0ai().setTrnidinl(-1);
        // [T-Up#INFO][COTRN00C.cbl, LINE #259] IF statement
        if (container.getCarddemoCommarea().getCdemoCt00Info()
                .getCdemoCt00PageNum() > 1) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #260] PERFORM statement
            controlManager.run(context, processPageBackward);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #262] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are already at the top of the page...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #264] SET statement
            container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_NO);
            // [T-Up#INFO][COTRN00C.cbl, LINE #265] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PF8-KEY                            
    // *----------------------------------------------------------------*

    void processPf8Key(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #273] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCt00Info().getCdemoCt00TrnidLast(),
                StringUtils.repeat(' ', 16)) == 0
                || CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00TrnidLast(),
                        StringUtils.repeat((char) 0x00, 16)) == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #274] MOVE statement
            container.getTranRecord().setTranId(
                    StringUtils.repeat((char) 0xFF, 16));
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #276] MOVE statement
            container.getTranRecord().setTranId(
                    container.getCarddemoCommarea().getCdemoCt00Info()
                            .getCdemoCt00TrnidLast());
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #279] MOVE statement
        container.getCotrn0ai().setTrnidinl(-1);
        // [T-Up#INFO][COTRN00C.cbl, LINE #281] IF statement
        if (CobStringUtils.compare(container.getCarddemoCommarea()
                .getCdemoCt00Info().getCdemoCt00NextPageFlg(), NEXT_PAGE_YES) == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #282] PERFORM statement
            controlManager.run(context, processPageForward);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #284] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are already at the bottom of the page...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #286] SET statement
            container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_NO);
            // [T-Up#INFO][COTRN00C.cbl, LINE #287] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PAGE-FORWARD                       
    // *----------------------------------------------------------------*

    void processPageForward(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #295] PERFORM statement
        controlManager.run(context, startbrTransactFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #297] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #299] IF statement
            if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhenter()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf7()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf3()) != 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #300] PERFORM statement
                controlManager.run(context, readnextTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #303] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #304] PERFORM statement
                container.getWsVariables().setWsIdx(1);
                while (!(container.getWsVariables().getWsIdx() > 10)) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #305] PERFORM statement
                    controlManager.run(context, initializeTranData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #309] MOVE statement
            container.getWsVariables().setWsIdx(1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #311] PERFORM statement
            while (!((container.getWsVariables().getWsIdx() >= 11 || CobStringUtils
                    .compare(container.getWsVariables().getWsTransactEof(),
                            TRANSACT_EOF) == 0) || CobStringUtils.compare(
                    container.getWsVariables().getWsErrFlg(), ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #312] PERFORM statement
                controlManager.run(context, readnextTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #313] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #314] PERFORM statement
                    controlManager.run(context, populateTranData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][COTRN00C.cbl, LINE #315] COMPUTE statement
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #319] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #320] COMPUTE statement
                container
                        .getCarddemoCommarea()
                        .getCdemoCt00Info()
                        .setCdemoCt00PageNum(
                                container.getCarddemoCommarea()
                                        .getCdemoCt00Info()
                                        .getCdemoCt00PageNum() + 1);
                // [T-Up#INFO][COTRN00C.cbl, LINE #322] PERFORM statement
                controlManager.run(context, readnextTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #323] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #324] SET statement
                    container.getCarddemoCommarea().getCdemoCt00Info()
                            .setCdemoCt00NextPageFlg(NEXT_PAGE_YES);
                } else {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #326] SET statement
                    container.getCarddemoCommarea().getCdemoCt00Info()
                            .setCdemoCt00NextPageFlg(NEXT_PAGE_NO);
                }
            } else {
                // [T-Up#INFO][COTRN00C.cbl, LINE #329] SET statement
                container.getCarddemoCommarea().getCdemoCt00Info()
                        .setCdemoCt00NextPageFlg(NEXT_PAGE_NO);
                // [T-Up#INFO][COTRN00C.cbl, LINE #330] IF statement
                if (container.getWsVariables().getWsIdx() > 1) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #331] COMPUTE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoCt00Info()
                            .setCdemoCt00PageNum(
                                    container.getCarddemoCommarea()
                                            .getCdemoCt00Info()
                                            .getCdemoCt00PageNum() + 1);
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #336] PERFORM statement
            controlManager.run(context, endbrTransactFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #338] MOVE statement
            container.getCotrn0ai().setPagenumi(
                    StringUtils.leftPad(
                            String.valueOf(Math.abs(container
                                    .getCarddemoCommarea().getCdemoCt00Info()
                                    .getCdemoCt00PageNum())), 8, '0'));
            // [T-Up#INFO][COTRN00C.cbl, LINE #339] MOVE statement
            container.setTrnidino(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #340] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-PAGE-BACKWARD                      
    // *----------------------------------------------------------------*

    void processPageBackward(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #349] PERFORM statement
        controlManager.run(context, startbrTransactFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #351] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #353] IF statement
            if (CobStringUtils.compare(task.getPressedKey(), container
                    .getDfhaid().getDfhenter()) != 0
                    && CobStringUtils.compare(task.getPressedKey(), container
                            .getDfhaid().getDfhpf8()) != 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #354] PERFORM statement
                controlManager.run(context, readprevTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #357] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #358] PERFORM statement
                container.getWsVariables().setWsIdx(1);
                while (!(container.getWsVariables().getWsIdx() > 10)) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #359] PERFORM statement
                    controlManager.run(context, initializeTranData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() + 1);
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #363] MOVE statement
            container.getWsVariables().setWsIdx(10);
            // [T-Up#INFO][COTRN00C.cbl, LINE #365] PERFORM statement
            while (!((container.getWsVariables().getWsIdx() <= 0 || CobStringUtils
                    .compare(container.getWsVariables().getWsTransactEof(),
                            TRANSACT_EOF) == 0) || CobStringUtils.compare(
                    container.getWsVariables().getWsErrFlg(), ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #366] PERFORM statement
                controlManager.run(context, readprevTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #367] IF statement
                if (CobStringUtils.compare(container.getWsVariables()
                        .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                        && CobStringUtils.compare(container.getWsVariables()
                                .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #368] PERFORM statement
                    controlManager.run(context, populateTranData);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][COTRN00C.cbl, LINE #369] COMPUTE statement
                    container.getWsVariables().setWsIdx(
                            container.getWsVariables().getWsIdx() - 1);
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #373] IF statement
            if (CobStringUtils.compare(container.getWsVariables()
                    .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                    && CobStringUtils.compare(container.getWsVariables()
                            .getWsErrFlg(), ERR_FLG_OFF) == 0) {
                // [T-Up#INFO][COTRN00C.cbl, LINE #374] PERFORM statement
                controlManager.run(context, readprevTransactFile);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COTRN00C.cbl, LINE #375] IF statement
                if (CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoCt00Info().getCdemoCt00NextPageFlg(),
                        NEXT_PAGE_YES) == 0) {
                    // [T-Up#INFO][COTRN00C.cbl, LINE #376] IF statement
                    if (CobStringUtils.compare(container.getWsVariables()
                            .getWsTransactEof(), TRANSACT_NOT_EOF) == 0
                            && CobStringUtils.compare(container
                                    .getWsVariables().getWsErrFlg(),
                                    ERR_FLG_OFF) == 0
                            && container.getCarddemoCommarea()
                                    .getCdemoCt00Info().getCdemoCt00PageNum() > 1) {
                        // [T-Up#INFO][COTRN00C.cbl, LINE #378] SUBTRACT statement
                        container
                                .getCarddemoCommarea()
                                .getCdemoCt00Info()
                                .setCdemoCt00PageNum(
                                        container.getCarddemoCommarea()
                                                .getCdemoCt00Info()
                                                .getCdemoCt00PageNum() - 1);
                    } else {
                        // [T-Up#INFO][COTRN00C.cbl, LINE #380] MOVE statement
                        container.getCarddemoCommarea().getCdemoCt00Info()
                                .setCdemoCt00PageNum(1);
                    }
                }
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #385] PERFORM statement
            controlManager.run(context, endbrTransactFile);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COTRN00C.cbl, LINE #387] MOVE statement
            container.getCotrn0ai().setPagenumi(
                    StringUtils.leftPad(
                            String.valueOf(Math.abs(container
                                    .getCarddemoCommarea().getCdemoCt00Info()
                                    .getCdemoCt00PageNum())), 8, '0'));
            // [T-Up#INFO][COTRN00C.cbl, LINE #388] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-TRAN-DATA                         
    // *----------------------------------------------------------------*

    void populateTranData(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #397] MOVE statement
        container.getWsVariables().setWsTranAmt(
                container.getTranRecord().getTranAmt());
        // [T-Up#INFO][COTRN00C.cbl, LINE #398] MOVE statement
        container.getWsDateTime().getWsTimestamp()
                .set(container.getTranRecord().getTranOrigTs());
        // [T-Up#INFO][COTRN00C.cbl, LINE #399] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsTimestamp()
                                                .getWsTimestampDtYyyy(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COTRN00C.cbl, LINE #400] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsTimestamp()
                                .getWsTimestampDtMm());
        // [T-Up#INFO][COTRN00C.cbl, LINE #401] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsTimestamp()
                                .getWsTimestampDtDd());
        // [T-Up#INFO][COTRN00C.cbl, LINE #402] MOVE statement
        container.getWsVariables().setWsTranDate(
                container.getWsDateTime().getWsCurdateMmDdYy().get());
        // [T-Up#INFO][COTRN00C.cbl, LINE #404] EVALUATE statement
        switch (container.getWsVariables().getWsIdx()) {
        case 1: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #406] MOVE statement
            container.getCotrn0ai().setTrnid01i(
                    container.getTranRecord().getTranId());
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnidFirst(
                            container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #408] MOVE statement
            container.getCotrn0ai().setTdate01i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #409] MOVE statement
            container.getCotrn0ai().setTdesc01i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #410] MOVE statement
            container.getCotrn0ai().setTamt001i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 2: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #412] MOVE statement
            container.getCotrn0ai().setTrnid02i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #413] MOVE statement
            container.getCotrn0ai().setTdate02i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #414] MOVE statement
            container.getCotrn0ai().setTdesc02i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #415] MOVE statement
            container.getCotrn0ai().setTamt002i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 3: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #417] MOVE statement
            container.getCotrn0ai().setTrnid03i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #418] MOVE statement
            container.getCotrn0ai().setTdate03i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #419] MOVE statement
            container.getCotrn0ai().setTdesc03i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #420] MOVE statement
            container.getCotrn0ai().setTamt003i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 4: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #422] MOVE statement
            container.getCotrn0ai().setTrnid04i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #423] MOVE statement
            container.getCotrn0ai().setTdate04i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #424] MOVE statement
            container.getCotrn0ai().setTdesc04i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #425] MOVE statement
            container.getCotrn0ai().setTamt004i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 5: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #427] MOVE statement
            container.getCotrn0ai().setTrnid05i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #428] MOVE statement
            container.getCotrn0ai().setTdate05i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #429] MOVE statement
            container.getCotrn0ai().setTdesc05i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #430] MOVE statement
            container.getCotrn0ai().setTamt005i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 6: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #432] MOVE statement
            container.getCotrn0ai().setTrnid06i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #433] MOVE statement
            container.getCotrn0ai().setTdate06i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #434] MOVE statement
            container.getCotrn0ai().setTdesc06i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #435] MOVE statement
            container.getCotrn0ai().setTamt006i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 7: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #437] MOVE statement
            container.getCotrn0ai().setTrnid07i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #438] MOVE statement
            container.getCotrn0ai().setTdate07i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #439] MOVE statement
            container.getCotrn0ai().setTdesc07i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #440] MOVE statement
            container.getCotrn0ai().setTamt007i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 8: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #442] MOVE statement
            container.getCotrn0ai().setTrnid08i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #443] MOVE statement
            container.getCotrn0ai().setTdate08i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #444] MOVE statement
            container.getCotrn0ai().setTdesc08i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #445] MOVE statement
            container.getCotrn0ai().setTamt008i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 9: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #447] MOVE statement
            container.getCotrn0ai().setTrnid09i(
                    container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #448] MOVE statement
            container.getCotrn0ai().setTdate09i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #449] MOVE statement
            container.getCotrn0ai().setTdesc09i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #450] MOVE statement
            container.getCotrn0ai().setTamt009i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        case 10: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #452] MOVE statement
            container.getCotrn0ai().setTrnid10i(
                    container.getTranRecord().getTranId());
            container
                    .getCarddemoCommarea()
                    .getCdemoCt00Info()
                    .setCdemoCt00TrnidLast(
                            container.getTranRecord().getTranId());
            // [T-Up#INFO][COTRN00C.cbl, LINE #454] MOVE statement
            container.getCotrn0ai().setTdate10i(
                    container.getWsVariables().getWsTranDate());
            // [T-Up#INFO][COTRN00C.cbl, LINE #455] MOVE statement
            container.getCotrn0ai().setTdesc10i(
                    container.getTranRecord().getTranDesc());
            // [T-Up#INFO][COTRN00C.cbl, LINE #456] MOVE statement
            container.getCotrn0ai().setTamt010i(
                    container.getWsVariables().getWsTranAmt());
            break;
        }
        default: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #458] CONTINUE statement
            break;
        }
        }
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-TRAN-DATA                       
    // *----------------------------------------------------------------*

    void initializeTranData(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #466] EVALUATE statement
        switch (container.getWsVariables().getWsIdx()) {
        case 1: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #468] MOVE statement
            container.getCotrn0ai().setTrnid01i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #469] MOVE statement
            container.getCotrn0ai().setTdate01i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #470] MOVE statement
            container.getCotrn0ai().setTdesc01i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #471] MOVE statement
            container.getCotrn0ai().setTamt001i(StringUtils.repeat(' ', 12));
            break;
        }
        case 2: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #473] MOVE statement
            container.getCotrn0ai().setTrnid02i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #474] MOVE statement
            container.getCotrn0ai().setTdate02i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #475] MOVE statement
            container.getCotrn0ai().setTdesc02i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #476] MOVE statement
            container.getCotrn0ai().setTamt002i(StringUtils.repeat(' ', 12));
            break;
        }
        case 3: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #478] MOVE statement
            container.getCotrn0ai().setTrnid03i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #479] MOVE statement
            container.getCotrn0ai().setTdate03i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #480] MOVE statement
            container.getCotrn0ai().setTdesc03i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #481] MOVE statement
            container.getCotrn0ai().setTamt003i(StringUtils.repeat(' ', 12));
            break;
        }
        case 4: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #483] MOVE statement
            container.getCotrn0ai().setTrnid04i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #484] MOVE statement
            container.getCotrn0ai().setTdate04i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #485] MOVE statement
            container.getCotrn0ai().setTdesc04i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #486] MOVE statement
            container.getCotrn0ai().setTamt004i(StringUtils.repeat(' ', 12));
            break;
        }
        case 5: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #488] MOVE statement
            container.getCotrn0ai().setTrnid05i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #489] MOVE statement
            container.getCotrn0ai().setTdate05i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #490] MOVE statement
            container.getCotrn0ai().setTdesc05i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #491] MOVE statement
            container.getCotrn0ai().setTamt005i(StringUtils.repeat(' ', 12));
            break;
        }
        case 6: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #493] MOVE statement
            container.getCotrn0ai().setTrnid06i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #494] MOVE statement
            container.getCotrn0ai().setTdate06i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #495] MOVE statement
            container.getCotrn0ai().setTdesc06i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #496] MOVE statement
            container.getCotrn0ai().setTamt006i(StringUtils.repeat(' ', 12));
            break;
        }
        case 7: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #498] MOVE statement
            container.getCotrn0ai().setTrnid07i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #499] MOVE statement
            container.getCotrn0ai().setTdate07i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #500] MOVE statement
            container.getCotrn0ai().setTdesc07i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #501] MOVE statement
            container.getCotrn0ai().setTamt007i(StringUtils.repeat(' ', 12));
            break;
        }
        case 8: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #503] MOVE statement
            container.getCotrn0ai().setTrnid08i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #504] MOVE statement
            container.getCotrn0ai().setTdate08i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #505] MOVE statement
            container.getCotrn0ai().setTdesc08i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #506] MOVE statement
            container.getCotrn0ai().setTamt008i(StringUtils.repeat(' ', 12));
            break;
        }
        case 9: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #508] MOVE statement
            container.getCotrn0ai().setTrnid09i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #509] MOVE statement
            container.getCotrn0ai().setTdate09i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #510] MOVE statement
            container.getCotrn0ai().setTdesc09i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #511] MOVE statement
            container.getCotrn0ai().setTamt009i(StringUtils.repeat(' ', 12));
            break;
        }
        case 10: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #513] MOVE statement
            container.getCotrn0ai().setTrnid10i(StringUtils.repeat(' ', 16));
            // [T-Up#INFO][COTRN00C.cbl, LINE #514] MOVE statement
            container.getCotrn0ai().setTdate10i(StringUtils.repeat(' ', 8));
            // [T-Up#INFO][COTRN00C.cbl, LINE #515] MOVE statement
            container.getCotrn0ai().setTdesc10i(StringUtils.repeat(' ', 26));
            // [T-Up#INFO][COTRN00C.cbl, LINE #516] MOVE statement
            container.getCotrn0ai().setTamt010i(StringUtils.repeat(' ', 12));
            break;
        }
        default: {
            // [T-Up#INFO][COTRN00C.cbl, LINE #518] CONTINUE statement
            break;
        }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN                      
    // *----------------------------------------------------------------*

    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES                  
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM                     
    // *     END-IF                                                      
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID                      
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM                     
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT                      
    // *     EXEC CICS                                                   
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)                          
    // *         COMMAREA(CARDDEMO-COMMAREA)                             
    // *     END-EXEC.                                                   
    // *----------------------------------------------------------------*
    // *                      SEND-TRNLST-SCREEN                         
    // *----------------------------------------------------------------*

    void sendTrnlstScreen(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #543] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #545] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][COTRN00C.cbl, LINE #547] IF statement
        if (CobStringUtils.compare(container.getWsVariables()
                .getWsSendEraseFlg(), SEND_ERASE_YES) == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #548] EXEC_CICS statement
            /*
                               EXEC CICS SEND                                           
                                         MAP('COTRN0A')                                 
                                         MAPSET('COTRN00')                              
                                         FROM(COTRN0AO)                                 
                                         ERASE                                          
                                         CURSOR                                         
                               END-EXEC
             */
            ((Cotrn00cOutputDto) task.getOutputDto())
                    .setPageName("COTRN00_COTRN0A");
            ((Cotrn00cOutputDto) task.getOutputDto()).setCotrn0ao(container
                    .getCotrn0ao());
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #556] EXEC_CICS statement
            /*
                               EXEC CICS SEND                                           
                                         MAP('COTRN0A')                                 
                                         MAPSET('COTRN00')                              
                                         FROM(COTRN0AO)                                 
                                         CURSOR                                         
                               END-EXEC
             */
            ((Cotrn00cOutputDto) task.getOutputDto())
                    .setPageName("COTRN00_COTRN0A");
            ((Cotrn00cOutputDto) task.getOutputDto()).setCotrn0ao(container
                    .getCotrn0ao());
        }
    }

    // *                  ERASE                                          
    // *----------------------------------------------------------------*
    // *                      RECEIVE-TRNLST-SCREEN                      
    // *----------------------------------------------------------------*

    void receiveTrnlstScreen(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #570] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE                                            
                                 MAP('COTRN0A')                                     
                                 MAPSET('COTRN00')                                  
                                 INTO(COTRN0AI)                                     
                                 RESP(WS-RESP-CD)                                   
                                 RESP2(WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            container.setCotrn0ai(((Cotrn00cInputDto) task.getInputDto())
                    .getCotrn0ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO                       
    // *----------------------------------------------------------------*

    void populateHeaderInfo(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #583] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COTRN00C.cbl, LINE #585] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COTRN00C.cbl, LINE #586] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COTRN00C.cbl, LINE #587] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][COTRN00C.cbl, LINE #588] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][COTRN00C.cbl, LINE #590] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COTRN00C.cbl, LINE #591] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COTRN00C.cbl, LINE #592] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COTRN00C.cbl, LINE #594] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COTRN00C.cbl, LINE #596] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COTRN00C.cbl, LINE #597] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COTRN00C.cbl, LINE #598] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COTRN00C.cbl, LINE #600] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      STARTBR-TRANSACT-FILE                      
    // *----------------------------------------------------------------*

    void startbrTransactFile(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #607] EXEC_CICS statement
        /*
                       EXEC CICS STARTBR                                            
                            DATASET   (WS-TRANSACT-FILE)                            
                            RIDFLD    (TRAN-ID)                                     
                            KEYLENGTH (LENGTH OF TRAN-ID)                           
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager
                    .declare(
                            "awsM2CarddemoTransactVsamKsdsDao",
                            0,
                            (AwsM2CarddemoTransactVsamKsdsDto awsM2CarddemoTransactVsamKsdsDto) -> {
                                return awsM2CarddemoTransactVsamKsdsDto
                                        .getTranId();
                            });
            AwsM2CarddemoTransactVsamKsdsDto awsM2CarddemoTransactVsamKsdsDto = readPointAccessor
                    .open(readPoint, container.getTranRecord().getTranId());
            container.getTranRecord().setTranId(
                    awsM2CarddemoTransactVsamKsdsDto.getTranId());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // *         GTEQ                                                    
        // [T-Up#INFO][COTRN00C.cbl, LINE #616] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #618] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 13) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #620] CONTINUE statement
            // [T-Up#INFO][COTRN00C.cbl, LINE #621] SET statement
            container.getWsVariables().setWsTransactEof(TRANSACT_EOF);
            // [T-Up#INFO][COTRN00C.cbl, LINE #622] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You are at the top of the page...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #624] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #625] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #627] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COTRN00C.cbl, LINE #628] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN00C.cbl, LINE #629] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to lookup transaction...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #631] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #632] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      READNEXT-TRANSACT-FILE                     
    // *----------------------------------------------------------------*

    void readnextTransactFile(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #640] EXEC_CICS statement
        /*
                       EXEC CICS READNEXT                                           
                            DATASET   (WS-TRANSACT-FILE)                            
                            INTO      (TRAN-RECORD)                                 
                            LENGTH    (LENGTH OF TRAN-RECORD)                       
                            RIDFLD    (TRAN-ID)                                     
                            KEYLENGTH (LENGTH OF TRAN-ID)                           
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager.find(0);
            AwsM2CarddemoTransactVsamKsdsDto awsM2CarddemoTransactVsamKsdsDto = readPointAccessor
                    .readNext(readPoint, container.getTranRecord().getTranId());
            container.getTranRecord().setTranId(
                    awsM2CarddemoTransactVsamKsdsDto.getTranId());
            container
                    .setTranRecord(Cotrn00cTranRecordToAwsM2CarddemoTransactVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoTransactVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #650] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #652] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 20) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #654] CONTINUE statement
            // [T-Up#INFO][COTRN00C.cbl, LINE #655] SET statement
            container.getWsVariables().setWsTransactEof(TRANSACT_EOF);
            // [T-Up#INFO][COTRN00C.cbl, LINE #656] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You have reached the bottom of the page...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #658] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #659] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #661] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COTRN00C.cbl, LINE #662] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN00C.cbl, LINE #663] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to lookup transaction...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #665] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #666] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      READPREV-TRANSACT-FILE                     
    // *----------------------------------------------------------------*

    void readprevTransactFile(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #674] EXEC_CICS statement
        /*
                       EXEC CICS READPREV                                           
                            DATASET   (WS-TRANSACT-FILE)                            
                            INTO      (TRAN-RECORD)                                 
                            LENGTH    (LENGTH OF TRAN-RECORD)                       
                            RIDFLD    (TRAN-ID)                                     
                            KEYLENGTH (LENGTH OF TRAN-ID)                           
                            RESP      (WS-RESP-CD)                                  
                            RESP2     (WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager.find(0);
            AwsM2CarddemoTransactVsamKsdsDto awsM2CarddemoTransactVsamKsdsDto = readPointAccessor
                    .readPrev(readPoint, container.getTranRecord().getTranId());
            container.getTranRecord().setTranId(
                    awsM2CarddemoTransactVsamKsdsDto.getTranId());
            container
                    .setTranRecord(Cotrn00cTranRecordToAwsM2CarddemoTransactVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoTransactVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COTRN00C.cbl, LINE #684] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #686] CONTINUE statement
        } else if (container.getWsVariables().getWsRespCd() == 20) {
            // [T-Up#INFO][COTRN00C.cbl, LINE #688] CONTINUE statement
            // [T-Up#INFO][COTRN00C.cbl, LINE #689] SET statement
            container.getWsVariables().setWsTransactEof(TRANSACT_EOF);
            // [T-Up#INFO][COTRN00C.cbl, LINE #690] MOVE statement
            container.getWsVariables().setWsMessage(
                    "You have reached the top of the page...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #692] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #693] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][COTRN00C.cbl, LINE #695] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][COTRN00C.cbl, LINE #696] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][COTRN00C.cbl, LINE #697] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to lookup transaction...");
            // [T-Up#INFO][COTRN00C.cbl, LINE #699] MOVE statement
            container.getCotrn0ai().setTrnidinl(-1);
            // [T-Up#INFO][COTRN00C.cbl, LINE #700] PERFORM statement
            controlManager.run(context, sendTrnlstScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      ENDBR-TRANSACT-FILE                        
    // *----------------------------------------------------------------*

    void endbrTransactFile(OpenFrameContext context) {
        Cotrn00cVariableContainer container = (Cotrn00cVariableContainer) context
                .getProgramVariableContainer("Cotrn00c");
        // [T-Up#INFO][COTRN00C.cbl, LINE #708] EXEC_CICS statement
        /*
                       EXEC CICS ENDBR                                              
                            DATASET   (WS-TRANSACT-FILE)                            
                       END-EXEC
         */
        ReadPoint readPoint = readPointManager.find(0);
        readPointAccessor.close(readPoint);
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:34 CDT 
    // *                                                                 
}
