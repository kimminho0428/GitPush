package aws.carddemo.variable;

import aws.carddemo.variable.group.*;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import lombok.*;
import lombok.experimental.Accessors;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:47 UTC</p>
 * <hr>
 * <p>Class that defines variables that defined in the data division of COBOL program</p>
 */
public class Cousr00cVariableContainer {
    // *----------------------------------------------------------------*
    // *                     WORKING STORAGE SECTION                     
    // *----------------------------------------------------------------*
    // [T-Up#INFO][COUSR00C.cbl, LINE #35] WS-VARIABLES (level: 1)
    private @Getter @Setter Cousr00cWsVariables wsVariables = new Cousr00cWsVariables();
    // [T-Up#INFO][COUSR00C.cbl, LINE #56] WS-USER-DATA (level: 1)
    private @Getter @Setter Cousr00cWsUserData wsUserData = new Cousr00cWsUserData();
    //       *COPY COCOM01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COCOM01Y.cpy)
    // ******************************************************************
    // * Communication area for CardDemo application programs            
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COCOM01Y.cpy, LINE #20] CARDDEMO-COMMAREA (level: 1)
    private @Getter @Setter Cousr00cCarddemoCommarea carddemoCommarea = new Cousr00cCarddemoCommarea();
    //       *COPY COUSR00.                                                    
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COUSR00.CPY) 
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COUSR00.CPY, LINE #18] COUSR0AI (level: 1)
    private @Getter @Setter Cousr00cCousr0ai cousr0ai = new Cousr00cCousr0ai();

    public Cousr00cCousr0ao getCousr0ao() {
        return new Cousr00cCousr0ao().setOFFILLER1(getOFFILLER1())
                .setOFFILLER2(getOFFILLER2()).setTrnnamec(getTrnnamec())
                .setTrnnamep(getTrnnamep()).setTrnnameh(getTrnnameh())
                .setTrnnamev(getTrnnamev()).setTrnnameo(getTrnnameo())
                .setOFFILLER3(getOFFILLER3()).setTitle01c(getTitle01c())
                .setTitle01p(getTitle01p()).setTitle01h(getTitle01h())
                .setTitle01v(getTitle01v()).setTitle01o(getTitle01o())
                .setOFFILLER4(getOFFILLER4()).setCurdatec(getCurdatec())
                .setCurdatep(getCurdatep()).setCurdateh(getCurdateh())
                .setCurdatev(getCurdatev()).setCurdateo(getCurdateo())
                .setOFFILLER5(getOFFILLER5()).setPgmnamec(getPgmnamec())
                .setPgmnamep(getPgmnamep()).setPgmnameh(getPgmnameh())
                .setPgmnamev(getPgmnamev()).setPgmnameo(getPgmnameo())
                .setOFFILLER6(getOFFILLER6()).setTitle02c(getTitle02c())
                .setTitle02p(getTitle02p()).setTitle02h(getTitle02h())
                .setTitle02v(getTitle02v()).setTitle02o(getTitle02o())
                .setOFFILLER7(getOFFILLER7()).setCurtimec(getCurtimec())
                .setCurtimep(getCurtimep()).setCurtimeh(getCurtimeh())
                .setCurtimev(getCurtimev()).setCurtimeo(getCurtimeo())
                .setOFFILLER8(getOFFILLER8()).setPagenumc(getPagenumc())
                .setPagenump(getPagenump()).setPagenumh(getPagenumh())
                .setPagenumv(getPagenumv()).setPagenumo(getPagenumo())
                .setOFFILLER9(getOFFILLER9()).setUsridinc(getUsridinc())
                .setUsridinp(getUsridinp()).setUsridinh(getUsridinh())
                .setUsridinv(getUsridinv()).setUsridino(getUsridino())
                .setOFFILLER10(getOFFILLER10()).setSel0001c(getSel0001c())
                .setSel0001p(getSel0001p()).setSel0001h(getSel0001h())
                .setSel0001v(getSel0001v()).setSel0001o(getSel0001o())
                .setOFFILLER11(getOFFILLER11()).setUsrid01c(getUsrid01c())
                .setUsrid01p(getUsrid01p()).setUsrid01h(getUsrid01h())
                .setUsrid01v(getUsrid01v()).setUsrid01o(getUsrid01o())
                .setOFFILLER12(getOFFILLER12()).setFname01c(getFname01c())
                .setFname01p(getFname01p()).setFname01h(getFname01h())
                .setFname01v(getFname01v()).setFname01o(getFname01o())
                .setOFFILLER13(getOFFILLER13()).setLname01c(getLname01c())
                .setLname01p(getLname01p()).setLname01h(getLname01h())
                .setLname01v(getLname01v()).setLname01o(getLname01o())
                .setOFFILLER14(getOFFILLER14()).setUtype01c(getUtype01c())
                .setUtype01p(getUtype01p()).setUtype01h(getUtype01h())
                .setUtype01v(getUtype01v()).setUtype01o(getUtype01o())
                .setOFFILLER15(getOFFILLER15()).setSel0002c(getSel0002c())
                .setSel0002p(getSel0002p()).setSel0002h(getSel0002h())
                .setSel0002v(getSel0002v()).setSel0002o(getSel0002o())
                .setOFFILLER16(getOFFILLER16()).setUsrid02c(getUsrid02c())
                .setUsrid02p(getUsrid02p()).setUsrid02h(getUsrid02h())
                .setUsrid02v(getUsrid02v()).setUsrid02o(getUsrid02o())
                .setOFFILLER17(getOFFILLER17()).setFname02c(getFname02c())
                .setFname02p(getFname02p()).setFname02h(getFname02h())
                .setFname02v(getFname02v()).setFname02o(getFname02o())
                .setOFFILLER18(getOFFILLER18()).setLname02c(getLname02c())
                .setLname02p(getLname02p()).setLname02h(getLname02h())
                .setLname02v(getLname02v()).setLname02o(getLname02o())
                .setOFFILLER19(getOFFILLER19()).setUtype02c(getUtype02c())
                .setUtype02p(getUtype02p()).setUtype02h(getUtype02h())
                .setUtype02v(getUtype02v()).setUtype02o(getUtype02o())
                .setOFFILLER20(getOFFILLER20()).setSel0003c(getSel0003c())
                .setSel0003p(getSel0003p()).setSel0003h(getSel0003h())
                .setSel0003v(getSel0003v()).setSel0003o(getSel0003o())
                .setOFFILLER21(getOFFILLER21()).setUsrid03c(getUsrid03c())
                .setUsrid03p(getUsrid03p()).setUsrid03h(getUsrid03h())
                .setUsrid03v(getUsrid03v()).setUsrid03o(getUsrid03o())
                .setOFFILLER22(getOFFILLER22()).setFname03c(getFname03c())
                .setFname03p(getFname03p()).setFname03h(getFname03h())
                .setFname03v(getFname03v()).setFname03o(getFname03o())
                .setOFFILLER23(getOFFILLER23()).setLname03c(getLname03c())
                .setLname03p(getLname03p()).setLname03h(getLname03h())
                .setLname03v(getLname03v()).setLname03o(getLname03o())
                .setOFFILLER24(getOFFILLER24()).setUtype03c(getUtype03c())
                .setUtype03p(getUtype03p()).setUtype03h(getUtype03h())
                .setUtype03v(getUtype03v()).setUtype03o(getUtype03o())
                .setOFFILLER25(getOFFILLER25()).setSel0004c(getSel0004c())
                .setSel0004p(getSel0004p()).setSel0004h(getSel0004h())
                .setSel0004v(getSel0004v()).setSel0004o(getSel0004o())
                .setOFFILLER26(getOFFILLER26()).setUsrid04c(getUsrid04c())
                .setUsrid04p(getUsrid04p()).setUsrid04h(getUsrid04h())
                .setUsrid04v(getUsrid04v()).setUsrid04o(getUsrid04o())
                .setOFFILLER27(getOFFILLER27()).setFname04c(getFname04c())
                .setFname04p(getFname04p()).setFname04h(getFname04h())
                .setFname04v(getFname04v()).setFname04o(getFname04o())
                .setOFFILLER28(getOFFILLER28()).setLname04c(getLname04c())
                .setLname04p(getLname04p()).setLname04h(getLname04h())
                .setLname04v(getLname04v()).setLname04o(getLname04o())
                .setOFFILLER29(getOFFILLER29()).setUtype04c(getUtype04c())
                .setUtype04p(getUtype04p()).setUtype04h(getUtype04h())
                .setUtype04v(getUtype04v()).setUtype04o(getUtype04o())
                .setOFFILLER30(getOFFILLER30()).setSel0005c(getSel0005c())
                .setSel0005p(getSel0005p()).setSel0005h(getSel0005h())
                .setSel0005v(getSel0005v()).setSel0005o(getSel0005o())
                .setOFFILLER31(getOFFILLER31()).setUsrid05c(getUsrid05c())
                .setUsrid05p(getUsrid05p()).setUsrid05h(getUsrid05h())
                .setUsrid05v(getUsrid05v()).setUsrid05o(getUsrid05o())
                .setOFFILLER32(getOFFILLER32()).setFname05c(getFname05c())
                .setFname05p(getFname05p()).setFname05h(getFname05h())
                .setFname05v(getFname05v()).setFname05o(getFname05o())
                .setOFFILLER33(getOFFILLER33()).setLname05c(getLname05c())
                .setLname05p(getLname05p()).setLname05h(getLname05h())
                .setLname05v(getLname05v()).setLname05o(getLname05o())
                .setOFFILLER34(getOFFILLER34()).setUtype05c(getUtype05c())
                .setUtype05p(getUtype05p()).setUtype05h(getUtype05h())
                .setUtype05v(getUtype05v()).setUtype05o(getUtype05o())
                .setOFFILLER35(getOFFILLER35()).setSel0006c(getSel0006c())
                .setSel0006p(getSel0006p()).setSel0006h(getSel0006h())
                .setSel0006v(getSel0006v()).setSel0006o(getSel0006o())
                .setOFFILLER36(getOFFILLER36()).setUsrid06c(getUsrid06c())
                .setUsrid06p(getUsrid06p()).setUsrid06h(getUsrid06h())
                .setUsrid06v(getUsrid06v()).setUsrid06o(getUsrid06o())
                .setOFFILLER37(getOFFILLER37()).setFname06c(getFname06c())
                .setFname06p(getFname06p()).setFname06h(getFname06h())
                .setFname06v(getFname06v()).setFname06o(getFname06o())
                .setOFFILLER38(getOFFILLER38()).setLname06c(getLname06c())
                .setLname06p(getLname06p()).setLname06h(getLname06h())
                .setLname06v(getLname06v()).setLname06o(getLname06o())
                .setOFFILLER39(getOFFILLER39()).setUtype06c(getUtype06c())
                .setUtype06p(getUtype06p()).setUtype06h(getUtype06h())
                .setUtype06v(getUtype06v()).setUtype06o(getUtype06o())
                .setOFFILLER40(getOFFILLER40()).setSel0007c(getSel0007c())
                .setSel0007p(getSel0007p()).setSel0007h(getSel0007h())
                .setSel0007v(getSel0007v()).setSel0007o(getSel0007o())
                .setOFFILLER41(getOFFILLER41()).setUsrid07c(getUsrid07c())
                .setUsrid07p(getUsrid07p()).setUsrid07h(getUsrid07h())
                .setUsrid07v(getUsrid07v()).setUsrid07o(getUsrid07o())
                .setOFFILLER42(getOFFILLER42()).setFname07c(getFname07c())
                .setFname07p(getFname07p()).setFname07h(getFname07h())
                .setFname07v(getFname07v()).setFname07o(getFname07o())
                .setOFFILLER43(getOFFILLER43()).setLname07c(getLname07c())
                .setLname07p(getLname07p()).setLname07h(getLname07h())
                .setLname07v(getLname07v()).setLname07o(getLname07o())
                .setOFFILLER44(getOFFILLER44()).setUtype07c(getUtype07c())
                .setUtype07p(getUtype07p()).setUtype07h(getUtype07h())
                .setUtype07v(getUtype07v()).setUtype07o(getUtype07o())
                .setOFFILLER45(getOFFILLER45()).setSel0008c(getSel0008c())
                .setSel0008p(getSel0008p()).setSel0008h(getSel0008h())
                .setSel0008v(getSel0008v()).setSel0008o(getSel0008o())
                .setOFFILLER46(getOFFILLER46()).setUsrid08c(getUsrid08c())
                .setUsrid08p(getUsrid08p()).setUsrid08h(getUsrid08h())
                .setUsrid08v(getUsrid08v()).setUsrid08o(getUsrid08o())
                .setOFFILLER47(getOFFILLER47()).setFname08c(getFname08c())
                .setFname08p(getFname08p()).setFname08h(getFname08h())
                .setFname08v(getFname08v()).setFname08o(getFname08o())
                .setOFFILLER48(getOFFILLER48()).setLname08c(getLname08c())
                .setLname08p(getLname08p()).setLname08h(getLname08h())
                .setLname08v(getLname08v()).setLname08o(getLname08o())
                .setOFFILLER49(getOFFILLER49()).setUtype08c(getUtype08c())
                .setUtype08p(getUtype08p()).setUtype08h(getUtype08h())
                .setUtype08v(getUtype08v()).setUtype08o(getUtype08o())
                .setOFFILLER50(getOFFILLER50()).setSel0009c(getSel0009c())
                .setSel0009p(getSel0009p()).setSel0009h(getSel0009h())
                .setSel0009v(getSel0009v()).setSel0009o(getSel0009o())
                .setOFFILLER51(getOFFILLER51()).setUsrid09c(getUsrid09c())
                .setUsrid09p(getUsrid09p()).setUsrid09h(getUsrid09h())
                .setUsrid09v(getUsrid09v()).setUsrid09o(getUsrid09o())
                .setOFFILLER52(getOFFILLER52()).setFname09c(getFname09c())
                .setFname09p(getFname09p()).setFname09h(getFname09h())
                .setFname09v(getFname09v()).setFname09o(getFname09o())
                .setOFFILLER53(getOFFILLER53()).setLname09c(getLname09c())
                .setLname09p(getLname09p()).setLname09h(getLname09h())
                .setLname09v(getLname09v()).setLname09o(getLname09o())
                .setOFFILLER54(getOFFILLER54()).setUtype09c(getUtype09c())
                .setUtype09p(getUtype09p()).setUtype09h(getUtype09h())
                .setUtype09v(getUtype09v()).setUtype09o(getUtype09o())
                .setOFFILLER55(getOFFILLER55()).setSel0010c(getSel0010c())
                .setSel0010p(getSel0010p()).setSel0010h(getSel0010h())
                .setSel0010v(getSel0010v()).setSel0010o(getSel0010o())
                .setOFFILLER56(getOFFILLER56()).setUsrid10c(getUsrid10c())
                .setUsrid10p(getUsrid10p()).setUsrid10h(getUsrid10h())
                .setUsrid10v(getUsrid10v()).setUsrid10o(getUsrid10o())
                .setOFFILLER57(getOFFILLER57()).setFname10c(getFname10c())
                .setFname10p(getFname10p()).setFname10h(getFname10h())
                .setFname10v(getFname10v()).setFname10o(getFname10o())
                .setOFFILLER58(getOFFILLER58()).setLname10c(getLname10c())
                .setLname10p(getLname10p()).setLname10h(getLname10h())
                .setLname10v(getLname10v()).setLname10o(getLname10o())
                .setOFFILLER59(getOFFILLER59()).setUtype10c(getUtype10c())
                .setUtype10p(getUtype10p()).setUtype10h(getUtype10h())
                .setUtype10v(getUtype10v()).setUtype10o(getUtype10o())
                .setOFFILLER60(getOFFILLER60()).setErrmsgc(getErrmsgc())
                .setErrmsgp(getErrmsgp()).setErrmsgh(getErrmsgh())
                .setErrmsgv(getErrmsgv()).setErrmsgo(getErrmsgo());
    }

    public void setCousr0ao(String source) {
        setOFFILLER1(source.substring(0, 12));
        setOFFILLER2(source.substring(12, 15));
        setTrnnamec(source.substring(15, 16));
        setTrnnamep(source.substring(16, 17));
        setTrnnameh(source.substring(17, 18));
        setTrnnamev(source.substring(18, 19));
        setTrnnameo(source.substring(19, 23));
        setOFFILLER3(source.substring(23, 26));
        setTitle01c(source.substring(26, 27));
        setTitle01p(source.substring(27, 28));
        setTitle01h(source.substring(28, 29));
        setTitle01v(source.substring(29, 30));
        setTitle01o(source.substring(30, 70));
        setOFFILLER4(source.substring(70, 73));
        setCurdatec(source.substring(73, 74));
        setCurdatep(source.substring(74, 75));
        setCurdateh(source.substring(75, 76));
        setCurdatev(source.substring(76, 77));
        setCurdateo(source.substring(77, 85));
        setOFFILLER5(source.substring(85, 88));
        setPgmnamec(source.substring(88, 89));
        setPgmnamep(source.substring(89, 90));
        setPgmnameh(source.substring(90, 91));
        setPgmnamev(source.substring(91, 92));
        setPgmnameo(source.substring(92, 100));
        setOFFILLER6(source.substring(100, 103));
        setTitle02c(source.substring(103, 104));
        setTitle02p(source.substring(104, 105));
        setTitle02h(source.substring(105, 106));
        setTitle02v(source.substring(106, 107));
        setTitle02o(source.substring(107, 147));
        setOFFILLER7(source.substring(147, 150));
        setCurtimec(source.substring(150, 151));
        setCurtimep(source.substring(151, 152));
        setCurtimeh(source.substring(152, 153));
        setCurtimev(source.substring(153, 154));
        setCurtimeo(source.substring(154, 162));
        setOFFILLER8(source.substring(162, 165));
        setPagenumc(source.substring(165, 166));
        setPagenump(source.substring(166, 167));
        setPagenumh(source.substring(167, 168));
        setPagenumv(source.substring(168, 169));
        setPagenumo(source.substring(169, 177));
        setOFFILLER9(source.substring(177, 180));
        setUsridinc(source.substring(180, 181));
        setUsridinp(source.substring(181, 182));
        setUsridinh(source.substring(182, 183));
        setUsridinv(source.substring(183, 184));
        setUsridino(source.substring(184, 192));
        setOFFILLER10(source.substring(192, 195));
        setSel0001c(source.substring(195, 196));
        setSel0001p(source.substring(196, 197));
        setSel0001h(source.substring(197, 198));
        setSel0001v(source.substring(198, 199));
        setSel0001o(source.substring(199, 200));
        setOFFILLER11(source.substring(200, 203));
        setUsrid01c(source.substring(203, 204));
        setUsrid01p(source.substring(204, 205));
        setUsrid01h(source.substring(205, 206));
        setUsrid01v(source.substring(206, 207));
        setUsrid01o(source.substring(207, 215));
        setOFFILLER12(source.substring(215, 218));
        setFname01c(source.substring(218, 219));
        setFname01p(source.substring(219, 220));
        setFname01h(source.substring(220, 221));
        setFname01v(source.substring(221, 222));
        setFname01o(source.substring(222, 242));
        setOFFILLER13(source.substring(242, 245));
        setLname01c(source.substring(245, 246));
        setLname01p(source.substring(246, 247));
        setLname01h(source.substring(247, 248));
        setLname01v(source.substring(248, 249));
        setLname01o(source.substring(249, 269));
        setOFFILLER14(source.substring(269, 272));
        setUtype01c(source.substring(272, 273));
        setUtype01p(source.substring(273, 274));
        setUtype01h(source.substring(274, 275));
        setUtype01v(source.substring(275, 276));
        setUtype01o(source.substring(276, 277));
        setOFFILLER15(source.substring(277, 280));
        setSel0002c(source.substring(280, 281));
        setSel0002p(source.substring(281, 282));
        setSel0002h(source.substring(282, 283));
        setSel0002v(source.substring(283, 284));
        setSel0002o(source.substring(284, 285));
        setOFFILLER16(source.substring(285, 288));
        setUsrid02c(source.substring(288, 289));
        setUsrid02p(source.substring(289, 290));
        setUsrid02h(source.substring(290, 291));
        setUsrid02v(source.substring(291, 292));
        setUsrid02o(source.substring(292, 300));
        setOFFILLER17(source.substring(300, 303));
        setFname02c(source.substring(303, 304));
        setFname02p(source.substring(304, 305));
        setFname02h(source.substring(305, 306));
        setFname02v(source.substring(306, 307));
        setFname02o(source.substring(307, 327));
        setOFFILLER18(source.substring(327, 330));
        setLname02c(source.substring(330, 331));
        setLname02p(source.substring(331, 332));
        setLname02h(source.substring(332, 333));
        setLname02v(source.substring(333, 334));
        setLname02o(source.substring(334, 354));
        setOFFILLER19(source.substring(354, 357));
        setUtype02c(source.substring(357, 358));
        setUtype02p(source.substring(358, 359));
        setUtype02h(source.substring(359, 360));
        setUtype02v(source.substring(360, 361));
        setUtype02o(source.substring(361, 362));
        setOFFILLER20(source.substring(362, 365));
        setSel0003c(source.substring(365, 366));
        setSel0003p(source.substring(366, 367));
        setSel0003h(source.substring(367, 368));
        setSel0003v(source.substring(368, 369));
        setSel0003o(source.substring(369, 370));
        setOFFILLER21(source.substring(370, 373));
        setUsrid03c(source.substring(373, 374));
        setUsrid03p(source.substring(374, 375));
        setUsrid03h(source.substring(375, 376));
        setUsrid03v(source.substring(376, 377));
        setUsrid03o(source.substring(377, 385));
        setOFFILLER22(source.substring(385, 388));
        setFname03c(source.substring(388, 389));
        setFname03p(source.substring(389, 390));
        setFname03h(source.substring(390, 391));
        setFname03v(source.substring(391, 392));
        setFname03o(source.substring(392, 412));
        setOFFILLER23(source.substring(412, 415));
        setLname03c(source.substring(415, 416));
        setLname03p(source.substring(416, 417));
        setLname03h(source.substring(417, 418));
        setLname03v(source.substring(418, 419));
        setLname03o(source.substring(419, 439));
        setOFFILLER24(source.substring(439, 442));
        setUtype03c(source.substring(442, 443));
        setUtype03p(source.substring(443, 444));
        setUtype03h(source.substring(444, 445));
        setUtype03v(source.substring(445, 446));
        setUtype03o(source.substring(446, 447));
        setOFFILLER25(source.substring(447, 450));
        setSel0004c(source.substring(450, 451));
        setSel0004p(source.substring(451, 452));
        setSel0004h(source.substring(452, 453));
        setSel0004v(source.substring(453, 454));
        setSel0004o(source.substring(454, 455));
        setOFFILLER26(source.substring(455, 458));
        setUsrid04c(source.substring(458, 459));
        setUsrid04p(source.substring(459, 460));
        setUsrid04h(source.substring(460, 461));
        setUsrid04v(source.substring(461, 462));
        setUsrid04o(source.substring(462, 470));
        setOFFILLER27(source.substring(470, 473));
        setFname04c(source.substring(473, 474));
        setFname04p(source.substring(474, 475));
        setFname04h(source.substring(475, 476));
        setFname04v(source.substring(476, 477));
        setFname04o(source.substring(477, 497));
        setOFFILLER28(source.substring(497, 500));
        setLname04c(source.substring(500, 501));
        setLname04p(source.substring(501, 502));
        setLname04h(source.substring(502, 503));
        setLname04v(source.substring(503, 504));
        setLname04o(source.substring(504, 524));
        setOFFILLER29(source.substring(524, 527));
        setUtype04c(source.substring(527, 528));
        setUtype04p(source.substring(528, 529));
        setUtype04h(source.substring(529, 530));
        setUtype04v(source.substring(530, 531));
        setUtype04o(source.substring(531, 532));
        setOFFILLER30(source.substring(532, 535));
        setSel0005c(source.substring(535, 536));
        setSel0005p(source.substring(536, 537));
        setSel0005h(source.substring(537, 538));
        setSel0005v(source.substring(538, 539));
        setSel0005o(source.substring(539, 540));
        setOFFILLER31(source.substring(540, 543));
        setUsrid05c(source.substring(543, 544));
        setUsrid05p(source.substring(544, 545));
        setUsrid05h(source.substring(545, 546));
        setUsrid05v(source.substring(546, 547));
        setUsrid05o(source.substring(547, 555));
        setOFFILLER32(source.substring(555, 558));
        setFname05c(source.substring(558, 559));
        setFname05p(source.substring(559, 560));
        setFname05h(source.substring(560, 561));
        setFname05v(source.substring(561, 562));
        setFname05o(source.substring(562, 582));
        setOFFILLER33(source.substring(582, 585));
        setLname05c(source.substring(585, 586));
        setLname05p(source.substring(586, 587));
        setLname05h(source.substring(587, 588));
        setLname05v(source.substring(588, 589));
        setLname05o(source.substring(589, 609));
        setOFFILLER34(source.substring(609, 612));
        setUtype05c(source.substring(612, 613));
        setUtype05p(source.substring(613, 614));
        setUtype05h(source.substring(614, 615));
        setUtype05v(source.substring(615, 616));
        setUtype05o(source.substring(616, 617));
        setOFFILLER35(source.substring(617, 620));
        setSel0006c(source.substring(620, 621));
        setSel0006p(source.substring(621, 622));
        setSel0006h(source.substring(622, 623));
        setSel0006v(source.substring(623, 624));
        setSel0006o(source.substring(624, 625));
        setOFFILLER36(source.substring(625, 628));
        setUsrid06c(source.substring(628, 629));
        setUsrid06p(source.substring(629, 630));
        setUsrid06h(source.substring(630, 631));
        setUsrid06v(source.substring(631, 632));
        setUsrid06o(source.substring(632, 640));
        setOFFILLER37(source.substring(640, 643));
        setFname06c(source.substring(643, 644));
        setFname06p(source.substring(644, 645));
        setFname06h(source.substring(645, 646));
        setFname06v(source.substring(646, 647));
        setFname06o(source.substring(647, 667));
        setOFFILLER38(source.substring(667, 670));
        setLname06c(source.substring(670, 671));
        setLname06p(source.substring(671, 672));
        setLname06h(source.substring(672, 673));
        setLname06v(source.substring(673, 674));
        setLname06o(source.substring(674, 694));
        setOFFILLER39(source.substring(694, 697));
        setUtype06c(source.substring(697, 698));
        setUtype06p(source.substring(698, 699));
        setUtype06h(source.substring(699, 700));
        setUtype06v(source.substring(700, 701));
        setUtype06o(source.substring(701, 702));
        setOFFILLER40(source.substring(702, 705));
        setSel0007c(source.substring(705, 706));
        setSel0007p(source.substring(706, 707));
        setSel0007h(source.substring(707, 708));
        setSel0007v(source.substring(708, 709));
        setSel0007o(source.substring(709, 710));
        setOFFILLER41(source.substring(710, 713));
        setUsrid07c(source.substring(713, 714));
        setUsrid07p(source.substring(714, 715));
        setUsrid07h(source.substring(715, 716));
        setUsrid07v(source.substring(716, 717));
        setUsrid07o(source.substring(717, 725));
        setOFFILLER42(source.substring(725, 728));
        setFname07c(source.substring(728, 729));
        setFname07p(source.substring(729, 730));
        setFname07h(source.substring(730, 731));
        setFname07v(source.substring(731, 732));
        setFname07o(source.substring(732, 752));
        setOFFILLER43(source.substring(752, 755));
        setLname07c(source.substring(755, 756));
        setLname07p(source.substring(756, 757));
        setLname07h(source.substring(757, 758));
        setLname07v(source.substring(758, 759));
        setLname07o(source.substring(759, 779));
        setOFFILLER44(source.substring(779, 782));
        setUtype07c(source.substring(782, 783));
        setUtype07p(source.substring(783, 784));
        setUtype07h(source.substring(784, 785));
        setUtype07v(source.substring(785, 786));
        setUtype07o(source.substring(786, 787));
        setOFFILLER45(source.substring(787, 790));
        setSel0008c(source.substring(790, 791));
        setSel0008p(source.substring(791, 792));
        setSel0008h(source.substring(792, 793));
        setSel0008v(source.substring(793, 794));
        setSel0008o(source.substring(794, 795));
        setOFFILLER46(source.substring(795, 798));
        setUsrid08c(source.substring(798, 799));
        setUsrid08p(source.substring(799, 800));
        setUsrid08h(source.substring(800, 801));
        setUsrid08v(source.substring(801, 802));
        setUsrid08o(source.substring(802, 810));
        setOFFILLER47(source.substring(810, 813));
        setFname08c(source.substring(813, 814));
        setFname08p(source.substring(814, 815));
        setFname08h(source.substring(815, 816));
        setFname08v(source.substring(816, 817));
        setFname08o(source.substring(817, 837));
        setOFFILLER48(source.substring(837, 840));
        setLname08c(source.substring(840, 841));
        setLname08p(source.substring(841, 842));
        setLname08h(source.substring(842, 843));
        setLname08v(source.substring(843, 844));
        setLname08o(source.substring(844, 864));
        setOFFILLER49(source.substring(864, 867));
        setUtype08c(source.substring(867, 868));
        setUtype08p(source.substring(868, 869));
        setUtype08h(source.substring(869, 870));
        setUtype08v(source.substring(870, 871));
        setUtype08o(source.substring(871, 872));
        setOFFILLER50(source.substring(872, 875));
        setSel0009c(source.substring(875, 876));
        setSel0009p(source.substring(876, 877));
        setSel0009h(source.substring(877, 878));
        setSel0009v(source.substring(878, 879));
        setSel0009o(source.substring(879, 880));
        setOFFILLER51(source.substring(880, 883));
        setUsrid09c(source.substring(883, 884));
        setUsrid09p(source.substring(884, 885));
        setUsrid09h(source.substring(885, 886));
        setUsrid09v(source.substring(886, 887));
        setUsrid09o(source.substring(887, 895));
        setOFFILLER52(source.substring(895, 898));
        setFname09c(source.substring(898, 899));
        setFname09p(source.substring(899, 900));
        setFname09h(source.substring(900, 901));
        setFname09v(source.substring(901, 902));
        setFname09o(source.substring(902, 922));
        setOFFILLER53(source.substring(922, 925));
        setLname09c(source.substring(925, 926));
        setLname09p(source.substring(926, 927));
        setLname09h(source.substring(927, 928));
        setLname09v(source.substring(928, 929));
        setLname09o(source.substring(929, 949));
        setOFFILLER54(source.substring(949, 952));
        setUtype09c(source.substring(952, 953));
        setUtype09p(source.substring(953, 954));
        setUtype09h(source.substring(954, 955));
        setUtype09v(source.substring(955, 956));
        setUtype09o(source.substring(956, 957));
        setOFFILLER55(source.substring(957, 960));
        setSel0010c(source.substring(960, 961));
        setSel0010p(source.substring(961, 962));
        setSel0010h(source.substring(962, 963));
        setSel0010v(source.substring(963, 964));
        setSel0010o(source.substring(964, 965));
        setOFFILLER56(source.substring(965, 968));
        setUsrid10c(source.substring(968, 969));
        setUsrid10p(source.substring(969, 970));
        setUsrid10h(source.substring(970, 971));
        setUsrid10v(source.substring(971, 972));
        setUsrid10o(source.substring(972, 980));
        setOFFILLER57(source.substring(980, 983));
        setFname10c(source.substring(983, 984));
        setFname10p(source.substring(984, 985));
        setFname10h(source.substring(985, 986));
        setFname10v(source.substring(986, 987));
        setFname10o(source.substring(987, 1007));
        setOFFILLER58(source.substring(1007, 1010));
        setLname10c(source.substring(1010, 1011));
        setLname10p(source.substring(1011, 1012));
        setLname10h(source.substring(1012, 1013));
        setLname10v(source.substring(1013, 1014));
        setLname10o(source.substring(1014, 1034));
        setOFFILLER59(source.substring(1034, 1037));
        setUtype10c(source.substring(1037, 1038));
        setUtype10p(source.substring(1038, 1039));
        setUtype10h(source.substring(1039, 1040));
        setUtype10v(source.substring(1040, 1041));
        setUtype10o(source.substring(1041, 1042));
        setOFFILLER60(source.substring(1042, 1045));
        setErrmsgc(source.substring(1045, 1046));
        setErrmsgp(source.substring(1046, 1047));
        setErrmsgh(source.substring(1047, 1048));
        setErrmsgv(source.substring(1048, 1049));
        setErrmsgo(source.substring(1049, 1127));
    }

    public void setCousr0ao(Cousr00cCousr0ao source) {
        setCousr0ao(source.toString());
    }

    public String getOFFILLER1() {
        return getCousr0ai().getOFFILLER1();
    }

    public void setOFFILLER1(String source) {
        getCousr0ai().setOFFILLER1(source);
    }

    public String getOFFILLER2() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getTrnnamel());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1 + getCousr0ai().getTrnnamef();
    }

    public void setOFFILLER2(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setTrnnamel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setTrnnamel(0);
        }
    }

    public String getTrnnamec() {
        return getCousr0ai().getOFFILLER3().substring(0, 1);
    }

    public void setTrnnamec(String source) {
        getCousr0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCousr0ai().getOFFILLER3(),
                                source, 0, 1));
    }

    public String getTrnnamep() {
        return getCousr0ai().getOFFILLER3().substring(1, 2);
    }

    public void setTrnnamep(String source) {
        getCousr0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCousr0ai().getOFFILLER3(),
                                source, 1, 2));
    }

    public String getTrnnameh() {
        return getCousr0ai().getOFFILLER3().substring(2, 3);
    }

    public void setTrnnameh(String source) {
        getCousr0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCousr0ai().getOFFILLER3(),
                                source, 2, 3));
    }

    public String getTrnnamev() {
        return getCousr0ai().getOFFILLER3().substring(3);
    }

    public void setTrnnamev(String source) {
        getCousr0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCousr0ai().getOFFILLER3(),
                                source, 3, 4));
    }

    public String getTrnnameo() {
        return getCousr0ai().getTrnnamei();
    }

    public void setTrnnameo(String source) {
        getCousr0ai().setTrnnamei(source);
    }

    public String getOFFILLER3() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getTitle01l());
        tempByteBuffer1.flip();
        String temp2 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp2 + getCousr0ai().getTitle01f();
    }

    public void setOFFILLER3(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setTitle01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setTitle01l(0);
        }
    }

    public String getTitle01c() {
        return getCousr0ai().getOFFILLER5().substring(0, 1);
    }

    public void setTitle01c(String source) {
        getCousr0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCousr0ai().getOFFILLER5(),
                                source, 0, 1));
    }

    public String getTitle01p() {
        return getCousr0ai().getOFFILLER5().substring(1, 2);
    }

    public void setTitle01p(String source) {
        getCousr0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCousr0ai().getOFFILLER5(),
                                source, 1, 2));
    }

    public String getTitle01h() {
        return getCousr0ai().getOFFILLER5().substring(2, 3);
    }

    public void setTitle01h(String source) {
        getCousr0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCousr0ai().getOFFILLER5(),
                                source, 2, 3));
    }

    public String getTitle01v() {
        return getCousr0ai().getOFFILLER5().substring(3);
    }

    public void setTitle01v(String source) {
        getCousr0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCousr0ai().getOFFILLER5(),
                                source, 3, 4));
    }

    public String getTitle01o() {
        return getCousr0ai().getTitle01i();
    }

    public void setTitle01o(String source) {
        getCousr0ai().setTitle01i(source);
    }

    public String getOFFILLER4() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getCurdatel());
        tempByteBuffer1.flip();
        String temp3 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp3 + getCousr0ai().getCurdatef();
    }

    public void setOFFILLER4(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setCurdatel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setCurdatel(0);
        }
    }

    public String getCurdatec() {
        return getCousr0ai().getOFFILLER7().substring(0, 1);
    }

    public void setCurdatec(String source) {
        getCousr0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCousr0ai().getOFFILLER7(),
                                source, 0, 1));
    }

    public String getCurdatep() {
        return getCousr0ai().getOFFILLER7().substring(1, 2);
    }

    public void setCurdatep(String source) {
        getCousr0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCousr0ai().getOFFILLER7(),
                                source, 1, 2));
    }

    public String getCurdateh() {
        return getCousr0ai().getOFFILLER7().substring(2, 3);
    }

    public void setCurdateh(String source) {
        getCousr0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCousr0ai().getOFFILLER7(),
                                source, 2, 3));
    }

    public String getCurdatev() {
        return getCousr0ai().getOFFILLER7().substring(3);
    }

    public void setCurdatev(String source) {
        getCousr0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCousr0ai().getOFFILLER7(),
                                source, 3, 4));
    }

    public String getCurdateo() {
        return getCousr0ai().getCurdatei();
    }

    public void setCurdateo(String source) {
        getCousr0ai().setCurdatei(source);
    }

    public String getOFFILLER5() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getPgmnamel());
        tempByteBuffer1.flip();
        String temp4 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp4 + getCousr0ai().getPgmnamef();
    }

    public void setOFFILLER5(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setPgmnamel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setPgmnamel(0);
        }
    }

    public String getPgmnamec() {
        return getCousr0ai().getOFFILLER9().substring(0, 1);
    }

    public void setPgmnamec(String source) {
        getCousr0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCousr0ai().getOFFILLER9(),
                                source, 0, 1));
    }

    public String getPgmnamep() {
        return getCousr0ai().getOFFILLER9().substring(1, 2);
    }

    public void setPgmnamep(String source) {
        getCousr0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCousr0ai().getOFFILLER9(),
                                source, 1, 2));
    }

    public String getPgmnameh() {
        return getCousr0ai().getOFFILLER9().substring(2, 3);
    }

    public void setPgmnameh(String source) {
        getCousr0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCousr0ai().getOFFILLER9(),
                                source, 2, 3));
    }

    public String getPgmnamev() {
        return getCousr0ai().getOFFILLER9().substring(3);
    }

    public void setPgmnamev(String source) {
        getCousr0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCousr0ai().getOFFILLER9(),
                                source, 3, 4));
    }

    public String getPgmnameo() {
        return getCousr0ai().getPgmnamei();
    }

    public void setPgmnameo(String source) {
        getCousr0ai().setPgmnamei(source);
    }

    public String getOFFILLER6() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getTitle02l());
        tempByteBuffer1.flip();
        String temp5 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp5 + getCousr0ai().getTitle02f();
    }

    public void setOFFILLER6(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setTitle02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setTitle02l(0);
        }
    }

    public String getTitle02c() {
        return getCousr0ai().getOFFILLER11().substring(0, 1);
    }

    public void setTitle02c(String source) {
        getCousr0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER11(), source, 0, 1));
    }

    public String getTitle02p() {
        return getCousr0ai().getOFFILLER11().substring(1, 2);
    }

    public void setTitle02p(String source) {
        getCousr0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER11(), source, 1, 2));
    }

    public String getTitle02h() {
        return getCousr0ai().getOFFILLER11().substring(2, 3);
    }

    public void setTitle02h(String source) {
        getCousr0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER11(), source, 2, 3));
    }

    public String getTitle02v() {
        return getCousr0ai().getOFFILLER11().substring(3);
    }

    public void setTitle02v(String source) {
        getCousr0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER11(), source, 3, 4));
    }

    public String getTitle02o() {
        return getCousr0ai().getTitle02i();
    }

    public void setTitle02o(String source) {
        getCousr0ai().setTitle02i(source);
    }

    public String getOFFILLER7() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getCurtimel());
        tempByteBuffer1.flip();
        String temp6 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp6 + getCousr0ai().getCurtimef();
    }

    public void setOFFILLER7(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setCurtimel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setCurtimel(0);
        }
    }

    public String getCurtimec() {
        return getCousr0ai().getOFFILLER13().substring(0, 1);
    }

    public void setCurtimec(String source) {
        getCousr0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER13(), source, 0, 1));
    }

    public String getCurtimep() {
        return getCousr0ai().getOFFILLER13().substring(1, 2);
    }

    public void setCurtimep(String source) {
        getCousr0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER13(), source, 1, 2));
    }

    public String getCurtimeh() {
        return getCousr0ai().getOFFILLER13().substring(2, 3);
    }

    public void setCurtimeh(String source) {
        getCousr0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER13(), source, 2, 3));
    }

    public String getCurtimev() {
        return getCousr0ai().getOFFILLER13().substring(3);
    }

    public void setCurtimev(String source) {
        getCousr0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER13(), source, 3, 4));
    }

    public String getCurtimeo() {
        return getCousr0ai().getCurtimei();
    }

    public void setCurtimeo(String source) {
        getCousr0ai().setCurtimei(source);
    }

    public String getOFFILLER8() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getPagenuml());
        tempByteBuffer1.flip();
        String temp7 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp7 + getCousr0ai().getPagenumf();
    }

    public void setOFFILLER8(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setPagenuml(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setPagenuml(0);
        }
    }

    public String getPagenumc() {
        return getCousr0ai().getOFFILLER15().substring(0, 1);
    }

    public void setPagenumc(String source) {
        getCousr0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER15(), source, 0, 1));
    }

    public String getPagenump() {
        return getCousr0ai().getOFFILLER15().substring(1, 2);
    }

    public void setPagenump(String source) {
        getCousr0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER15(), source, 1, 2));
    }

    public String getPagenumh() {
        return getCousr0ai().getOFFILLER15().substring(2, 3);
    }

    public void setPagenumh(String source) {
        getCousr0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER15(), source, 2, 3));
    }

    public String getPagenumv() {
        return getCousr0ai().getOFFILLER15().substring(3);
    }

    public void setPagenumv(String source) {
        getCousr0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER15(), source, 3, 4));
    }

    public String getPagenumo() {
        return getCousr0ai().getPagenumi();
    }

    public void setPagenumo(String source) {
        getCousr0ai().setPagenumi(source);
    }

    public String getOFFILLER9() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsridinl());
        tempByteBuffer1.flip();
        String temp8 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp8 + getCousr0ai().getUsridinf();
    }

    public void setOFFILLER9(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsridinl(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsridinl(0);
        }
    }

    public String getUsridinc() {
        return getCousr0ai().getOFFILLER17().substring(0, 1);
    }

    public void setUsridinc(String source) {
        getCousr0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER17(), source, 0, 1));
    }

    public String getUsridinp() {
        return getCousr0ai().getOFFILLER17().substring(1, 2);
    }

    public void setUsridinp(String source) {
        getCousr0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER17(), source, 1, 2));
    }

    public String getUsridinh() {
        return getCousr0ai().getOFFILLER17().substring(2, 3);
    }

    public void setUsridinh(String source) {
        getCousr0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER17(), source, 2, 3));
    }

    public String getUsridinv() {
        return getCousr0ai().getOFFILLER17().substring(3);
    }

    public void setUsridinv(String source) {
        getCousr0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER17(), source, 3, 4));
    }

    public String getUsridino() {
        return getCousr0ai().getUsridini();
    }

    public void setUsridino(String source) {
        getCousr0ai().setUsridini(source);
    }

    public String getOFFILLER10() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0001l());
        tempByteBuffer1.flip();
        String temp9 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp9 + getCousr0ai().getSel0001f();
    }

    public void setOFFILLER10(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0001l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0001l(0);
        }
    }

    public String getSel0001c() {
        return getCousr0ai().getOFFILLER19().substring(0, 1);
    }

    public void setSel0001c(String source) {
        getCousr0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER19(), source, 0, 1));
    }

    public String getSel0001p() {
        return getCousr0ai().getOFFILLER19().substring(1, 2);
    }

    public void setSel0001p(String source) {
        getCousr0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER19(), source, 1, 2));
    }

    public String getSel0001h() {
        return getCousr0ai().getOFFILLER19().substring(2, 3);
    }

    public void setSel0001h(String source) {
        getCousr0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER19(), source, 2, 3));
    }

    public String getSel0001v() {
        return getCousr0ai().getOFFILLER19().substring(3);
    }

    public void setSel0001v(String source) {
        getCousr0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER19(), source, 3, 4));
    }

    public String getSel0001o() {
        return getCousr0ai().getSel0001i();
    }

    public void setSel0001o(String source) {
        getCousr0ai().setSel0001i(source);
    }

    public String getOFFILLER11() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid01l());
        tempByteBuffer1.flip();
        String temp10 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp10 + getCousr0ai().getUsrid01f();
    }

    public void setOFFILLER11(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid01l(0);
        }
    }

    public String getUsrid01c() {
        return getCousr0ai().getOFFILLER21().substring(0, 1);
    }

    public void setUsrid01c(String source) {
        getCousr0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER21(), source, 0, 1));
    }

    public String getUsrid01p() {
        return getCousr0ai().getOFFILLER21().substring(1, 2);
    }

    public void setUsrid01p(String source) {
        getCousr0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER21(), source, 1, 2));
    }

    public String getUsrid01h() {
        return getCousr0ai().getOFFILLER21().substring(2, 3);
    }

    public void setUsrid01h(String source) {
        getCousr0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER21(), source, 2, 3));
    }

    public String getUsrid01v() {
        return getCousr0ai().getOFFILLER21().substring(3);
    }

    public void setUsrid01v(String source) {
        getCousr0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER21(), source, 3, 4));
    }

    public String getUsrid01o() {
        return getCousr0ai().getUsrid01i();
    }

    public void setUsrid01o(String source) {
        getCousr0ai().setUsrid01i(source);
    }

    public String getOFFILLER12() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname01l());
        tempByteBuffer1.flip();
        String temp11 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp11 + getCousr0ai().getFname01f();
    }

    public void setOFFILLER12(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname01l(0);
        }
    }

    public String getFname01c() {
        return getCousr0ai().getOFFILLER23().substring(0, 1);
    }

    public void setFname01c(String source) {
        getCousr0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER23(), source, 0, 1));
    }

    public String getFname01p() {
        return getCousr0ai().getOFFILLER23().substring(1, 2);
    }

    public void setFname01p(String source) {
        getCousr0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER23(), source, 1, 2));
    }

    public String getFname01h() {
        return getCousr0ai().getOFFILLER23().substring(2, 3);
    }

    public void setFname01h(String source) {
        getCousr0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER23(), source, 2, 3));
    }

    public String getFname01v() {
        return getCousr0ai().getOFFILLER23().substring(3);
    }

    public void setFname01v(String source) {
        getCousr0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER23(), source, 3, 4));
    }

    public String getFname01o() {
        return getCousr0ai().getFname01i();
    }

    public void setFname01o(String source) {
        getCousr0ai().setFname01i(source);
    }

    public String getOFFILLER13() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname01l());
        tempByteBuffer1.flip();
        String temp12 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp12 + getCousr0ai().getLname01f();
    }

    public void setOFFILLER13(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname01l(0);
        }
    }

    public String getLname01c() {
        return getCousr0ai().getOFFILLER25().substring(0, 1);
    }

    public void setLname01c(String source) {
        getCousr0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER25(), source, 0, 1));
    }

    public String getLname01p() {
        return getCousr0ai().getOFFILLER25().substring(1, 2);
    }

    public void setLname01p(String source) {
        getCousr0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER25(), source, 1, 2));
    }

    public String getLname01h() {
        return getCousr0ai().getOFFILLER25().substring(2, 3);
    }

    public void setLname01h(String source) {
        getCousr0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER25(), source, 2, 3));
    }

    public String getLname01v() {
        return getCousr0ai().getOFFILLER25().substring(3);
    }

    public void setLname01v(String source) {
        getCousr0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER25(), source, 3, 4));
    }

    public String getLname01o() {
        return getCousr0ai().getLname01i();
    }

    public void setLname01o(String source) {
        getCousr0ai().setLname01i(source);
    }

    public String getOFFILLER14() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype01l());
        tempByteBuffer1.flip();
        String temp13 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp13 + getCousr0ai().getUtype01f();
    }

    public void setOFFILLER14(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype01l(0);
        }
    }

    public String getUtype01c() {
        return getCousr0ai().getOFFILLER27().substring(0, 1);
    }

    public void setUtype01c(String source) {
        getCousr0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER27(), source, 0, 1));
    }

    public String getUtype01p() {
        return getCousr0ai().getOFFILLER27().substring(1, 2);
    }

    public void setUtype01p(String source) {
        getCousr0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER27(), source, 1, 2));
    }

    public String getUtype01h() {
        return getCousr0ai().getOFFILLER27().substring(2, 3);
    }

    public void setUtype01h(String source) {
        getCousr0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER27(), source, 2, 3));
    }

    public String getUtype01v() {
        return getCousr0ai().getOFFILLER27().substring(3);
    }

    public void setUtype01v(String source) {
        getCousr0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER27(), source, 3, 4));
    }

    public String getUtype01o() {
        return getCousr0ai().getUtype01i();
    }

    public void setUtype01o(String source) {
        getCousr0ai().setUtype01i(source);
    }

    public String getOFFILLER15() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0002l());
        tempByteBuffer1.flip();
        String temp14 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp14 + getCousr0ai().getSel0002f();
    }

    public void setOFFILLER15(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0002l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0002l(0);
        }
    }

    public String getSel0002c() {
        return getCousr0ai().getOFFILLER29().substring(0, 1);
    }

    public void setSel0002c(String source) {
        getCousr0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER29(), source, 0, 1));
    }

    public String getSel0002p() {
        return getCousr0ai().getOFFILLER29().substring(1, 2);
    }

    public void setSel0002p(String source) {
        getCousr0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER29(), source, 1, 2));
    }

    public String getSel0002h() {
        return getCousr0ai().getOFFILLER29().substring(2, 3);
    }

    public void setSel0002h(String source) {
        getCousr0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER29(), source, 2, 3));
    }

    public String getSel0002v() {
        return getCousr0ai().getOFFILLER29().substring(3);
    }

    public void setSel0002v(String source) {
        getCousr0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER29(), source, 3, 4));
    }

    public String getSel0002o() {
        return getCousr0ai().getSel0002i();
    }

    public void setSel0002o(String source) {
        getCousr0ai().setSel0002i(source);
    }

    public String getOFFILLER16() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid02l());
        tempByteBuffer1.flip();
        String temp15 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp15 + getCousr0ai().getUsrid02f();
    }

    public void setOFFILLER16(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid02l(0);
        }
    }

    public String getUsrid02c() {
        return getCousr0ai().getOFFILLER31().substring(0, 1);
    }

    public void setUsrid02c(String source) {
        getCousr0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER31(), source, 0, 1));
    }

    public String getUsrid02p() {
        return getCousr0ai().getOFFILLER31().substring(1, 2);
    }

    public void setUsrid02p(String source) {
        getCousr0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER31(), source, 1, 2));
    }

    public String getUsrid02h() {
        return getCousr0ai().getOFFILLER31().substring(2, 3);
    }

    public void setUsrid02h(String source) {
        getCousr0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER31(), source, 2, 3));
    }

    public String getUsrid02v() {
        return getCousr0ai().getOFFILLER31().substring(3);
    }

    public void setUsrid02v(String source) {
        getCousr0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER31(), source, 3, 4));
    }

    public String getUsrid02o() {
        return getCousr0ai().getUsrid02i();
    }

    public void setUsrid02o(String source) {
        getCousr0ai().setUsrid02i(source);
    }

    public String getOFFILLER17() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname02l());
        tempByteBuffer1.flip();
        String temp16 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp16 + getCousr0ai().getFname02f();
    }

    public void setOFFILLER17(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname02l(0);
        }
    }

    public String getFname02c() {
        return getCousr0ai().getOFFILLER33().substring(0, 1);
    }

    public void setFname02c(String source) {
        getCousr0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER33(), source, 0, 1));
    }

    public String getFname02p() {
        return getCousr0ai().getOFFILLER33().substring(1, 2);
    }

    public void setFname02p(String source) {
        getCousr0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER33(), source, 1, 2));
    }

    public String getFname02h() {
        return getCousr0ai().getOFFILLER33().substring(2, 3);
    }

    public void setFname02h(String source) {
        getCousr0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER33(), source, 2, 3));
    }

    public String getFname02v() {
        return getCousr0ai().getOFFILLER33().substring(3);
    }

    public void setFname02v(String source) {
        getCousr0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER33(), source, 3, 4));
    }

    public String getFname02o() {
        return getCousr0ai().getFname02i();
    }

    public void setFname02o(String source) {
        getCousr0ai().setFname02i(source);
    }

    public String getOFFILLER18() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname02l());
        tempByteBuffer1.flip();
        String temp17 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp17 + getCousr0ai().getLname02f();
    }

    public void setOFFILLER18(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname02l(0);
        }
    }

    public String getLname02c() {
        return getCousr0ai().getOFFILLER35().substring(0, 1);
    }

    public void setLname02c(String source) {
        getCousr0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER35(), source, 0, 1));
    }

    public String getLname02p() {
        return getCousr0ai().getOFFILLER35().substring(1, 2);
    }

    public void setLname02p(String source) {
        getCousr0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER35(), source, 1, 2));
    }

    public String getLname02h() {
        return getCousr0ai().getOFFILLER35().substring(2, 3);
    }

    public void setLname02h(String source) {
        getCousr0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER35(), source, 2, 3));
    }

    public String getLname02v() {
        return getCousr0ai().getOFFILLER35().substring(3);
    }

    public void setLname02v(String source) {
        getCousr0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER35(), source, 3, 4));
    }

    public String getLname02o() {
        return getCousr0ai().getLname02i();
    }

    public void setLname02o(String source) {
        getCousr0ai().setLname02i(source);
    }

    public String getOFFILLER19() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype02l());
        tempByteBuffer1.flip();
        String temp18 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp18 + getCousr0ai().getUtype02f();
    }

    public void setOFFILLER19(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype02l(0);
        }
    }

    public String getUtype02c() {
        return getCousr0ai().getOFFILLER37().substring(0, 1);
    }

    public void setUtype02c(String source) {
        getCousr0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER37(), source, 0, 1));
    }

    public String getUtype02p() {
        return getCousr0ai().getOFFILLER37().substring(1, 2);
    }

    public void setUtype02p(String source) {
        getCousr0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER37(), source, 1, 2));
    }

    public String getUtype02h() {
        return getCousr0ai().getOFFILLER37().substring(2, 3);
    }

    public void setUtype02h(String source) {
        getCousr0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER37(), source, 2, 3));
    }

    public String getUtype02v() {
        return getCousr0ai().getOFFILLER37().substring(3);
    }

    public void setUtype02v(String source) {
        getCousr0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER37(), source, 3, 4));
    }

    public String getUtype02o() {
        return getCousr0ai().getUtype02i();
    }

    public void setUtype02o(String source) {
        getCousr0ai().setUtype02i(source);
    }

    public String getOFFILLER20() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0003l());
        tempByteBuffer1.flip();
        String temp19 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp19 + getCousr0ai().getSel0003f();
    }

    public void setOFFILLER20(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0003l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0003l(0);
        }
    }

    public String getSel0003c() {
        return getCousr0ai().getOFFILLER39().substring(0, 1);
    }

    public void setSel0003c(String source) {
        getCousr0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER39(), source, 0, 1));
    }

    public String getSel0003p() {
        return getCousr0ai().getOFFILLER39().substring(1, 2);
    }

    public void setSel0003p(String source) {
        getCousr0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER39(), source, 1, 2));
    }

    public String getSel0003h() {
        return getCousr0ai().getOFFILLER39().substring(2, 3);
    }

    public void setSel0003h(String source) {
        getCousr0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER39(), source, 2, 3));
    }

    public String getSel0003v() {
        return getCousr0ai().getOFFILLER39().substring(3);
    }

    public void setSel0003v(String source) {
        getCousr0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER39(), source, 3, 4));
    }

    public String getSel0003o() {
        return getCousr0ai().getSel0003i();
    }

    public void setSel0003o(String source) {
        getCousr0ai().setSel0003i(source);
    }

    public String getOFFILLER21() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid03l());
        tempByteBuffer1.flip();
        String temp20 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp20 + getCousr0ai().getUsrid03f();
    }

    public void setOFFILLER21(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid03l(0);
        }
    }

    public String getUsrid03c() {
        return getCousr0ai().getOFFILLER41().substring(0, 1);
    }

    public void setUsrid03c(String source) {
        getCousr0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER41(), source, 0, 1));
    }

    public String getUsrid03p() {
        return getCousr0ai().getOFFILLER41().substring(1, 2);
    }

    public void setUsrid03p(String source) {
        getCousr0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER41(), source, 1, 2));
    }

    public String getUsrid03h() {
        return getCousr0ai().getOFFILLER41().substring(2, 3);
    }

    public void setUsrid03h(String source) {
        getCousr0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER41(), source, 2, 3));
    }

    public String getUsrid03v() {
        return getCousr0ai().getOFFILLER41().substring(3);
    }

    public void setUsrid03v(String source) {
        getCousr0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER41(), source, 3, 4));
    }

    public String getUsrid03o() {
        return getCousr0ai().getUsrid03i();
    }

    public void setUsrid03o(String source) {
        getCousr0ai().setUsrid03i(source);
    }

    public String getOFFILLER22() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname03l());
        tempByteBuffer1.flip();
        String temp21 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp21 + getCousr0ai().getFname03f();
    }

    public void setOFFILLER22(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname03l(0);
        }
    }

    public String getFname03c() {
        return getCousr0ai().getOFFILLER43().substring(0, 1);
    }

    public void setFname03c(String source) {
        getCousr0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER43(), source, 0, 1));
    }

    public String getFname03p() {
        return getCousr0ai().getOFFILLER43().substring(1, 2);
    }

    public void setFname03p(String source) {
        getCousr0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER43(), source, 1, 2));
    }

    public String getFname03h() {
        return getCousr0ai().getOFFILLER43().substring(2, 3);
    }

    public void setFname03h(String source) {
        getCousr0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER43(), source, 2, 3));
    }

    public String getFname03v() {
        return getCousr0ai().getOFFILLER43().substring(3);
    }

    public void setFname03v(String source) {
        getCousr0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER43(), source, 3, 4));
    }

    public String getFname03o() {
        return getCousr0ai().getFname03i();
    }

    public void setFname03o(String source) {
        getCousr0ai().setFname03i(source);
    }

    public String getOFFILLER23() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname03l());
        tempByteBuffer1.flip();
        String temp22 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp22 + getCousr0ai().getLname03f();
    }

    public void setOFFILLER23(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname03l(0);
        }
    }

    public String getLname03c() {
        return getCousr0ai().getOFFILLER45().substring(0, 1);
    }

    public void setLname03c(String source) {
        getCousr0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER45(), source, 0, 1));
    }

    public String getLname03p() {
        return getCousr0ai().getOFFILLER45().substring(1, 2);
    }

    public void setLname03p(String source) {
        getCousr0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER45(), source, 1, 2));
    }

    public String getLname03h() {
        return getCousr0ai().getOFFILLER45().substring(2, 3);
    }

    public void setLname03h(String source) {
        getCousr0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER45(), source, 2, 3));
    }

    public String getLname03v() {
        return getCousr0ai().getOFFILLER45().substring(3);
    }

    public void setLname03v(String source) {
        getCousr0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER45(), source, 3, 4));
    }

    public String getLname03o() {
        return getCousr0ai().getLname03i();
    }

    public void setLname03o(String source) {
        getCousr0ai().setLname03i(source);
    }

    public String getOFFILLER24() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype03l());
        tempByteBuffer1.flip();
        String temp23 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp23 + getCousr0ai().getUtype03f();
    }

    public void setOFFILLER24(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype03l(0);
        }
    }

    public String getUtype03c() {
        return getCousr0ai().getOFFILLER47().substring(0, 1);
    }

    public void setUtype03c(String source) {
        getCousr0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER47(), source, 0, 1));
    }

    public String getUtype03p() {
        return getCousr0ai().getOFFILLER47().substring(1, 2);
    }

    public void setUtype03p(String source) {
        getCousr0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER47(), source, 1, 2));
    }

    public String getUtype03h() {
        return getCousr0ai().getOFFILLER47().substring(2, 3);
    }

    public void setUtype03h(String source) {
        getCousr0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER47(), source, 2, 3));
    }

    public String getUtype03v() {
        return getCousr0ai().getOFFILLER47().substring(3);
    }

    public void setUtype03v(String source) {
        getCousr0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER47(), source, 3, 4));
    }

    public String getUtype03o() {
        return getCousr0ai().getUtype03i();
    }

    public void setUtype03o(String source) {
        getCousr0ai().setUtype03i(source);
    }

    public String getOFFILLER25() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0004l());
        tempByteBuffer1.flip();
        String temp24 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp24 + getCousr0ai().getSel0004f();
    }

    public void setOFFILLER25(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0004l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0004l(0);
        }
    }

    public String getSel0004c() {
        return getCousr0ai().getOFFILLER49().substring(0, 1);
    }

    public void setSel0004c(String source) {
        getCousr0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER49(), source, 0, 1));
    }

    public String getSel0004p() {
        return getCousr0ai().getOFFILLER49().substring(1, 2);
    }

    public void setSel0004p(String source) {
        getCousr0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER49(), source, 1, 2));
    }

    public String getSel0004h() {
        return getCousr0ai().getOFFILLER49().substring(2, 3);
    }

    public void setSel0004h(String source) {
        getCousr0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER49(), source, 2, 3));
    }

    public String getSel0004v() {
        return getCousr0ai().getOFFILLER49().substring(3);
    }

    public void setSel0004v(String source) {
        getCousr0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER49(), source, 3, 4));
    }

    public String getSel0004o() {
        return getCousr0ai().getSel0004i();
    }

    public void setSel0004o(String source) {
        getCousr0ai().setSel0004i(source);
    }

    public String getOFFILLER26() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid04l());
        tempByteBuffer1.flip();
        String temp25 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp25 + getCousr0ai().getUsrid04f();
    }

    public void setOFFILLER26(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid04l(0);
        }
    }

    public String getUsrid04c() {
        return getCousr0ai().getOFFILLER51().substring(0, 1);
    }

    public void setUsrid04c(String source) {
        getCousr0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER51(), source, 0, 1));
    }

    public String getUsrid04p() {
        return getCousr0ai().getOFFILLER51().substring(1, 2);
    }

    public void setUsrid04p(String source) {
        getCousr0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER51(), source, 1, 2));
    }

    public String getUsrid04h() {
        return getCousr0ai().getOFFILLER51().substring(2, 3);
    }

    public void setUsrid04h(String source) {
        getCousr0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER51(), source, 2, 3));
    }

    public String getUsrid04v() {
        return getCousr0ai().getOFFILLER51().substring(3);
    }

    public void setUsrid04v(String source) {
        getCousr0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER51(), source, 3, 4));
    }

    public String getUsrid04o() {
        return getCousr0ai().getUsrid04i();
    }

    public void setUsrid04o(String source) {
        getCousr0ai().setUsrid04i(source);
    }

    public String getOFFILLER27() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname04l());
        tempByteBuffer1.flip();
        String temp26 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp26 + getCousr0ai().getFname04f();
    }

    public void setOFFILLER27(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname04l(0);
        }
    }

    public String getFname04c() {
        return getCousr0ai().getOFFILLER53().substring(0, 1);
    }

    public void setFname04c(String source) {
        getCousr0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER53(), source, 0, 1));
    }

    public String getFname04p() {
        return getCousr0ai().getOFFILLER53().substring(1, 2);
    }

    public void setFname04p(String source) {
        getCousr0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER53(), source, 1, 2));
    }

    public String getFname04h() {
        return getCousr0ai().getOFFILLER53().substring(2, 3);
    }

    public void setFname04h(String source) {
        getCousr0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER53(), source, 2, 3));
    }

    public String getFname04v() {
        return getCousr0ai().getOFFILLER53().substring(3);
    }

    public void setFname04v(String source) {
        getCousr0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER53(), source, 3, 4));
    }

    public String getFname04o() {
        return getCousr0ai().getFname04i();
    }

    public void setFname04o(String source) {
        getCousr0ai().setFname04i(source);
    }

    public String getOFFILLER28() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname04l());
        tempByteBuffer1.flip();
        String temp27 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp27 + getCousr0ai().getLname04f();
    }

    public void setOFFILLER28(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname04l(0);
        }
    }

    public String getLname04c() {
        return getCousr0ai().getOFFILLER55().substring(0, 1);
    }

    public void setLname04c(String source) {
        getCousr0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER55(), source, 0, 1));
    }

    public String getLname04p() {
        return getCousr0ai().getOFFILLER55().substring(1, 2);
    }

    public void setLname04p(String source) {
        getCousr0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER55(), source, 1, 2));
    }

    public String getLname04h() {
        return getCousr0ai().getOFFILLER55().substring(2, 3);
    }

    public void setLname04h(String source) {
        getCousr0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER55(), source, 2, 3));
    }

    public String getLname04v() {
        return getCousr0ai().getOFFILLER55().substring(3);
    }

    public void setLname04v(String source) {
        getCousr0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER55(), source, 3, 4));
    }

    public String getLname04o() {
        return getCousr0ai().getLname04i();
    }

    public void setLname04o(String source) {
        getCousr0ai().setLname04i(source);
    }

    public String getOFFILLER29() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype04l());
        tempByteBuffer1.flip();
        String temp28 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp28 + getCousr0ai().getUtype04f();
    }

    public void setOFFILLER29(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype04l(0);
        }
    }

    public String getUtype04c() {
        return getCousr0ai().getOFFILLER57().substring(0, 1);
    }

    public void setUtype04c(String source) {
        getCousr0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER57(), source, 0, 1));
    }

    public String getUtype04p() {
        return getCousr0ai().getOFFILLER57().substring(1, 2);
    }

    public void setUtype04p(String source) {
        getCousr0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER57(), source, 1, 2));
    }

    public String getUtype04h() {
        return getCousr0ai().getOFFILLER57().substring(2, 3);
    }

    public void setUtype04h(String source) {
        getCousr0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER57(), source, 2, 3));
    }

    public String getUtype04v() {
        return getCousr0ai().getOFFILLER57().substring(3);
    }

    public void setUtype04v(String source) {
        getCousr0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER57(), source, 3, 4));
    }

    public String getUtype04o() {
        return getCousr0ai().getUtype04i();
    }

    public void setUtype04o(String source) {
        getCousr0ai().setUtype04i(source);
    }

    public String getOFFILLER30() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0005l());
        tempByteBuffer1.flip();
        String temp29 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp29 + getCousr0ai().getSel0005f();
    }

    public void setOFFILLER30(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0005l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0005l(0);
        }
    }

    public String getSel0005c() {
        return getCousr0ai().getOFFILLER59().substring(0, 1);
    }

    public void setSel0005c(String source) {
        getCousr0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER59(), source, 0, 1));
    }

    public String getSel0005p() {
        return getCousr0ai().getOFFILLER59().substring(1, 2);
    }

    public void setSel0005p(String source) {
        getCousr0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER59(), source, 1, 2));
    }

    public String getSel0005h() {
        return getCousr0ai().getOFFILLER59().substring(2, 3);
    }

    public void setSel0005h(String source) {
        getCousr0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER59(), source, 2, 3));
    }

    public String getSel0005v() {
        return getCousr0ai().getOFFILLER59().substring(3);
    }

    public void setSel0005v(String source) {
        getCousr0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER59(), source, 3, 4));
    }

    public String getSel0005o() {
        return getCousr0ai().getSel0005i();
    }

    public void setSel0005o(String source) {
        getCousr0ai().setSel0005i(source);
    }

    public String getOFFILLER31() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid05l());
        tempByteBuffer1.flip();
        String temp30 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp30 + getCousr0ai().getUsrid05f();
    }

    public void setOFFILLER31(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid05l(0);
        }
    }

    public String getUsrid05c() {
        return getCousr0ai().getOFFILLER61().substring(0, 1);
    }

    public void setUsrid05c(String source) {
        getCousr0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER61(), source, 0, 1));
    }

    public String getUsrid05p() {
        return getCousr0ai().getOFFILLER61().substring(1, 2);
    }

    public void setUsrid05p(String source) {
        getCousr0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER61(), source, 1, 2));
    }

    public String getUsrid05h() {
        return getCousr0ai().getOFFILLER61().substring(2, 3);
    }

    public void setUsrid05h(String source) {
        getCousr0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER61(), source, 2, 3));
    }

    public String getUsrid05v() {
        return getCousr0ai().getOFFILLER61().substring(3);
    }

    public void setUsrid05v(String source) {
        getCousr0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER61(), source, 3, 4));
    }

    public String getUsrid05o() {
        return getCousr0ai().getUsrid05i();
    }

    public void setUsrid05o(String source) {
        getCousr0ai().setUsrid05i(source);
    }

    public String getOFFILLER32() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname05l());
        tempByteBuffer1.flip();
        String temp31 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp31 + getCousr0ai().getFname05f();
    }

    public void setOFFILLER32(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname05l(0);
        }
    }

    public String getFname05c() {
        return getCousr0ai().getOFFILLER63().substring(0, 1);
    }

    public void setFname05c(String source) {
        getCousr0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER63(), source, 0, 1));
    }

    public String getFname05p() {
        return getCousr0ai().getOFFILLER63().substring(1, 2);
    }

    public void setFname05p(String source) {
        getCousr0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER63(), source, 1, 2));
    }

    public String getFname05h() {
        return getCousr0ai().getOFFILLER63().substring(2, 3);
    }

    public void setFname05h(String source) {
        getCousr0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER63(), source, 2, 3));
    }

    public String getFname05v() {
        return getCousr0ai().getOFFILLER63().substring(3);
    }

    public void setFname05v(String source) {
        getCousr0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER63(), source, 3, 4));
    }

    public String getFname05o() {
        return getCousr0ai().getFname05i();
    }

    public void setFname05o(String source) {
        getCousr0ai().setFname05i(source);
    }

    public String getOFFILLER33() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname05l());
        tempByteBuffer1.flip();
        String temp32 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp32 + getCousr0ai().getLname05f();
    }

    public void setOFFILLER33(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname05l(0);
        }
    }

    public String getLname05c() {
        return getCousr0ai().getOFFILLER65().substring(0, 1);
    }

    public void setLname05c(String source) {
        getCousr0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER65(), source, 0, 1));
    }

    public String getLname05p() {
        return getCousr0ai().getOFFILLER65().substring(1, 2);
    }

    public void setLname05p(String source) {
        getCousr0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER65(), source, 1, 2));
    }

    public String getLname05h() {
        return getCousr0ai().getOFFILLER65().substring(2, 3);
    }

    public void setLname05h(String source) {
        getCousr0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER65(), source, 2, 3));
    }

    public String getLname05v() {
        return getCousr0ai().getOFFILLER65().substring(3);
    }

    public void setLname05v(String source) {
        getCousr0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER65(), source, 3, 4));
    }

    public String getLname05o() {
        return getCousr0ai().getLname05i();
    }

    public void setLname05o(String source) {
        getCousr0ai().setLname05i(source);
    }

    public String getOFFILLER34() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype05l());
        tempByteBuffer1.flip();
        String temp33 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp33 + getCousr0ai().getUtype05f();
    }

    public void setOFFILLER34(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype05l(0);
        }
    }

    public String getUtype05c() {
        return getCousr0ai().getOFFILLER67().substring(0, 1);
    }

    public void setUtype05c(String source) {
        getCousr0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER67(), source, 0, 1));
    }

    public String getUtype05p() {
        return getCousr0ai().getOFFILLER67().substring(1, 2);
    }

    public void setUtype05p(String source) {
        getCousr0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER67(), source, 1, 2));
    }

    public String getUtype05h() {
        return getCousr0ai().getOFFILLER67().substring(2, 3);
    }

    public void setUtype05h(String source) {
        getCousr0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER67(), source, 2, 3));
    }

    public String getUtype05v() {
        return getCousr0ai().getOFFILLER67().substring(3);
    }

    public void setUtype05v(String source) {
        getCousr0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER67(), source, 3, 4));
    }

    public String getUtype05o() {
        return getCousr0ai().getUtype05i();
    }

    public void setUtype05o(String source) {
        getCousr0ai().setUtype05i(source);
    }

    public String getOFFILLER35() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0006l());
        tempByteBuffer1.flip();
        String temp34 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp34 + getCousr0ai().getSel0006f();
    }

    public void setOFFILLER35(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0006l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0006l(0);
        }
    }

    public String getSel0006c() {
        return getCousr0ai().getOFFILLER69().substring(0, 1);
    }

    public void setSel0006c(String source) {
        getCousr0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER69(), source, 0, 1));
    }

    public String getSel0006p() {
        return getCousr0ai().getOFFILLER69().substring(1, 2);
    }

    public void setSel0006p(String source) {
        getCousr0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER69(), source, 1, 2));
    }

    public String getSel0006h() {
        return getCousr0ai().getOFFILLER69().substring(2, 3);
    }

    public void setSel0006h(String source) {
        getCousr0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER69(), source, 2, 3));
    }

    public String getSel0006v() {
        return getCousr0ai().getOFFILLER69().substring(3);
    }

    public void setSel0006v(String source) {
        getCousr0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER69(), source, 3, 4));
    }

    public String getSel0006o() {
        return getCousr0ai().getSel0006i();
    }

    public void setSel0006o(String source) {
        getCousr0ai().setSel0006i(source);
    }

    public String getOFFILLER36() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid06l());
        tempByteBuffer1.flip();
        String temp35 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp35 + getCousr0ai().getUsrid06f();
    }

    public void setOFFILLER36(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid06l(0);
        }
    }

    public String getUsrid06c() {
        return getCousr0ai().getOFFILLER71().substring(0, 1);
    }

    public void setUsrid06c(String source) {
        getCousr0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER71(), source, 0, 1));
    }

    public String getUsrid06p() {
        return getCousr0ai().getOFFILLER71().substring(1, 2);
    }

    public void setUsrid06p(String source) {
        getCousr0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER71(), source, 1, 2));
    }

    public String getUsrid06h() {
        return getCousr0ai().getOFFILLER71().substring(2, 3);
    }

    public void setUsrid06h(String source) {
        getCousr0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER71(), source, 2, 3));
    }

    public String getUsrid06v() {
        return getCousr0ai().getOFFILLER71().substring(3);
    }

    public void setUsrid06v(String source) {
        getCousr0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER71(), source, 3, 4));
    }

    public String getUsrid06o() {
        return getCousr0ai().getUsrid06i();
    }

    public void setUsrid06o(String source) {
        getCousr0ai().setUsrid06i(source);
    }

    public String getOFFILLER37() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname06l());
        tempByteBuffer1.flip();
        String temp36 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp36 + getCousr0ai().getFname06f();
    }

    public void setOFFILLER37(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname06l(0);
        }
    }

    public String getFname06c() {
        return getCousr0ai().getOFFILLER73().substring(0, 1);
    }

    public void setFname06c(String source) {
        getCousr0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER73(), source, 0, 1));
    }

    public String getFname06p() {
        return getCousr0ai().getOFFILLER73().substring(1, 2);
    }

    public void setFname06p(String source) {
        getCousr0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER73(), source, 1, 2));
    }

    public String getFname06h() {
        return getCousr0ai().getOFFILLER73().substring(2, 3);
    }

    public void setFname06h(String source) {
        getCousr0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER73(), source, 2, 3));
    }

    public String getFname06v() {
        return getCousr0ai().getOFFILLER73().substring(3);
    }

    public void setFname06v(String source) {
        getCousr0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER73(), source, 3, 4));
    }

    public String getFname06o() {
        return getCousr0ai().getFname06i();
    }

    public void setFname06o(String source) {
        getCousr0ai().setFname06i(source);
    }

    public String getOFFILLER38() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname06l());
        tempByteBuffer1.flip();
        String temp37 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp37 + getCousr0ai().getLname06f();
    }

    public void setOFFILLER38(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname06l(0);
        }
    }

    public String getLname06c() {
        return getCousr0ai().getOFFILLER75().substring(0, 1);
    }

    public void setLname06c(String source) {
        getCousr0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER75(), source, 0, 1));
    }

    public String getLname06p() {
        return getCousr0ai().getOFFILLER75().substring(1, 2);
    }

    public void setLname06p(String source) {
        getCousr0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER75(), source, 1, 2));
    }

    public String getLname06h() {
        return getCousr0ai().getOFFILLER75().substring(2, 3);
    }

    public void setLname06h(String source) {
        getCousr0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER75(), source, 2, 3));
    }

    public String getLname06v() {
        return getCousr0ai().getOFFILLER75().substring(3);
    }

    public void setLname06v(String source) {
        getCousr0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER75(), source, 3, 4));
    }

    public String getLname06o() {
        return getCousr0ai().getLname06i();
    }

    public void setLname06o(String source) {
        getCousr0ai().setLname06i(source);
    }

    public String getOFFILLER39() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype06l());
        tempByteBuffer1.flip();
        String temp38 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp38 + getCousr0ai().getUtype06f();
    }

    public void setOFFILLER39(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype06l(0);
        }
    }

    public String getUtype06c() {
        return getCousr0ai().getOFFILLER77().substring(0, 1);
    }

    public void setUtype06c(String source) {
        getCousr0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER77(), source, 0, 1));
    }

    public String getUtype06p() {
        return getCousr0ai().getOFFILLER77().substring(1, 2);
    }

    public void setUtype06p(String source) {
        getCousr0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER77(), source, 1, 2));
    }

    public String getUtype06h() {
        return getCousr0ai().getOFFILLER77().substring(2, 3);
    }

    public void setUtype06h(String source) {
        getCousr0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER77(), source, 2, 3));
    }

    public String getUtype06v() {
        return getCousr0ai().getOFFILLER77().substring(3);
    }

    public void setUtype06v(String source) {
        getCousr0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER77(), source, 3, 4));
    }

    public String getUtype06o() {
        return getCousr0ai().getUtype06i();
    }

    public void setUtype06o(String source) {
        getCousr0ai().setUtype06i(source);
    }

    public String getOFFILLER40() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0007l());
        tempByteBuffer1.flip();
        String temp39 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp39 + getCousr0ai().getSel0007f();
    }

    public void setOFFILLER40(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0007l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0007l(0);
        }
    }

    public String getSel0007c() {
        return getCousr0ai().getOFFILLER79().substring(0, 1);
    }

    public void setSel0007c(String source) {
        getCousr0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER79(), source, 0, 1));
    }

    public String getSel0007p() {
        return getCousr0ai().getOFFILLER79().substring(1, 2);
    }

    public void setSel0007p(String source) {
        getCousr0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER79(), source, 1, 2));
    }

    public String getSel0007h() {
        return getCousr0ai().getOFFILLER79().substring(2, 3);
    }

    public void setSel0007h(String source) {
        getCousr0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER79(), source, 2, 3));
    }

    public String getSel0007v() {
        return getCousr0ai().getOFFILLER79().substring(3);
    }

    public void setSel0007v(String source) {
        getCousr0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER79(), source, 3, 4));
    }

    public String getSel0007o() {
        return getCousr0ai().getSel0007i();
    }

    public void setSel0007o(String source) {
        getCousr0ai().setSel0007i(source);
    }

    public String getOFFILLER41() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid07l());
        tempByteBuffer1.flip();
        String temp40 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp40 + getCousr0ai().getUsrid07f();
    }

    public void setOFFILLER41(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid07l(0);
        }
    }

    public String getUsrid07c() {
        return getCousr0ai().getOFFILLER81().substring(0, 1);
    }

    public void setUsrid07c(String source) {
        getCousr0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER81(), source, 0, 1));
    }

    public String getUsrid07p() {
        return getCousr0ai().getOFFILLER81().substring(1, 2);
    }

    public void setUsrid07p(String source) {
        getCousr0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER81(), source, 1, 2));
    }

    public String getUsrid07h() {
        return getCousr0ai().getOFFILLER81().substring(2, 3);
    }

    public void setUsrid07h(String source) {
        getCousr0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER81(), source, 2, 3));
    }

    public String getUsrid07v() {
        return getCousr0ai().getOFFILLER81().substring(3);
    }

    public void setUsrid07v(String source) {
        getCousr0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER81(), source, 3, 4));
    }

    public String getUsrid07o() {
        return getCousr0ai().getUsrid07i();
    }

    public void setUsrid07o(String source) {
        getCousr0ai().setUsrid07i(source);
    }

    public String getOFFILLER42() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname07l());
        tempByteBuffer1.flip();
        String temp41 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp41 + getCousr0ai().getFname07f();
    }

    public void setOFFILLER42(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname07l(0);
        }
    }

    public String getFname07c() {
        return getCousr0ai().getOFFILLER83().substring(0, 1);
    }

    public void setFname07c(String source) {
        getCousr0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER83(), source, 0, 1));
    }

    public String getFname07p() {
        return getCousr0ai().getOFFILLER83().substring(1, 2);
    }

    public void setFname07p(String source) {
        getCousr0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER83(), source, 1, 2));
    }

    public String getFname07h() {
        return getCousr0ai().getOFFILLER83().substring(2, 3);
    }

    public void setFname07h(String source) {
        getCousr0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER83(), source, 2, 3));
    }

    public String getFname07v() {
        return getCousr0ai().getOFFILLER83().substring(3);
    }

    public void setFname07v(String source) {
        getCousr0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER83(), source, 3, 4));
    }

    public String getFname07o() {
        return getCousr0ai().getFname07i();
    }

    public void setFname07o(String source) {
        getCousr0ai().setFname07i(source);
    }

    public String getOFFILLER43() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname07l());
        tempByteBuffer1.flip();
        String temp42 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp42 + getCousr0ai().getLname07f();
    }

    public void setOFFILLER43(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname07l(0);
        }
    }

    public String getLname07c() {
        return getCousr0ai().getOFFILLER85().substring(0, 1);
    }

    public void setLname07c(String source) {
        getCousr0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER85(), source, 0, 1));
    }

    public String getLname07p() {
        return getCousr0ai().getOFFILLER85().substring(1, 2);
    }

    public void setLname07p(String source) {
        getCousr0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER85(), source, 1, 2));
    }

    public String getLname07h() {
        return getCousr0ai().getOFFILLER85().substring(2, 3);
    }

    public void setLname07h(String source) {
        getCousr0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER85(), source, 2, 3));
    }

    public String getLname07v() {
        return getCousr0ai().getOFFILLER85().substring(3);
    }

    public void setLname07v(String source) {
        getCousr0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER85(), source, 3, 4));
    }

    public String getLname07o() {
        return getCousr0ai().getLname07i();
    }

    public void setLname07o(String source) {
        getCousr0ai().setLname07i(source);
    }

    public String getOFFILLER44() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype07l());
        tempByteBuffer1.flip();
        String temp43 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp43 + getCousr0ai().getUtype07f();
    }

    public void setOFFILLER44(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype07l(0);
        }
    }

    public String getUtype07c() {
        return getCousr0ai().getOFFILLER87().substring(0, 1);
    }

    public void setUtype07c(String source) {
        getCousr0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER87(), source, 0, 1));
    }

    public String getUtype07p() {
        return getCousr0ai().getOFFILLER87().substring(1, 2);
    }

    public void setUtype07p(String source) {
        getCousr0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER87(), source, 1, 2));
    }

    public String getUtype07h() {
        return getCousr0ai().getOFFILLER87().substring(2, 3);
    }

    public void setUtype07h(String source) {
        getCousr0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER87(), source, 2, 3));
    }

    public String getUtype07v() {
        return getCousr0ai().getOFFILLER87().substring(3);
    }

    public void setUtype07v(String source) {
        getCousr0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER87(), source, 3, 4));
    }

    public String getUtype07o() {
        return getCousr0ai().getUtype07i();
    }

    public void setUtype07o(String source) {
        getCousr0ai().setUtype07i(source);
    }

    public String getOFFILLER45() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0008l());
        tempByteBuffer1.flip();
        String temp44 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp44 + getCousr0ai().getSel0008f();
    }

    public void setOFFILLER45(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0008l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0008l(0);
        }
    }

    public String getSel0008c() {
        return getCousr0ai().getOFFILLER89().substring(0, 1);
    }

    public void setSel0008c(String source) {
        getCousr0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER89(), source, 0, 1));
    }

    public String getSel0008p() {
        return getCousr0ai().getOFFILLER89().substring(1, 2);
    }

    public void setSel0008p(String source) {
        getCousr0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER89(), source, 1, 2));
    }

    public String getSel0008h() {
        return getCousr0ai().getOFFILLER89().substring(2, 3);
    }

    public void setSel0008h(String source) {
        getCousr0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER89(), source, 2, 3));
    }

    public String getSel0008v() {
        return getCousr0ai().getOFFILLER89().substring(3);
    }

    public void setSel0008v(String source) {
        getCousr0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER89(), source, 3, 4));
    }

    public String getSel0008o() {
        return getCousr0ai().getSel0008i();
    }

    public void setSel0008o(String source) {
        getCousr0ai().setSel0008i(source);
    }

    public String getOFFILLER46() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid08l());
        tempByteBuffer1.flip();
        String temp45 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp45 + getCousr0ai().getUsrid08f();
    }

    public void setOFFILLER46(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid08l(0);
        }
    }

    public String getUsrid08c() {
        return getCousr0ai().getOFFILLER91().substring(0, 1);
    }

    public void setUsrid08c(String source) {
        getCousr0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER91(), source, 0, 1));
    }

    public String getUsrid08p() {
        return getCousr0ai().getOFFILLER91().substring(1, 2);
    }

    public void setUsrid08p(String source) {
        getCousr0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER91(), source, 1, 2));
    }

    public String getUsrid08h() {
        return getCousr0ai().getOFFILLER91().substring(2, 3);
    }

    public void setUsrid08h(String source) {
        getCousr0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER91(), source, 2, 3));
    }

    public String getUsrid08v() {
        return getCousr0ai().getOFFILLER91().substring(3);
    }

    public void setUsrid08v(String source) {
        getCousr0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER91(), source, 3, 4));
    }

    public String getUsrid08o() {
        return getCousr0ai().getUsrid08i();
    }

    public void setUsrid08o(String source) {
        getCousr0ai().setUsrid08i(source);
    }

    public String getOFFILLER47() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname08l());
        tempByteBuffer1.flip();
        String temp46 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp46 + getCousr0ai().getFname08f();
    }

    public void setOFFILLER47(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname08l(0);
        }
    }

    public String getFname08c() {
        return getCousr0ai().getOFFILLER93().substring(0, 1);
    }

    public void setFname08c(String source) {
        getCousr0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER93(), source, 0, 1));
    }

    public String getFname08p() {
        return getCousr0ai().getOFFILLER93().substring(1, 2);
    }

    public void setFname08p(String source) {
        getCousr0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER93(), source, 1, 2));
    }

    public String getFname08h() {
        return getCousr0ai().getOFFILLER93().substring(2, 3);
    }

    public void setFname08h(String source) {
        getCousr0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER93(), source, 2, 3));
    }

    public String getFname08v() {
        return getCousr0ai().getOFFILLER93().substring(3);
    }

    public void setFname08v(String source) {
        getCousr0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER93(), source, 3, 4));
    }

    public String getFname08o() {
        return getCousr0ai().getFname08i();
    }

    public void setFname08o(String source) {
        getCousr0ai().setFname08i(source);
    }

    public String getOFFILLER48() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname08l());
        tempByteBuffer1.flip();
        String temp47 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp47 + getCousr0ai().getLname08f();
    }

    public void setOFFILLER48(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname08l(0);
        }
    }

    public String getLname08c() {
        return getCousr0ai().getOFFILLER95().substring(0, 1);
    }

    public void setLname08c(String source) {
        getCousr0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER95(), source, 0, 1));
    }

    public String getLname08p() {
        return getCousr0ai().getOFFILLER95().substring(1, 2);
    }

    public void setLname08p(String source) {
        getCousr0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER95(), source, 1, 2));
    }

    public String getLname08h() {
        return getCousr0ai().getOFFILLER95().substring(2, 3);
    }

    public void setLname08h(String source) {
        getCousr0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER95(), source, 2, 3));
    }

    public String getLname08v() {
        return getCousr0ai().getOFFILLER95().substring(3);
    }

    public void setLname08v(String source) {
        getCousr0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER95(), source, 3, 4));
    }

    public String getLname08o() {
        return getCousr0ai().getLname08i();
    }

    public void setLname08o(String source) {
        getCousr0ai().setLname08i(source);
    }

    public String getOFFILLER49() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype08l());
        tempByteBuffer1.flip();
        String temp48 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp48 + getCousr0ai().getUtype08f();
    }

    public void setOFFILLER49(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype08l(0);
        }
    }

    public String getUtype08c() {
        return getCousr0ai().getOFFILLER97().substring(0, 1);
    }

    public void setUtype08c(String source) {
        getCousr0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER97(), source, 0, 1));
    }

    public String getUtype08p() {
        return getCousr0ai().getOFFILLER97().substring(1, 2);
    }

    public void setUtype08p(String source) {
        getCousr0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER97(), source, 1, 2));
    }

    public String getUtype08h() {
        return getCousr0ai().getOFFILLER97().substring(2, 3);
    }

    public void setUtype08h(String source) {
        getCousr0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER97(), source, 2, 3));
    }

    public String getUtype08v() {
        return getCousr0ai().getOFFILLER97().substring(3);
    }

    public void setUtype08v(String source) {
        getCousr0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER97(), source, 3, 4));
    }

    public String getUtype08o() {
        return getCousr0ai().getUtype08i();
    }

    public void setUtype08o(String source) {
        getCousr0ai().setUtype08i(source);
    }

    public String getOFFILLER50() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0009l());
        tempByteBuffer1.flip();
        String temp49 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp49 + getCousr0ai().getSel0009f();
    }

    public void setOFFILLER50(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0009l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0009l(0);
        }
    }

    public String getSel0009c() {
        return getCousr0ai().getOFFILLER99().substring(0, 1);
    }

    public void setSel0009c(String source) {
        getCousr0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER99(), source, 0, 1));
    }

    public String getSel0009p() {
        return getCousr0ai().getOFFILLER99().substring(1, 2);
    }

    public void setSel0009p(String source) {
        getCousr0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER99(), source, 1, 2));
    }

    public String getSel0009h() {
        return getCousr0ai().getOFFILLER99().substring(2, 3);
    }

    public void setSel0009h(String source) {
        getCousr0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER99(), source, 2, 3));
    }

    public String getSel0009v() {
        return getCousr0ai().getOFFILLER99().substring(3);
    }

    public void setSel0009v(String source) {
        getCousr0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCousr0ai().getOFFILLER99(), source, 3, 4));
    }

    public String getSel0009o() {
        return getCousr0ai().getSel0009i();
    }

    public void setSel0009o(String source) {
        getCousr0ai().setSel0009i(source);
    }

    public String getOFFILLER51() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid09l());
        tempByteBuffer1.flip();
        String temp50 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp50 + getCousr0ai().getUsrid09f();
    }

    public void setOFFILLER51(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid09l(0);
        }
    }

    public String getUsrid09c() {
        return getCousr0ai().getOFFILLER101().substring(0, 1);
    }

    public void setUsrid09c(String source) {
        getCousr0ai().setOFFILLER101(
                StringUtils.overlay(getCousr0ai().getOFFILLER101(), source, 0,
                        1));
    }

    public String getUsrid09p() {
        return getCousr0ai().getOFFILLER101().substring(1, 2);
    }

    public void setUsrid09p(String source) {
        getCousr0ai().setOFFILLER101(
                StringUtils.overlay(getCousr0ai().getOFFILLER101(), source, 1,
                        2));
    }

    public String getUsrid09h() {
        return getCousr0ai().getOFFILLER101().substring(2, 3);
    }

    public void setUsrid09h(String source) {
        getCousr0ai().setOFFILLER101(
                StringUtils.overlay(getCousr0ai().getOFFILLER101(), source, 2,
                        3));
    }

    public String getUsrid09v() {
        return getCousr0ai().getOFFILLER101().substring(3);
    }

    public void setUsrid09v(String source) {
        getCousr0ai().setOFFILLER101(
                StringUtils.overlay(getCousr0ai().getOFFILLER101(), source, 3,
                        4));
    }

    public String getUsrid09o() {
        return getCousr0ai().getUsrid09i();
    }

    public void setUsrid09o(String source) {
        getCousr0ai().setUsrid09i(source);
    }

    public String getOFFILLER52() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname09l());
        tempByteBuffer1.flip();
        String temp51 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp51 + getCousr0ai().getFname09f();
    }

    public void setOFFILLER52(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname09l(0);
        }
    }

    public String getFname09c() {
        return getCousr0ai().getOFFILLER103().substring(0, 1);
    }

    public void setFname09c(String source) {
        getCousr0ai().setOFFILLER103(
                StringUtils.overlay(getCousr0ai().getOFFILLER103(), source, 0,
                        1));
    }

    public String getFname09p() {
        return getCousr0ai().getOFFILLER103().substring(1, 2);
    }

    public void setFname09p(String source) {
        getCousr0ai().setOFFILLER103(
                StringUtils.overlay(getCousr0ai().getOFFILLER103(), source, 1,
                        2));
    }

    public String getFname09h() {
        return getCousr0ai().getOFFILLER103().substring(2, 3);
    }

    public void setFname09h(String source) {
        getCousr0ai().setOFFILLER103(
                StringUtils.overlay(getCousr0ai().getOFFILLER103(), source, 2,
                        3));
    }

    public String getFname09v() {
        return getCousr0ai().getOFFILLER103().substring(3);
    }

    public void setFname09v(String source) {
        getCousr0ai().setOFFILLER103(
                StringUtils.overlay(getCousr0ai().getOFFILLER103(), source, 3,
                        4));
    }

    public String getFname09o() {
        return getCousr0ai().getFname09i();
    }

    public void setFname09o(String source) {
        getCousr0ai().setFname09i(source);
    }

    public String getOFFILLER53() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname09l());
        tempByteBuffer1.flip();
        String temp52 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp52 + getCousr0ai().getLname09f();
    }

    public void setOFFILLER53(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname09l(0);
        }
    }

    public String getLname09c() {
        return getCousr0ai().getOFFILLER105().substring(0, 1);
    }

    public void setLname09c(String source) {
        getCousr0ai().setOFFILLER105(
                StringUtils.overlay(getCousr0ai().getOFFILLER105(), source, 0,
                        1));
    }

    public String getLname09p() {
        return getCousr0ai().getOFFILLER105().substring(1, 2);
    }

    public void setLname09p(String source) {
        getCousr0ai().setOFFILLER105(
                StringUtils.overlay(getCousr0ai().getOFFILLER105(), source, 1,
                        2));
    }

    public String getLname09h() {
        return getCousr0ai().getOFFILLER105().substring(2, 3);
    }

    public void setLname09h(String source) {
        getCousr0ai().setOFFILLER105(
                StringUtils.overlay(getCousr0ai().getOFFILLER105(), source, 2,
                        3));
    }

    public String getLname09v() {
        return getCousr0ai().getOFFILLER105().substring(3);
    }

    public void setLname09v(String source) {
        getCousr0ai().setOFFILLER105(
                StringUtils.overlay(getCousr0ai().getOFFILLER105(), source, 3,
                        4));
    }

    public String getLname09o() {
        return getCousr0ai().getLname09i();
    }

    public void setLname09o(String source) {
        getCousr0ai().setLname09i(source);
    }

    public String getOFFILLER54() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype09l());
        tempByteBuffer1.flip();
        String temp53 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp53 + getCousr0ai().getUtype09f();
    }

    public void setOFFILLER54(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype09l(0);
        }
    }

    public String getUtype09c() {
        return getCousr0ai().getOFFILLER107().substring(0, 1);
    }

    public void setUtype09c(String source) {
        getCousr0ai().setOFFILLER107(
                StringUtils.overlay(getCousr0ai().getOFFILLER107(), source, 0,
                        1));
    }

    public String getUtype09p() {
        return getCousr0ai().getOFFILLER107().substring(1, 2);
    }

    public void setUtype09p(String source) {
        getCousr0ai().setOFFILLER107(
                StringUtils.overlay(getCousr0ai().getOFFILLER107(), source, 1,
                        2));
    }

    public String getUtype09h() {
        return getCousr0ai().getOFFILLER107().substring(2, 3);
    }

    public void setUtype09h(String source) {
        getCousr0ai().setOFFILLER107(
                StringUtils.overlay(getCousr0ai().getOFFILLER107(), source, 2,
                        3));
    }

    public String getUtype09v() {
        return getCousr0ai().getOFFILLER107().substring(3);
    }

    public void setUtype09v(String source) {
        getCousr0ai().setOFFILLER107(
                StringUtils.overlay(getCousr0ai().getOFFILLER107(), source, 3,
                        4));
    }

    public String getUtype09o() {
        return getCousr0ai().getUtype09i();
    }

    public void setUtype09o(String source) {
        getCousr0ai().setUtype09i(source);
    }

    public String getOFFILLER55() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getSel0010l());
        tempByteBuffer1.flip();
        String temp54 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp54 + getCousr0ai().getSel0010f();
    }

    public void setOFFILLER55(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setSel0010l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setSel0010l(0);
        }
    }

    public String getSel0010c() {
        return getCousr0ai().getOFFILLER109().substring(0, 1);
    }

    public void setSel0010c(String source) {
        getCousr0ai().setOFFILLER109(
                StringUtils.overlay(getCousr0ai().getOFFILLER109(), source, 0,
                        1));
    }

    public String getSel0010p() {
        return getCousr0ai().getOFFILLER109().substring(1, 2);
    }

    public void setSel0010p(String source) {
        getCousr0ai().setOFFILLER109(
                StringUtils.overlay(getCousr0ai().getOFFILLER109(), source, 1,
                        2));
    }

    public String getSel0010h() {
        return getCousr0ai().getOFFILLER109().substring(2, 3);
    }

    public void setSel0010h(String source) {
        getCousr0ai().setOFFILLER109(
                StringUtils.overlay(getCousr0ai().getOFFILLER109(), source, 2,
                        3));
    }

    public String getSel0010v() {
        return getCousr0ai().getOFFILLER109().substring(3);
    }

    public void setSel0010v(String source) {
        getCousr0ai().setOFFILLER109(
                StringUtils.overlay(getCousr0ai().getOFFILLER109(), source, 3,
                        4));
    }

    public String getSel0010o() {
        return getCousr0ai().getSel0010i();
    }

    public void setSel0010o(String source) {
        getCousr0ai().setSel0010i(source);
    }

    public String getOFFILLER56() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUsrid10l());
        tempByteBuffer1.flip();
        String temp55 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp55 + getCousr0ai().getUsrid10f();
    }

    public void setOFFILLER56(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUsrid10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUsrid10l(0);
        }
    }

    public String getUsrid10c() {
        return getCousr0ai().getOFFILLER111().substring(0, 1);
    }

    public void setUsrid10c(String source) {
        getCousr0ai().setOFFILLER111(
                StringUtils.overlay(getCousr0ai().getOFFILLER111(), source, 0,
                        1));
    }

    public String getUsrid10p() {
        return getCousr0ai().getOFFILLER111().substring(1, 2);
    }

    public void setUsrid10p(String source) {
        getCousr0ai().setOFFILLER111(
                StringUtils.overlay(getCousr0ai().getOFFILLER111(), source, 1,
                        2));
    }

    public String getUsrid10h() {
        return getCousr0ai().getOFFILLER111().substring(2, 3);
    }

    public void setUsrid10h(String source) {
        getCousr0ai().setOFFILLER111(
                StringUtils.overlay(getCousr0ai().getOFFILLER111(), source, 2,
                        3));
    }

    public String getUsrid10v() {
        return getCousr0ai().getOFFILLER111().substring(3);
    }

    public void setUsrid10v(String source) {
        getCousr0ai().setOFFILLER111(
                StringUtils.overlay(getCousr0ai().getOFFILLER111(), source, 3,
                        4));
    }

    public String getUsrid10o() {
        return getCousr0ai().getUsrid10i();
    }

    public void setUsrid10o(String source) {
        getCousr0ai().setUsrid10i(source);
    }

    public String getOFFILLER57() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getFname10l());
        tempByteBuffer1.flip();
        String temp56 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp56 + getCousr0ai().getFname10f();
    }

    public void setOFFILLER57(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setFname10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setFname10l(0);
        }
    }

    public String getFname10c() {
        return getCousr0ai().getOFFILLER113().substring(0, 1);
    }

    public void setFname10c(String source) {
        getCousr0ai().setOFFILLER113(
                StringUtils.overlay(getCousr0ai().getOFFILLER113(), source, 0,
                        1));
    }

    public String getFname10p() {
        return getCousr0ai().getOFFILLER113().substring(1, 2);
    }

    public void setFname10p(String source) {
        getCousr0ai().setOFFILLER113(
                StringUtils.overlay(getCousr0ai().getOFFILLER113(), source, 1,
                        2));
    }

    public String getFname10h() {
        return getCousr0ai().getOFFILLER113().substring(2, 3);
    }

    public void setFname10h(String source) {
        getCousr0ai().setOFFILLER113(
                StringUtils.overlay(getCousr0ai().getOFFILLER113(), source, 2,
                        3));
    }

    public String getFname10v() {
        return getCousr0ai().getOFFILLER113().substring(3);
    }

    public void setFname10v(String source) {
        getCousr0ai().setOFFILLER113(
                StringUtils.overlay(getCousr0ai().getOFFILLER113(), source, 3,
                        4));
    }

    public String getFname10o() {
        return getCousr0ai().getFname10i();
    }

    public void setFname10o(String source) {
        getCousr0ai().setFname10i(source);
    }

    public String getOFFILLER58() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getLname10l());
        tempByteBuffer1.flip();
        String temp57 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp57 + getCousr0ai().getLname10f();
    }

    public void setOFFILLER58(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setLname10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setLname10l(0);
        }
    }

    public String getLname10c() {
        return getCousr0ai().getOFFILLER115().substring(0, 1);
    }

    public void setLname10c(String source) {
        getCousr0ai().setOFFILLER115(
                StringUtils.overlay(getCousr0ai().getOFFILLER115(), source, 0,
                        1));
    }

    public String getLname10p() {
        return getCousr0ai().getOFFILLER115().substring(1, 2);
    }

    public void setLname10p(String source) {
        getCousr0ai().setOFFILLER115(
                StringUtils.overlay(getCousr0ai().getOFFILLER115(), source, 1,
                        2));
    }

    public String getLname10h() {
        return getCousr0ai().getOFFILLER115().substring(2, 3);
    }

    public void setLname10h(String source) {
        getCousr0ai().setOFFILLER115(
                StringUtils.overlay(getCousr0ai().getOFFILLER115(), source, 2,
                        3));
    }

    public String getLname10v() {
        return getCousr0ai().getOFFILLER115().substring(3);
    }

    public void setLname10v(String source) {
        getCousr0ai().setOFFILLER115(
                StringUtils.overlay(getCousr0ai().getOFFILLER115(), source, 3,
                        4));
    }

    public String getLname10o() {
        return getCousr0ai().getLname10i();
    }

    public void setLname10o(String source) {
        getCousr0ai().setLname10i(source);
    }

    public String getOFFILLER59() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getUtype10l());
        tempByteBuffer1.flip();
        String temp58 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp58 + getCousr0ai().getUtype10f();
    }

    public void setOFFILLER59(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setUtype10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setUtype10l(0);
        }
    }

    public String getUtype10c() {
        return getCousr0ai().getOFFILLER117().substring(0, 1);
    }

    public void setUtype10c(String source) {
        getCousr0ai().setOFFILLER117(
                StringUtils.overlay(getCousr0ai().getOFFILLER117(), source, 0,
                        1));
    }

    public String getUtype10p() {
        return getCousr0ai().getOFFILLER117().substring(1, 2);
    }

    public void setUtype10p(String source) {
        getCousr0ai().setOFFILLER117(
                StringUtils.overlay(getCousr0ai().getOFFILLER117(), source, 1,
                        2));
    }

    public String getUtype10h() {
        return getCousr0ai().getOFFILLER117().substring(2, 3);
    }

    public void setUtype10h(String source) {
        getCousr0ai().setOFFILLER117(
                StringUtils.overlay(getCousr0ai().getOFFILLER117(), source, 2,
                        3));
    }

    public String getUtype10v() {
        return getCousr0ai().getOFFILLER117().substring(3);
    }

    public void setUtype10v(String source) {
        getCousr0ai().setOFFILLER117(
                StringUtils.overlay(getCousr0ai().getOFFILLER117(), source, 3,
                        4));
    }

    public String getUtype10o() {
        return getCousr0ai().getUtype10i();
    }

    public void setUtype10o(String source) {
        getCousr0ai().setUtype10i(source);
    }

    public String getOFFILLER60() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCousr0ai().getErrmsgl());
        tempByteBuffer1.flip();
        String temp59 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp59 + getCousr0ai().getErrmsgf();
    }

    public void setOFFILLER60(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCousr0ai().setErrmsgl(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCousr0ai().setErrmsgl(0);
        }
    }

    public String getErrmsgc() {
        return getCousr0ai().getOFFILLER119().substring(0, 1);
    }

    public void setErrmsgc(String source) {
        getCousr0ai().setOFFILLER119(
                StringUtils.overlay(getCousr0ai().getOFFILLER119(), source, 0,
                        1));
    }

    public String getErrmsgp() {
        return getCousr0ai().getOFFILLER119().substring(1, 2);
    }

    public void setErrmsgp(String source) {
        getCousr0ai().setOFFILLER119(
                StringUtils.overlay(getCousr0ai().getOFFILLER119(), source, 1,
                        2));
    }

    public String getErrmsgh() {
        return getCousr0ai().getOFFILLER119().substring(2, 3);
    }

    public void setErrmsgh(String source) {
        getCousr0ai().setOFFILLER119(
                StringUtils.overlay(getCousr0ai().getOFFILLER119(), source, 2,
                        3));
    }

    public String getErrmsgv() {
        return getCousr0ai().getOFFILLER119().substring(3);
    }

    public void setErrmsgv(String source) {
        getCousr0ai().setOFFILLER119(
                StringUtils.overlay(getCousr0ai().getOFFILLER119(), source, 3,
                        4));
    }

    public String getErrmsgo() {
        return getCousr0ai().getErrmsgi();
    }

    public void setErrmsgo(String source) {
        getCousr0ai().setErrmsgi(source);
    }

    //       *COPY COTTL01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COTTL01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COTTL01Y.cpy, LINE #18] CCDA-SCREEN-TITLE (level: 1)
    private @Getter @Setter Cousr00cCcdaScreenTitle ccdaScreenTitle = new Cousr00cCcdaScreenTitle();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CSDAT01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSDAT01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSDAT01Y.cpy, LINE #18] WS-DATE-TIME (level: 1)
    private @Getter @Setter Cousr00cWsDateTime wsDateTime = new Cousr00cWsDateTime();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CSMSG01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSMSG01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG01Y.cpy, LINE #18] CCDA-COMMON-MESSAGES (level: 1)
    private @Getter @Setter Cousr00cCcdaCommonMessages ccdaCommonMessages = new Cousr00cCcdaCommonMessages();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CSUSR01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSUSR01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSUSR01Y.cpy, LINE #18] SEC-USER-DATA (level: 1)
    private @Getter @Setter Cousr00cSecUserData secUserData = new Cousr00cSecUserData();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT 
    // *                                                                 
    //       *COPY DFHAID.                                                     
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/.default/DFHAID.cpy)  
    // [T-Up#INFO][DFHAID.cpy, LINE #2] DFHAID (level: 1)
    private @Getter @Setter Cousr00cDfhaid dfhaid = new Cousr00cDfhaid();
    //       *COPY DFHBMSCA.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/.default/DFHBMSCA.cpy)
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #2] DFHBMSCA (level: 1)
    private @Getter @Setter Cousr00cDfhbmsca dfhbmsca = new Cousr00cDfhbmsca();
    // *----------------------------------------------------------------*
    // *                        LINKAGE SECTION                          
    // *----------------------------------------------------------------*
    // [T-Up#INFO][COUSR00C.cbl, LINE #90] DFHCOMMAREA (level: 1)
    private @Getter @Setter Cousr00cDfhcommarea dfhcommarea = new Cousr00cDfhcommarea();

    public static @Setter(AccessLevel.PRIVATE) @Accessors(chain = true) class Cousr00cCousr0ao {
        // [T-Up#INFO][COUSR00.CPY, LINE #375] FILLER (level: 2)
        private @Getter String OFFILLER1 = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COUSR00.CPY, LINE #376] FILLER (level: 2)
        private @Getter String OFFILLER2 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #377] TRNNAMEC (level: 2)
        private @Getter String trnnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #378] TRNNAMEP (level: 2)
        private @Getter String trnnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #379] TRNNAMEH (level: 2)
        private @Getter String trnnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #380] TRNNAMEV (level: 2)
        private @Getter String trnnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #381] TRNNAMEO (level: 2)
        private @Getter String trnnameo = StringUtils.repeat(' ', 4);
        // [T-Up#INFO][COUSR00.CPY, LINE #382] FILLER (level: 2)
        private @Getter String OFFILLER3 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #383] TITLE01C (level: 2)
        private @Getter String title01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #384] TITLE01P (level: 2)
        private @Getter String title01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #385] TITLE01H (level: 2)
        private @Getter String title01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #386] TITLE01V (level: 2)
        private @Getter String title01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #387] TITLE01O (level: 2)
        private @Getter String title01o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COUSR00.CPY, LINE #388] FILLER (level: 2)
        private @Getter String OFFILLER4 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #389] CURDATEC (level: 2)
        private @Getter String curdatec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #390] CURDATEP (level: 2)
        private @Getter String curdatep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #391] CURDATEH (level: 2)
        private @Getter String curdateh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #392] CURDATEV (level: 2)
        private @Getter String curdatev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #393] CURDATEO (level: 2)
        private @Getter String curdateo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #394] FILLER (level: 2)
        private @Getter String OFFILLER5 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #395] PGMNAMEC (level: 2)
        private @Getter String pgmnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #396] PGMNAMEP (level: 2)
        private @Getter String pgmnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #397] PGMNAMEH (level: 2)
        private @Getter String pgmnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #398] PGMNAMEV (level: 2)
        private @Getter String pgmnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #399] PGMNAMEO (level: 2)
        private @Getter String pgmnameo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #400] FILLER (level: 2)
        private @Getter String OFFILLER6 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #401] TITLE02C (level: 2)
        private @Getter String title02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #402] TITLE02P (level: 2)
        private @Getter String title02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #403] TITLE02H (level: 2)
        private @Getter String title02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #404] TITLE02V (level: 2)
        private @Getter String title02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #405] TITLE02O (level: 2)
        private @Getter String title02o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COUSR00.CPY, LINE #406] FILLER (level: 2)
        private @Getter String OFFILLER7 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #407] CURTIMEC (level: 2)
        private @Getter String curtimec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #408] CURTIMEP (level: 2)
        private @Getter String curtimep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #409] CURTIMEH (level: 2)
        private @Getter String curtimeh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #410] CURTIMEV (level: 2)
        private @Getter String curtimev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #411] CURTIMEO (level: 2)
        private @Getter String curtimeo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #412] FILLER (level: 2)
        private @Getter String OFFILLER8 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #413] PAGENUMC (level: 2)
        private @Getter String pagenumc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #414] PAGENUMP (level: 2)
        private @Getter String pagenump = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #415] PAGENUMH (level: 2)
        private @Getter String pagenumh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #416] PAGENUMV (level: 2)
        private @Getter String pagenumv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #417] PAGENUMO (level: 2)
        private @Getter String pagenumo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #418] FILLER (level: 2)
        private @Getter String OFFILLER9 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #419] USRIDINC (level: 2)
        private @Getter String usridinc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #420] USRIDINP (level: 2)
        private @Getter String usridinp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #421] USRIDINH (level: 2)
        private @Getter String usridinh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #422] USRIDINV (level: 2)
        private @Getter String usridinv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #423] USRIDINO (level: 2)
        private @Getter String usridino = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #424] FILLER (level: 2)
        private @Getter String OFFILLER10 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #425] SEL0001C (level: 2)
        private @Getter String sel0001c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #426] SEL0001P (level: 2)
        private @Getter String sel0001p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #427] SEL0001H (level: 2)
        private @Getter String sel0001h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #428] SEL0001V (level: 2)
        private @Getter String sel0001v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #429] SEL0001O (level: 2)
        private @Getter String sel0001o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #430] FILLER (level: 2)
        private @Getter String OFFILLER11 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #431] USRID01C (level: 2)
        private @Getter String usrid01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #432] USRID01P (level: 2)
        private @Getter String usrid01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #433] USRID01H (level: 2)
        private @Getter String usrid01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #434] USRID01V (level: 2)
        private @Getter String usrid01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #435] USRID01O (level: 2)
        private @Getter String usrid01o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #436] FILLER (level: 2)
        private @Getter String OFFILLER12 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #437] FNAME01C (level: 2)
        private @Getter String fname01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #438] FNAME01P (level: 2)
        private @Getter String fname01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #439] FNAME01H (level: 2)
        private @Getter String fname01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #440] FNAME01V (level: 2)
        private @Getter String fname01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #441] FNAME01O (level: 2)
        private @Getter String fname01o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #442] FILLER (level: 2)
        private @Getter String OFFILLER13 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #443] LNAME01C (level: 2)
        private @Getter String lname01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #444] LNAME01P (level: 2)
        private @Getter String lname01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #445] LNAME01H (level: 2)
        private @Getter String lname01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #446] LNAME01V (level: 2)
        private @Getter String lname01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #447] LNAME01O (level: 2)
        private @Getter String lname01o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #448] FILLER (level: 2)
        private @Getter String OFFILLER14 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #449] UTYPE01C (level: 2)
        private @Getter String utype01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #450] UTYPE01P (level: 2)
        private @Getter String utype01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #451] UTYPE01H (level: 2)
        private @Getter String utype01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #452] UTYPE01V (level: 2)
        private @Getter String utype01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #453] UTYPE01O (level: 2)
        private @Getter String utype01o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #454] FILLER (level: 2)
        private @Getter String OFFILLER15 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #455] SEL0002C (level: 2)
        private @Getter String sel0002c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #456] SEL0002P (level: 2)
        private @Getter String sel0002p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #457] SEL0002H (level: 2)
        private @Getter String sel0002h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #458] SEL0002V (level: 2)
        private @Getter String sel0002v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #459] SEL0002O (level: 2)
        private @Getter String sel0002o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #460] FILLER (level: 2)
        private @Getter String OFFILLER16 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #461] USRID02C (level: 2)
        private @Getter String usrid02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #462] USRID02P (level: 2)
        private @Getter String usrid02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #463] USRID02H (level: 2)
        private @Getter String usrid02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #464] USRID02V (level: 2)
        private @Getter String usrid02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #465] USRID02O (level: 2)
        private @Getter String usrid02o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #466] FILLER (level: 2)
        private @Getter String OFFILLER17 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #467] FNAME02C (level: 2)
        private @Getter String fname02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #468] FNAME02P (level: 2)
        private @Getter String fname02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #469] FNAME02H (level: 2)
        private @Getter String fname02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #470] FNAME02V (level: 2)
        private @Getter String fname02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #471] FNAME02O (level: 2)
        private @Getter String fname02o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #472] FILLER (level: 2)
        private @Getter String OFFILLER18 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #473] LNAME02C (level: 2)
        private @Getter String lname02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #474] LNAME02P (level: 2)
        private @Getter String lname02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #475] LNAME02H (level: 2)
        private @Getter String lname02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #476] LNAME02V (level: 2)
        private @Getter String lname02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #477] LNAME02O (level: 2)
        private @Getter String lname02o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #478] FILLER (level: 2)
        private @Getter String OFFILLER19 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #479] UTYPE02C (level: 2)
        private @Getter String utype02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #480] UTYPE02P (level: 2)
        private @Getter String utype02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #481] UTYPE02H (level: 2)
        private @Getter String utype02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #482] UTYPE02V (level: 2)
        private @Getter String utype02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #483] UTYPE02O (level: 2)
        private @Getter String utype02o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #484] FILLER (level: 2)
        private @Getter String OFFILLER20 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #485] SEL0003C (level: 2)
        private @Getter String sel0003c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #486] SEL0003P (level: 2)
        private @Getter String sel0003p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #487] SEL0003H (level: 2)
        private @Getter String sel0003h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #488] SEL0003V (level: 2)
        private @Getter String sel0003v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #489] SEL0003O (level: 2)
        private @Getter String sel0003o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #490] FILLER (level: 2)
        private @Getter String OFFILLER21 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #491] USRID03C (level: 2)
        private @Getter String usrid03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #492] USRID03P (level: 2)
        private @Getter String usrid03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #493] USRID03H (level: 2)
        private @Getter String usrid03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #494] USRID03V (level: 2)
        private @Getter String usrid03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #495] USRID03O (level: 2)
        private @Getter String usrid03o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #496] FILLER (level: 2)
        private @Getter String OFFILLER22 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #497] FNAME03C (level: 2)
        private @Getter String fname03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #498] FNAME03P (level: 2)
        private @Getter String fname03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #499] FNAME03H (level: 2)
        private @Getter String fname03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #500] FNAME03V (level: 2)
        private @Getter String fname03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #501] FNAME03O (level: 2)
        private @Getter String fname03o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #502] FILLER (level: 2)
        private @Getter String OFFILLER23 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #503] LNAME03C (level: 2)
        private @Getter String lname03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #504] LNAME03P (level: 2)
        private @Getter String lname03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #505] LNAME03H (level: 2)
        private @Getter String lname03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #506] LNAME03V (level: 2)
        private @Getter String lname03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #507] LNAME03O (level: 2)
        private @Getter String lname03o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #508] FILLER (level: 2)
        private @Getter String OFFILLER24 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #509] UTYPE03C (level: 2)
        private @Getter String utype03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #510] UTYPE03P (level: 2)
        private @Getter String utype03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #511] UTYPE03H (level: 2)
        private @Getter String utype03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #512] UTYPE03V (level: 2)
        private @Getter String utype03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #513] UTYPE03O (level: 2)
        private @Getter String utype03o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #514] FILLER (level: 2)
        private @Getter String OFFILLER25 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #515] SEL0004C (level: 2)
        private @Getter String sel0004c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #516] SEL0004P (level: 2)
        private @Getter String sel0004p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #517] SEL0004H (level: 2)
        private @Getter String sel0004h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #518] SEL0004V (level: 2)
        private @Getter String sel0004v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #519] SEL0004O (level: 2)
        private @Getter String sel0004o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #520] FILLER (level: 2)
        private @Getter String OFFILLER26 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #521] USRID04C (level: 2)
        private @Getter String usrid04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #522] USRID04P (level: 2)
        private @Getter String usrid04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #523] USRID04H (level: 2)
        private @Getter String usrid04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #524] USRID04V (level: 2)
        private @Getter String usrid04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #525] USRID04O (level: 2)
        private @Getter String usrid04o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #526] FILLER (level: 2)
        private @Getter String OFFILLER27 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #527] FNAME04C (level: 2)
        private @Getter String fname04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #528] FNAME04P (level: 2)
        private @Getter String fname04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #529] FNAME04H (level: 2)
        private @Getter String fname04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #530] FNAME04V (level: 2)
        private @Getter String fname04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #531] FNAME04O (level: 2)
        private @Getter String fname04o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #532] FILLER (level: 2)
        private @Getter String OFFILLER28 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #533] LNAME04C (level: 2)
        private @Getter String lname04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #534] LNAME04P (level: 2)
        private @Getter String lname04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #535] LNAME04H (level: 2)
        private @Getter String lname04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #536] LNAME04V (level: 2)
        private @Getter String lname04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #537] LNAME04O (level: 2)
        private @Getter String lname04o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #538] FILLER (level: 2)
        private @Getter String OFFILLER29 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #539] UTYPE04C (level: 2)
        private @Getter String utype04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #540] UTYPE04P (level: 2)
        private @Getter String utype04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #541] UTYPE04H (level: 2)
        private @Getter String utype04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #542] UTYPE04V (level: 2)
        private @Getter String utype04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #543] UTYPE04O (level: 2)
        private @Getter String utype04o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #544] FILLER (level: 2)
        private @Getter String OFFILLER30 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #545] SEL0005C (level: 2)
        private @Getter String sel0005c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #546] SEL0005P (level: 2)
        private @Getter String sel0005p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #547] SEL0005H (level: 2)
        private @Getter String sel0005h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #548] SEL0005V (level: 2)
        private @Getter String sel0005v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #549] SEL0005O (level: 2)
        private @Getter String sel0005o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #550] FILLER (level: 2)
        private @Getter String OFFILLER31 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #551] USRID05C (level: 2)
        private @Getter String usrid05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #552] USRID05P (level: 2)
        private @Getter String usrid05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #553] USRID05H (level: 2)
        private @Getter String usrid05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #554] USRID05V (level: 2)
        private @Getter String usrid05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #555] USRID05O (level: 2)
        private @Getter String usrid05o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #556] FILLER (level: 2)
        private @Getter String OFFILLER32 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #557] FNAME05C (level: 2)
        private @Getter String fname05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #558] FNAME05P (level: 2)
        private @Getter String fname05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #559] FNAME05H (level: 2)
        private @Getter String fname05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #560] FNAME05V (level: 2)
        private @Getter String fname05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #561] FNAME05O (level: 2)
        private @Getter String fname05o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #562] FILLER (level: 2)
        private @Getter String OFFILLER33 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #563] LNAME05C (level: 2)
        private @Getter String lname05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #564] LNAME05P (level: 2)
        private @Getter String lname05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #565] LNAME05H (level: 2)
        private @Getter String lname05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #566] LNAME05V (level: 2)
        private @Getter String lname05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #567] LNAME05O (level: 2)
        private @Getter String lname05o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #568] FILLER (level: 2)
        private @Getter String OFFILLER34 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #569] UTYPE05C (level: 2)
        private @Getter String utype05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #570] UTYPE05P (level: 2)
        private @Getter String utype05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #571] UTYPE05H (level: 2)
        private @Getter String utype05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #572] UTYPE05V (level: 2)
        private @Getter String utype05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #573] UTYPE05O (level: 2)
        private @Getter String utype05o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #574] FILLER (level: 2)
        private @Getter String OFFILLER35 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #575] SEL0006C (level: 2)
        private @Getter String sel0006c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #576] SEL0006P (level: 2)
        private @Getter String sel0006p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #577] SEL0006H (level: 2)
        private @Getter String sel0006h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #578] SEL0006V (level: 2)
        private @Getter String sel0006v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #579] SEL0006O (level: 2)
        private @Getter String sel0006o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #580] FILLER (level: 2)
        private @Getter String OFFILLER36 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #581] USRID06C (level: 2)
        private @Getter String usrid06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #582] USRID06P (level: 2)
        private @Getter String usrid06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #583] USRID06H (level: 2)
        private @Getter String usrid06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #584] USRID06V (level: 2)
        private @Getter String usrid06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #585] USRID06O (level: 2)
        private @Getter String usrid06o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #586] FILLER (level: 2)
        private @Getter String OFFILLER37 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #587] FNAME06C (level: 2)
        private @Getter String fname06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #588] FNAME06P (level: 2)
        private @Getter String fname06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #589] FNAME06H (level: 2)
        private @Getter String fname06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #590] FNAME06V (level: 2)
        private @Getter String fname06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #591] FNAME06O (level: 2)
        private @Getter String fname06o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #592] FILLER (level: 2)
        private @Getter String OFFILLER38 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #593] LNAME06C (level: 2)
        private @Getter String lname06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #594] LNAME06P (level: 2)
        private @Getter String lname06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #595] LNAME06H (level: 2)
        private @Getter String lname06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #596] LNAME06V (level: 2)
        private @Getter String lname06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #597] LNAME06O (level: 2)
        private @Getter String lname06o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #598] FILLER (level: 2)
        private @Getter String OFFILLER39 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #599] UTYPE06C (level: 2)
        private @Getter String utype06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #600] UTYPE06P (level: 2)
        private @Getter String utype06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #601] UTYPE06H (level: 2)
        private @Getter String utype06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #602] UTYPE06V (level: 2)
        private @Getter String utype06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #603] UTYPE06O (level: 2)
        private @Getter String utype06o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #604] FILLER (level: 2)
        private @Getter String OFFILLER40 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #605] SEL0007C (level: 2)
        private @Getter String sel0007c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #606] SEL0007P (level: 2)
        private @Getter String sel0007p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #607] SEL0007H (level: 2)
        private @Getter String sel0007h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #608] SEL0007V (level: 2)
        private @Getter String sel0007v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #609] SEL0007O (level: 2)
        private @Getter String sel0007o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #610] FILLER (level: 2)
        private @Getter String OFFILLER41 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #611] USRID07C (level: 2)
        private @Getter String usrid07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #612] USRID07P (level: 2)
        private @Getter String usrid07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #613] USRID07H (level: 2)
        private @Getter String usrid07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #614] USRID07V (level: 2)
        private @Getter String usrid07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #615] USRID07O (level: 2)
        private @Getter String usrid07o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #616] FILLER (level: 2)
        private @Getter String OFFILLER42 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #617] FNAME07C (level: 2)
        private @Getter String fname07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #618] FNAME07P (level: 2)
        private @Getter String fname07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #619] FNAME07H (level: 2)
        private @Getter String fname07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #620] FNAME07V (level: 2)
        private @Getter String fname07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #621] FNAME07O (level: 2)
        private @Getter String fname07o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #622] FILLER (level: 2)
        private @Getter String OFFILLER43 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #623] LNAME07C (level: 2)
        private @Getter String lname07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #624] LNAME07P (level: 2)
        private @Getter String lname07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #625] LNAME07H (level: 2)
        private @Getter String lname07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #626] LNAME07V (level: 2)
        private @Getter String lname07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #627] LNAME07O (level: 2)
        private @Getter String lname07o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #628] FILLER (level: 2)
        private @Getter String OFFILLER44 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #629] UTYPE07C (level: 2)
        private @Getter String utype07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #630] UTYPE07P (level: 2)
        private @Getter String utype07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #631] UTYPE07H (level: 2)
        private @Getter String utype07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #632] UTYPE07V (level: 2)
        private @Getter String utype07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #633] UTYPE07O (level: 2)
        private @Getter String utype07o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #634] FILLER (level: 2)
        private @Getter String OFFILLER45 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #635] SEL0008C (level: 2)
        private @Getter String sel0008c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #636] SEL0008P (level: 2)
        private @Getter String sel0008p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #637] SEL0008H (level: 2)
        private @Getter String sel0008h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #638] SEL0008V (level: 2)
        private @Getter String sel0008v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #639] SEL0008O (level: 2)
        private @Getter String sel0008o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #640] FILLER (level: 2)
        private @Getter String OFFILLER46 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #641] USRID08C (level: 2)
        private @Getter String usrid08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #642] USRID08P (level: 2)
        private @Getter String usrid08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #643] USRID08H (level: 2)
        private @Getter String usrid08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #644] USRID08V (level: 2)
        private @Getter String usrid08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #645] USRID08O (level: 2)
        private @Getter String usrid08o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #646] FILLER (level: 2)
        private @Getter String OFFILLER47 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #647] FNAME08C (level: 2)
        private @Getter String fname08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #648] FNAME08P (level: 2)
        private @Getter String fname08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #649] FNAME08H (level: 2)
        private @Getter String fname08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #650] FNAME08V (level: 2)
        private @Getter String fname08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #651] FNAME08O (level: 2)
        private @Getter String fname08o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #652] FILLER (level: 2)
        private @Getter String OFFILLER48 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #653] LNAME08C (level: 2)
        private @Getter String lname08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #654] LNAME08P (level: 2)
        private @Getter String lname08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #655] LNAME08H (level: 2)
        private @Getter String lname08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #656] LNAME08V (level: 2)
        private @Getter String lname08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #657] LNAME08O (level: 2)
        private @Getter String lname08o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #658] FILLER (level: 2)
        private @Getter String OFFILLER49 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #659] UTYPE08C (level: 2)
        private @Getter String utype08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #660] UTYPE08P (level: 2)
        private @Getter String utype08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #661] UTYPE08H (level: 2)
        private @Getter String utype08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #662] UTYPE08V (level: 2)
        private @Getter String utype08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #663] UTYPE08O (level: 2)
        private @Getter String utype08o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #664] FILLER (level: 2)
        private @Getter String OFFILLER50 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #665] SEL0009C (level: 2)
        private @Getter String sel0009c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #666] SEL0009P (level: 2)
        private @Getter String sel0009p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #667] SEL0009H (level: 2)
        private @Getter String sel0009h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #668] SEL0009V (level: 2)
        private @Getter String sel0009v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #669] SEL0009O (level: 2)
        private @Getter String sel0009o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #670] FILLER (level: 2)
        private @Getter String OFFILLER51 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #671] USRID09C (level: 2)
        private @Getter String usrid09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #672] USRID09P (level: 2)
        private @Getter String usrid09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #673] USRID09H (level: 2)
        private @Getter String usrid09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #674] USRID09V (level: 2)
        private @Getter String usrid09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #675] USRID09O (level: 2)
        private @Getter String usrid09o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #676] FILLER (level: 2)
        private @Getter String OFFILLER52 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #677] FNAME09C (level: 2)
        private @Getter String fname09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #678] FNAME09P (level: 2)
        private @Getter String fname09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #679] FNAME09H (level: 2)
        private @Getter String fname09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #680] FNAME09V (level: 2)
        private @Getter String fname09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #681] FNAME09O (level: 2)
        private @Getter String fname09o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #682] FILLER (level: 2)
        private @Getter String OFFILLER53 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #683] LNAME09C (level: 2)
        private @Getter String lname09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #684] LNAME09P (level: 2)
        private @Getter String lname09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #685] LNAME09H (level: 2)
        private @Getter String lname09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #686] LNAME09V (level: 2)
        private @Getter String lname09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #687] LNAME09O (level: 2)
        private @Getter String lname09o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #688] FILLER (level: 2)
        private @Getter String OFFILLER54 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #689] UTYPE09C (level: 2)
        private @Getter String utype09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #690] UTYPE09P (level: 2)
        private @Getter String utype09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #691] UTYPE09H (level: 2)
        private @Getter String utype09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #692] UTYPE09V (level: 2)
        private @Getter String utype09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #693] UTYPE09O (level: 2)
        private @Getter String utype09o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #694] FILLER (level: 2)
        private @Getter String OFFILLER55 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #695] SEL0010C (level: 2)
        private @Getter String sel0010c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #696] SEL0010P (level: 2)
        private @Getter String sel0010p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #697] SEL0010H (level: 2)
        private @Getter String sel0010h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #698] SEL0010V (level: 2)
        private @Getter String sel0010v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #699] SEL0010O (level: 2)
        private @Getter String sel0010o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #700] FILLER (level: 2)
        private @Getter String OFFILLER56 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #701] USRID10C (level: 2)
        private @Getter String usrid10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #702] USRID10P (level: 2)
        private @Getter String usrid10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #703] USRID10H (level: 2)
        private @Getter String usrid10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #704] USRID10V (level: 2)
        private @Getter String usrid10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #705] USRID10O (level: 2)
        private @Getter String usrid10o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COUSR00.CPY, LINE #706] FILLER (level: 2)
        private @Getter String OFFILLER57 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #707] FNAME10C (level: 2)
        private @Getter String fname10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #708] FNAME10P (level: 2)
        private @Getter String fname10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #709] FNAME10H (level: 2)
        private @Getter String fname10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #710] FNAME10V (level: 2)
        private @Getter String fname10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #711] FNAME10O (level: 2)
        private @Getter String fname10o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #712] FILLER (level: 2)
        private @Getter String OFFILLER58 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #713] LNAME10C (level: 2)
        private @Getter String lname10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #714] LNAME10P (level: 2)
        private @Getter String lname10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #715] LNAME10H (level: 2)
        private @Getter String lname10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #716] LNAME10V (level: 2)
        private @Getter String lname10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #717] LNAME10O (level: 2)
        private @Getter String lname10o = StringUtils.repeat(' ', 20);
        // [T-Up#INFO][COUSR00.CPY, LINE #718] FILLER (level: 2)
        private @Getter String OFFILLER59 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #719] UTYPE10C (level: 2)
        private @Getter String utype10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #720] UTYPE10P (level: 2)
        private @Getter String utype10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #721] UTYPE10H (level: 2)
        private @Getter String utype10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #722] UTYPE10V (level: 2)
        private @Getter String utype10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #723] UTYPE10O (level: 2)
        private @Getter String utype10o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #724] FILLER (level: 2)
        private @Getter String OFFILLER60 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COUSR00.CPY, LINE #725] ERRMSGC (level: 2)
        private @Getter String errmsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #726] ERRMSGP (level: 2)
        private @Getter String errmsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #727] ERRMSGH (level: 2)
        private @Getter String errmsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #728] ERRMSGV (level: 2)
        private @Getter String errmsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COUSR00.CPY, LINE #729] ERRMSGO (level: 2)
        private @Getter String errmsgo = StringUtils.repeat(' ', 78);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(OFFILLER2);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(OFFILLER3);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(OFFILLER4);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(OFFILLER5);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(OFFILLER6);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(OFFILLER7);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(OFFILLER8);
            sb.append(pagenumc);
            sb.append(pagenump);
            sb.append(pagenumh);
            sb.append(pagenumv);
            sb.append(pagenumo);
            sb.append(OFFILLER9);
            sb.append(usridinc);
            sb.append(usridinp);
            sb.append(usridinh);
            sb.append(usridinv);
            sb.append(usridino);
            sb.append(OFFILLER10);
            sb.append(sel0001c);
            sb.append(sel0001p);
            sb.append(sel0001h);
            sb.append(sel0001v);
            sb.append(sel0001o);
            sb.append(OFFILLER11);
            sb.append(usrid01c);
            sb.append(usrid01p);
            sb.append(usrid01h);
            sb.append(usrid01v);
            sb.append(usrid01o);
            sb.append(OFFILLER12);
            sb.append(fname01c);
            sb.append(fname01p);
            sb.append(fname01h);
            sb.append(fname01v);
            sb.append(fname01o);
            sb.append(OFFILLER13);
            sb.append(lname01c);
            sb.append(lname01p);
            sb.append(lname01h);
            sb.append(lname01v);
            sb.append(lname01o);
            sb.append(OFFILLER14);
            sb.append(utype01c);
            sb.append(utype01p);
            sb.append(utype01h);
            sb.append(utype01v);
            sb.append(utype01o);
            sb.append(OFFILLER15);
            sb.append(sel0002c);
            sb.append(sel0002p);
            sb.append(sel0002h);
            sb.append(sel0002v);
            sb.append(sel0002o);
            sb.append(OFFILLER16);
            sb.append(usrid02c);
            sb.append(usrid02p);
            sb.append(usrid02h);
            sb.append(usrid02v);
            sb.append(usrid02o);
            sb.append(OFFILLER17);
            sb.append(fname02c);
            sb.append(fname02p);
            sb.append(fname02h);
            sb.append(fname02v);
            sb.append(fname02o);
            sb.append(OFFILLER18);
            sb.append(lname02c);
            sb.append(lname02p);
            sb.append(lname02h);
            sb.append(lname02v);
            sb.append(lname02o);
            sb.append(OFFILLER19);
            sb.append(utype02c);
            sb.append(utype02p);
            sb.append(utype02h);
            sb.append(utype02v);
            sb.append(utype02o);
            sb.append(OFFILLER20);
            sb.append(sel0003c);
            sb.append(sel0003p);
            sb.append(sel0003h);
            sb.append(sel0003v);
            sb.append(sel0003o);
            sb.append(OFFILLER21);
            sb.append(usrid03c);
            sb.append(usrid03p);
            sb.append(usrid03h);
            sb.append(usrid03v);
            sb.append(usrid03o);
            sb.append(OFFILLER22);
            sb.append(fname03c);
            sb.append(fname03p);
            sb.append(fname03h);
            sb.append(fname03v);
            sb.append(fname03o);
            sb.append(OFFILLER23);
            sb.append(lname03c);
            sb.append(lname03p);
            sb.append(lname03h);
            sb.append(lname03v);
            sb.append(lname03o);
            sb.append(OFFILLER24);
            sb.append(utype03c);
            sb.append(utype03p);
            sb.append(utype03h);
            sb.append(utype03v);
            sb.append(utype03o);
            sb.append(OFFILLER25);
            sb.append(sel0004c);
            sb.append(sel0004p);
            sb.append(sel0004h);
            sb.append(sel0004v);
            sb.append(sel0004o);
            sb.append(OFFILLER26);
            sb.append(usrid04c);
            sb.append(usrid04p);
            sb.append(usrid04h);
            sb.append(usrid04v);
            sb.append(usrid04o);
            sb.append(OFFILLER27);
            sb.append(fname04c);
            sb.append(fname04p);
            sb.append(fname04h);
            sb.append(fname04v);
            sb.append(fname04o);
            sb.append(OFFILLER28);
            sb.append(lname04c);
            sb.append(lname04p);
            sb.append(lname04h);
            sb.append(lname04v);
            sb.append(lname04o);
            sb.append(OFFILLER29);
            sb.append(utype04c);
            sb.append(utype04p);
            sb.append(utype04h);
            sb.append(utype04v);
            sb.append(utype04o);
            sb.append(OFFILLER30);
            sb.append(sel0005c);
            sb.append(sel0005p);
            sb.append(sel0005h);
            sb.append(sel0005v);
            sb.append(sel0005o);
            sb.append(OFFILLER31);
            sb.append(usrid05c);
            sb.append(usrid05p);
            sb.append(usrid05h);
            sb.append(usrid05v);
            sb.append(usrid05o);
            sb.append(OFFILLER32);
            sb.append(fname05c);
            sb.append(fname05p);
            sb.append(fname05h);
            sb.append(fname05v);
            sb.append(fname05o);
            sb.append(OFFILLER33);
            sb.append(lname05c);
            sb.append(lname05p);
            sb.append(lname05h);
            sb.append(lname05v);
            sb.append(lname05o);
            sb.append(OFFILLER34);
            sb.append(utype05c);
            sb.append(utype05p);
            sb.append(utype05h);
            sb.append(utype05v);
            sb.append(utype05o);
            sb.append(OFFILLER35);
            sb.append(sel0006c);
            sb.append(sel0006p);
            sb.append(sel0006h);
            sb.append(sel0006v);
            sb.append(sel0006o);
            sb.append(OFFILLER36);
            sb.append(usrid06c);
            sb.append(usrid06p);
            sb.append(usrid06h);
            sb.append(usrid06v);
            sb.append(usrid06o);
            sb.append(OFFILLER37);
            sb.append(fname06c);
            sb.append(fname06p);
            sb.append(fname06h);
            sb.append(fname06v);
            sb.append(fname06o);
            sb.append(OFFILLER38);
            sb.append(lname06c);
            sb.append(lname06p);
            sb.append(lname06h);
            sb.append(lname06v);
            sb.append(lname06o);
            sb.append(OFFILLER39);
            sb.append(utype06c);
            sb.append(utype06p);
            sb.append(utype06h);
            sb.append(utype06v);
            sb.append(utype06o);
            sb.append(OFFILLER40);
            sb.append(sel0007c);
            sb.append(sel0007p);
            sb.append(sel0007h);
            sb.append(sel0007v);
            sb.append(sel0007o);
            sb.append(OFFILLER41);
            sb.append(usrid07c);
            sb.append(usrid07p);
            sb.append(usrid07h);
            sb.append(usrid07v);
            sb.append(usrid07o);
            sb.append(OFFILLER42);
            sb.append(fname07c);
            sb.append(fname07p);
            sb.append(fname07h);
            sb.append(fname07v);
            sb.append(fname07o);
            sb.append(OFFILLER43);
            sb.append(lname07c);
            sb.append(lname07p);
            sb.append(lname07h);
            sb.append(lname07v);
            sb.append(lname07o);
            sb.append(OFFILLER44);
            sb.append(utype07c);
            sb.append(utype07p);
            sb.append(utype07h);
            sb.append(utype07v);
            sb.append(utype07o);
            sb.append(OFFILLER45);
            sb.append(sel0008c);
            sb.append(sel0008p);
            sb.append(sel0008h);
            sb.append(sel0008v);
            sb.append(sel0008o);
            sb.append(OFFILLER46);
            sb.append(usrid08c);
            sb.append(usrid08p);
            sb.append(usrid08h);
            sb.append(usrid08v);
            sb.append(usrid08o);
            sb.append(OFFILLER47);
            sb.append(fname08c);
            sb.append(fname08p);
            sb.append(fname08h);
            sb.append(fname08v);
            sb.append(fname08o);
            sb.append(OFFILLER48);
            sb.append(lname08c);
            sb.append(lname08p);
            sb.append(lname08h);
            sb.append(lname08v);
            sb.append(lname08o);
            sb.append(OFFILLER49);
            sb.append(utype08c);
            sb.append(utype08p);
            sb.append(utype08h);
            sb.append(utype08v);
            sb.append(utype08o);
            sb.append(OFFILLER50);
            sb.append(sel0009c);
            sb.append(sel0009p);
            sb.append(sel0009h);
            sb.append(sel0009v);
            sb.append(sel0009o);
            sb.append(OFFILLER51);
            sb.append(usrid09c);
            sb.append(usrid09p);
            sb.append(usrid09h);
            sb.append(usrid09v);
            sb.append(usrid09o);
            sb.append(OFFILLER52);
            sb.append(fname09c);
            sb.append(fname09p);
            sb.append(fname09h);
            sb.append(fname09v);
            sb.append(fname09o);
            sb.append(OFFILLER53);
            sb.append(lname09c);
            sb.append(lname09p);
            sb.append(lname09h);
            sb.append(lname09v);
            sb.append(lname09o);
            sb.append(OFFILLER54);
            sb.append(utype09c);
            sb.append(utype09p);
            sb.append(utype09h);
            sb.append(utype09v);
            sb.append(utype09o);
            sb.append(OFFILLER55);
            sb.append(sel0010c);
            sb.append(sel0010p);
            sb.append(sel0010h);
            sb.append(sel0010v);
            sb.append(sel0010o);
            sb.append(OFFILLER56);
            sb.append(usrid10c);
            sb.append(usrid10p);
            sb.append(usrid10h);
            sb.append(usrid10v);
            sb.append(usrid10o);
            sb.append(OFFILLER57);
            sb.append(fname10c);
            sb.append(fname10p);
            sb.append(fname10h);
            sb.append(fname10v);
            sb.append(fname10o);
            sb.append(OFFILLER58);
            sb.append(lname10c);
            sb.append(lname10p);
            sb.append(lname10h);
            sb.append(lname10v);
            sb.append(lname10o);
            sb.append(OFFILLER59);
            sb.append(utype10c);
            sb.append(utype10p);
            sb.append(utype10h);
            sb.append(utype10v);
            sb.append(utype10o);
            sb.append(OFFILLER60);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(OFFILLER2);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(OFFILLER3);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(OFFILLER4);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(OFFILLER5);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(OFFILLER6);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(OFFILLER7);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(OFFILLER8);
            sb.append(pagenumc);
            sb.append(pagenump);
            sb.append(pagenumh);
            sb.append(pagenumv);
            sb.append(pagenumo);
            sb.append(OFFILLER9);
            sb.append(usridinc);
            sb.append(usridinp);
            sb.append(usridinh);
            sb.append(usridinv);
            sb.append(usridino);
            sb.append(OFFILLER10);
            sb.append(sel0001c);
            sb.append(sel0001p);
            sb.append(sel0001h);
            sb.append(sel0001v);
            sb.append(sel0001o);
            sb.append(OFFILLER11);
            sb.append(usrid01c);
            sb.append(usrid01p);
            sb.append(usrid01h);
            sb.append(usrid01v);
            sb.append(usrid01o);
            sb.append(OFFILLER12);
            sb.append(fname01c);
            sb.append(fname01p);
            sb.append(fname01h);
            sb.append(fname01v);
            sb.append(fname01o);
            sb.append(OFFILLER13);
            sb.append(lname01c);
            sb.append(lname01p);
            sb.append(lname01h);
            sb.append(lname01v);
            sb.append(lname01o);
            sb.append(OFFILLER14);
            sb.append(utype01c);
            sb.append(utype01p);
            sb.append(utype01h);
            sb.append(utype01v);
            sb.append(utype01o);
            sb.append(OFFILLER15);
            sb.append(sel0002c);
            sb.append(sel0002p);
            sb.append(sel0002h);
            sb.append(sel0002v);
            sb.append(sel0002o);
            sb.append(OFFILLER16);
            sb.append(usrid02c);
            sb.append(usrid02p);
            sb.append(usrid02h);
            sb.append(usrid02v);
            sb.append(usrid02o);
            sb.append(OFFILLER17);
            sb.append(fname02c);
            sb.append(fname02p);
            sb.append(fname02h);
            sb.append(fname02v);
            sb.append(fname02o);
            sb.append(OFFILLER18);
            sb.append(lname02c);
            sb.append(lname02p);
            sb.append(lname02h);
            sb.append(lname02v);
            sb.append(lname02o);
            sb.append(OFFILLER19);
            sb.append(utype02c);
            sb.append(utype02p);
            sb.append(utype02h);
            sb.append(utype02v);
            sb.append(utype02o);
            sb.append(OFFILLER20);
            sb.append(sel0003c);
            sb.append(sel0003p);
            sb.append(sel0003h);
            sb.append(sel0003v);
            sb.append(sel0003o);
            sb.append(OFFILLER21);
            sb.append(usrid03c);
            sb.append(usrid03p);
            sb.append(usrid03h);
            sb.append(usrid03v);
            sb.append(usrid03o);
            sb.append(OFFILLER22);
            sb.append(fname03c);
            sb.append(fname03p);
            sb.append(fname03h);
            sb.append(fname03v);
            sb.append(fname03o);
            sb.append(OFFILLER23);
            sb.append(lname03c);
            sb.append(lname03p);
            sb.append(lname03h);
            sb.append(lname03v);
            sb.append(lname03o);
            sb.append(OFFILLER24);
            sb.append(utype03c);
            sb.append(utype03p);
            sb.append(utype03h);
            sb.append(utype03v);
            sb.append(utype03o);
            sb.append(OFFILLER25);
            sb.append(sel0004c);
            sb.append(sel0004p);
            sb.append(sel0004h);
            sb.append(sel0004v);
            sb.append(sel0004o);
            sb.append(OFFILLER26);
            sb.append(usrid04c);
            sb.append(usrid04p);
            sb.append(usrid04h);
            sb.append(usrid04v);
            sb.append(usrid04o);
            sb.append(OFFILLER27);
            sb.append(fname04c);
            sb.append(fname04p);
            sb.append(fname04h);
            sb.append(fname04v);
            sb.append(fname04o);
            sb.append(OFFILLER28);
            sb.append(lname04c);
            sb.append(lname04p);
            sb.append(lname04h);
            sb.append(lname04v);
            sb.append(lname04o);
            sb.append(OFFILLER29);
            sb.append(utype04c);
            sb.append(utype04p);
            sb.append(utype04h);
            sb.append(utype04v);
            sb.append(utype04o);
            sb.append(OFFILLER30);
            sb.append(sel0005c);
            sb.append(sel0005p);
            sb.append(sel0005h);
            sb.append(sel0005v);
            sb.append(sel0005o);
            sb.append(OFFILLER31);
            sb.append(usrid05c);
            sb.append(usrid05p);
            sb.append(usrid05h);
            sb.append(usrid05v);
            sb.append(usrid05o);
            sb.append(OFFILLER32);
            sb.append(fname05c);
            sb.append(fname05p);
            sb.append(fname05h);
            sb.append(fname05v);
            sb.append(fname05o);
            sb.append(OFFILLER33);
            sb.append(lname05c);
            sb.append(lname05p);
            sb.append(lname05h);
            sb.append(lname05v);
            sb.append(lname05o);
            sb.append(OFFILLER34);
            sb.append(utype05c);
            sb.append(utype05p);
            sb.append(utype05h);
            sb.append(utype05v);
            sb.append(utype05o);
            sb.append(OFFILLER35);
            sb.append(sel0006c);
            sb.append(sel0006p);
            sb.append(sel0006h);
            sb.append(sel0006v);
            sb.append(sel0006o);
            sb.append(OFFILLER36);
            sb.append(usrid06c);
            sb.append(usrid06p);
            sb.append(usrid06h);
            sb.append(usrid06v);
            sb.append(usrid06o);
            sb.append(OFFILLER37);
            sb.append(fname06c);
            sb.append(fname06p);
            sb.append(fname06h);
            sb.append(fname06v);
            sb.append(fname06o);
            sb.append(OFFILLER38);
            sb.append(lname06c);
            sb.append(lname06p);
            sb.append(lname06h);
            sb.append(lname06v);
            sb.append(lname06o);
            sb.append(OFFILLER39);
            sb.append(utype06c);
            sb.append(utype06p);
            sb.append(utype06h);
            sb.append(utype06v);
            sb.append(utype06o);
            sb.append(OFFILLER40);
            sb.append(sel0007c);
            sb.append(sel0007p);
            sb.append(sel0007h);
            sb.append(sel0007v);
            sb.append(sel0007o);
            sb.append(OFFILLER41);
            sb.append(usrid07c);
            sb.append(usrid07p);
            sb.append(usrid07h);
            sb.append(usrid07v);
            sb.append(usrid07o);
            sb.append(OFFILLER42);
            sb.append(fname07c);
            sb.append(fname07p);
            sb.append(fname07h);
            sb.append(fname07v);
            sb.append(fname07o);
            sb.append(OFFILLER43);
            sb.append(lname07c);
            sb.append(lname07p);
            sb.append(lname07h);
            sb.append(lname07v);
            sb.append(lname07o);
            sb.append(OFFILLER44);
            sb.append(utype07c);
            sb.append(utype07p);
            sb.append(utype07h);
            sb.append(utype07v);
            sb.append(utype07o);
            sb.append(OFFILLER45);
            sb.append(sel0008c);
            sb.append(sel0008p);
            sb.append(sel0008h);
            sb.append(sel0008v);
            sb.append(sel0008o);
            sb.append(OFFILLER46);
            sb.append(usrid08c);
            sb.append(usrid08p);
            sb.append(usrid08h);
            sb.append(usrid08v);
            sb.append(usrid08o);
            sb.append(OFFILLER47);
            sb.append(fname08c);
            sb.append(fname08p);
            sb.append(fname08h);
            sb.append(fname08v);
            sb.append(fname08o);
            sb.append(OFFILLER48);
            sb.append(lname08c);
            sb.append(lname08p);
            sb.append(lname08h);
            sb.append(lname08v);
            sb.append(lname08o);
            sb.append(OFFILLER49);
            sb.append(utype08c);
            sb.append(utype08p);
            sb.append(utype08h);
            sb.append(utype08v);
            sb.append(utype08o);
            sb.append(OFFILLER50);
            sb.append(sel0009c);
            sb.append(sel0009p);
            sb.append(sel0009h);
            sb.append(sel0009v);
            sb.append(sel0009o);
            sb.append(OFFILLER51);
            sb.append(usrid09c);
            sb.append(usrid09p);
            sb.append(usrid09h);
            sb.append(usrid09v);
            sb.append(usrid09o);
            sb.append(OFFILLER52);
            sb.append(fname09c);
            sb.append(fname09p);
            sb.append(fname09h);
            sb.append(fname09v);
            sb.append(fname09o);
            sb.append(OFFILLER53);
            sb.append(lname09c);
            sb.append(lname09p);
            sb.append(lname09h);
            sb.append(lname09v);
            sb.append(lname09o);
            sb.append(OFFILLER54);
            sb.append(utype09c);
            sb.append(utype09p);
            sb.append(utype09h);
            sb.append(utype09v);
            sb.append(utype09o);
            sb.append(OFFILLER55);
            sb.append(sel0010c);
            sb.append(sel0010p);
            sb.append(sel0010h);
            sb.append(sel0010v);
            sb.append(sel0010o);
            sb.append(OFFILLER56);
            sb.append(usrid10c);
            sb.append(usrid10p);
            sb.append(usrid10h);
            sb.append(usrid10v);
            sb.append(usrid10o);
            sb.append(OFFILLER57);
            sb.append(fname10c);
            sb.append(fname10p);
            sb.append(fname10h);
            sb.append(fname10v);
            sb.append(fname10o);
            sb.append(OFFILLER58);
            sb.append(lname10c);
            sb.append(lname10p);
            sb.append(lname10h);
            sb.append(lname10v);
            sb.append(lname10o);
            sb.append(OFFILLER59);
            sb.append(utype10c);
            sb.append(utype10p);
            sb.append(utype10h);
            sb.append(utype10v);
            sb.append(utype10o);
            sb.append(OFFILLER60);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            return sb.toString();
        }
    }
}
