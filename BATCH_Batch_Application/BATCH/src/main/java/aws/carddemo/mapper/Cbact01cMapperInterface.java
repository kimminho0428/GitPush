package aws.carddemo.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import aws.carddemo.variable.group.Cbact01cFdAcctfileRec;
import aws.carddemo.dto.AwsM2CarddemoAcctdataVsamKsdsDto;
import lombok.*;
import java.math.*;
import java.util.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:54 UTC</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface Cbact01cMapperInterface {
    /** 
     * <p>Mapper class to convert data for indexed file I/O that uses only the record key</p>
     * <ul>
     * <li>source class: {@link Cbact01cFdAcctfileRec}</li>
     * <li>target class: {@link AwsM2CarddemoAcctdataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cbact01cFdAcctfileRecKeyToAwsM2CarddemoAcctdataVsamKsdsDto {
        Cbact01cFdAcctfileRecKeyToAwsM2CarddemoAcctdataVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cbact01cFdAcctfileRecKeyToAwsM2CarddemoAcctdataVsamKsdsDto.class);

        @Mapping(source = "fdAcctId", target = "acctId")
        AwsM2CarddemoAcctdataVsamKsdsDto toTarget(Cbact01cFdAcctfileRec source);
    }

    /** 
     * <p>Mapper class to convert data for file I/O</p>
     * <ul>
     * <li>source class: {@link Cbact01cFdAcctfileRec}</li>
     * <li>target class: {@link AwsM2CarddemoAcctdataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cbact01cFdAcctfileRecToAwsM2CarddemoAcctdataVsamKsdsDto {
        Cbact01cFdAcctfileRecToAwsM2CarddemoAcctdataVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cbact01cFdAcctfileRecToAwsM2CarddemoAcctdataVsamKsdsDto.class);

        @Mapping(source = "fdAcctId", target = "acctId")
        @Mapping(source = "fdAcctActiveStatus", target = "acctActiveStatus")
        @Mapping(source = "fdAcctCurrBal", target = "acctCurrBal")
        @Mapping(source = "fdAcctCreditLimit", target = "acctCreditLimit")
        @Mapping(source = "fdAcctCashCreditLimit", target = "acctCashCreditLimit")
        @Mapping(source = "fdAcctOpenDate", target = "acctOpenDate")
        @Mapping(source = "fdAcctExpiraionDate", target = "acctExpiraionDate")
        @Mapping(source = "fdAcctReissueDate", target = "acctReissueDate")
        @Mapping(source = "fdAcctCurrCycCredit", target = "acctCurrCycCredit")
        @Mapping(source = "fdAcctCurrCycDebit", target = "acctCurrCycDebit")
        @Mapping(source = "fdAcctAddrZip", target = "acctAddrZip")
        @Mapping(source = "fdAcctGroupId", target = "acctGroupId")
        @Mapping(source = "OFFILLER1", target = "filler")
        AwsM2CarddemoAcctdataVsamKsdsDto toTarget(Cbact01cFdAcctfileRec source);

        @Mapping(source = "acctId", target = "fdAcctId")
        @Mapping(source = "acctActiveStatus", target = "fdAcctActiveStatus")
        @Mapping(source = "acctCurrBal", target = "fdAcctCurrBal")
        @Mapping(source = "acctCreditLimit", target = "fdAcctCreditLimit")
        @Mapping(source = "acctCashCreditLimit", target = "fdAcctCashCreditLimit")
        @Mapping(source = "acctOpenDate", target = "fdAcctOpenDate")
        @Mapping(source = "acctExpiraionDate", target = "fdAcctExpiraionDate")
        @Mapping(source = "acctReissueDate", target = "fdAcctReissueDate")
        @Mapping(source = "acctCurrCycCredit", target = "fdAcctCurrCycCredit")
        @Mapping(source = "acctCurrCycDebit", target = "fdAcctCurrCycDebit")
        @Mapping(source = "acctAddrZip", target = "fdAcctAddrZip")
        @Mapping(source = "acctGroupId", target = "fdAcctGroupId")
        @Mapping(source = "filler", target = "OFFILLER1")
        Cbact01cFdAcctfileRec toSource(AwsM2CarddemoAcctdataVsamKsdsDto source);
    }
}
