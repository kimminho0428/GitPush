package aws.carddemo.variable;

import aws.carddemo.variable.group.*;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import lombok.*;
import lombok.experimental.Accessors;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:43 UTC</p>
 * <hr>
 * <p>Class that defines variables that defined in the data division of COBOL program</p>
 */
public class Cotrn00cVariableContainer {
    // *----------------------------------------------------------------*
    // *                     WORKING STORAGE SECTION                     
    // *----------------------------------------------------------------*
    // [T-Up#INFO][COTRN00C.cbl, LINE #35] WS-VARIABLES (level: 1)
    private @Getter @Setter Cotrn00cWsVariables wsVariables = new Cotrn00cWsVariables();
    //       *COPY COCOM01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COCOM01Y.cpy)
    // ******************************************************************
    // * Communication area for CardDemo application programs            
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COCOM01Y.cpy, LINE #20] CARDDEMO-COMMAREA (level: 1)
    private @Getter @Setter Cotrn00cCarddemoCommarea carddemoCommarea = new Cotrn00cCarddemoCommarea();
    //       *COPY COTRN00.                                                    
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COTRN00.CPY) 
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COTRN00.CPY, LINE #18] COTRN0AI (level: 1)
    private @Getter @Setter Cotrn00cCotrn0ai cotrn0ai = new Cotrn00cCotrn0ai();

    public Cotrn00cCotrn0ao getCotrn0ao() {
        return new Cotrn00cCotrn0ao().setOFFILLER1(getOFFILLER1())
                .setOFFILLER2(getOFFILLER2()).setTrnnamec(getTrnnamec())
                .setTrnnamep(getTrnnamep()).setTrnnameh(getTrnnameh())
                .setTrnnamev(getTrnnamev()).setTrnnameo(getTrnnameo())
                .setOFFILLER3(getOFFILLER3()).setTitle01c(getTitle01c())
                .setTitle01p(getTitle01p()).setTitle01h(getTitle01h())
                .setTitle01v(getTitle01v()).setTitle01o(getTitle01o())
                .setOFFILLER4(getOFFILLER4()).setCurdatec(getCurdatec())
                .setCurdatep(getCurdatep()).setCurdateh(getCurdateh())
                .setCurdatev(getCurdatev()).setCurdateo(getCurdateo())
                .setOFFILLER5(getOFFILLER5()).setPgmnamec(getPgmnamec())
                .setPgmnamep(getPgmnamep()).setPgmnameh(getPgmnameh())
                .setPgmnamev(getPgmnamev()).setPgmnameo(getPgmnameo())
                .setOFFILLER6(getOFFILLER6()).setTitle02c(getTitle02c())
                .setTitle02p(getTitle02p()).setTitle02h(getTitle02h())
                .setTitle02v(getTitle02v()).setTitle02o(getTitle02o())
                .setOFFILLER7(getOFFILLER7()).setCurtimec(getCurtimec())
                .setCurtimep(getCurtimep()).setCurtimeh(getCurtimeh())
                .setCurtimev(getCurtimev()).setCurtimeo(getCurtimeo())
                .setOFFILLER8(getOFFILLER8()).setPagenumc(getPagenumc())
                .setPagenump(getPagenump()).setPagenumh(getPagenumh())
                .setPagenumv(getPagenumv()).setPagenumo(getPagenumo())
                .setOFFILLER9(getOFFILLER9()).setTrnidinc(getTrnidinc())
                .setTrnidinp(getTrnidinp()).setTrnidinh(getTrnidinh())
                .setTrnidinv(getTrnidinv()).setTrnidino(getTrnidino())
                .setOFFILLER10(getOFFILLER10()).setSel0001c(getSel0001c())
                .setSel0001p(getSel0001p()).setSel0001h(getSel0001h())
                .setSel0001v(getSel0001v()).setSel0001o(getSel0001o())
                .setOFFILLER11(getOFFILLER11()).setTrnid01c(getTrnid01c())
                .setTrnid01p(getTrnid01p()).setTrnid01h(getTrnid01h())
                .setTrnid01v(getTrnid01v()).setTrnid01o(getTrnid01o())
                .setOFFILLER12(getOFFILLER12()).setTdate01c(getTdate01c())
                .setTdate01p(getTdate01p()).setTdate01h(getTdate01h())
                .setTdate01v(getTdate01v()).setTdate01o(getTdate01o())
                .setOFFILLER13(getOFFILLER13()).setTdesc01c(getTdesc01c())
                .setTdesc01p(getTdesc01p()).setTdesc01h(getTdesc01h())
                .setTdesc01v(getTdesc01v()).setTdesc01o(getTdesc01o())
                .setOFFILLER14(getOFFILLER14()).setTamt001c(getTamt001c())
                .setTamt001p(getTamt001p()).setTamt001h(getTamt001h())
                .setTamt001v(getTamt001v()).setTamt001o(getTamt001o())
                .setOFFILLER15(getOFFILLER15()).setSel0002c(getSel0002c())
                .setSel0002p(getSel0002p()).setSel0002h(getSel0002h())
                .setSel0002v(getSel0002v()).setSel0002o(getSel0002o())
                .setOFFILLER16(getOFFILLER16()).setTrnid02c(getTrnid02c())
                .setTrnid02p(getTrnid02p()).setTrnid02h(getTrnid02h())
                .setTrnid02v(getTrnid02v()).setTrnid02o(getTrnid02o())
                .setOFFILLER17(getOFFILLER17()).setTdate02c(getTdate02c())
                .setTdate02p(getTdate02p()).setTdate02h(getTdate02h())
                .setTdate02v(getTdate02v()).setTdate02o(getTdate02o())
                .setOFFILLER18(getOFFILLER18()).setTdesc02c(getTdesc02c())
                .setTdesc02p(getTdesc02p()).setTdesc02h(getTdesc02h())
                .setTdesc02v(getTdesc02v()).setTdesc02o(getTdesc02o())
                .setOFFILLER19(getOFFILLER19()).setTamt002c(getTamt002c())
                .setTamt002p(getTamt002p()).setTamt002h(getTamt002h())
                .setTamt002v(getTamt002v()).setTamt002o(getTamt002o())
                .setOFFILLER20(getOFFILLER20()).setSel0003c(getSel0003c())
                .setSel0003p(getSel0003p()).setSel0003h(getSel0003h())
                .setSel0003v(getSel0003v()).setSel0003o(getSel0003o())
                .setOFFILLER21(getOFFILLER21()).setTrnid03c(getTrnid03c())
                .setTrnid03p(getTrnid03p()).setTrnid03h(getTrnid03h())
                .setTrnid03v(getTrnid03v()).setTrnid03o(getTrnid03o())
                .setOFFILLER22(getOFFILLER22()).setTdate03c(getTdate03c())
                .setTdate03p(getTdate03p()).setTdate03h(getTdate03h())
                .setTdate03v(getTdate03v()).setTdate03o(getTdate03o())
                .setOFFILLER23(getOFFILLER23()).setTdesc03c(getTdesc03c())
                .setTdesc03p(getTdesc03p()).setTdesc03h(getTdesc03h())
                .setTdesc03v(getTdesc03v()).setTdesc03o(getTdesc03o())
                .setOFFILLER24(getOFFILLER24()).setTamt003c(getTamt003c())
                .setTamt003p(getTamt003p()).setTamt003h(getTamt003h())
                .setTamt003v(getTamt003v()).setTamt003o(getTamt003o())
                .setOFFILLER25(getOFFILLER25()).setSel0004c(getSel0004c())
                .setSel0004p(getSel0004p()).setSel0004h(getSel0004h())
                .setSel0004v(getSel0004v()).setSel0004o(getSel0004o())
                .setOFFILLER26(getOFFILLER26()).setTrnid04c(getTrnid04c())
                .setTrnid04p(getTrnid04p()).setTrnid04h(getTrnid04h())
                .setTrnid04v(getTrnid04v()).setTrnid04o(getTrnid04o())
                .setOFFILLER27(getOFFILLER27()).setTdate04c(getTdate04c())
                .setTdate04p(getTdate04p()).setTdate04h(getTdate04h())
                .setTdate04v(getTdate04v()).setTdate04o(getTdate04o())
                .setOFFILLER28(getOFFILLER28()).setTdesc04c(getTdesc04c())
                .setTdesc04p(getTdesc04p()).setTdesc04h(getTdesc04h())
                .setTdesc04v(getTdesc04v()).setTdesc04o(getTdesc04o())
                .setOFFILLER29(getOFFILLER29()).setTamt004c(getTamt004c())
                .setTamt004p(getTamt004p()).setTamt004h(getTamt004h())
                .setTamt004v(getTamt004v()).setTamt004o(getTamt004o())
                .setOFFILLER30(getOFFILLER30()).setSel0005c(getSel0005c())
                .setSel0005p(getSel0005p()).setSel0005h(getSel0005h())
                .setSel0005v(getSel0005v()).setSel0005o(getSel0005o())
                .setOFFILLER31(getOFFILLER31()).setTrnid05c(getTrnid05c())
                .setTrnid05p(getTrnid05p()).setTrnid05h(getTrnid05h())
                .setTrnid05v(getTrnid05v()).setTrnid05o(getTrnid05o())
                .setOFFILLER32(getOFFILLER32()).setTdate05c(getTdate05c())
                .setTdate05p(getTdate05p()).setTdate05h(getTdate05h())
                .setTdate05v(getTdate05v()).setTdate05o(getTdate05o())
                .setOFFILLER33(getOFFILLER33()).setTdesc05c(getTdesc05c())
                .setTdesc05p(getTdesc05p()).setTdesc05h(getTdesc05h())
                .setTdesc05v(getTdesc05v()).setTdesc05o(getTdesc05o())
                .setOFFILLER34(getOFFILLER34()).setTamt005c(getTamt005c())
                .setTamt005p(getTamt005p()).setTamt005h(getTamt005h())
                .setTamt005v(getTamt005v()).setTamt005o(getTamt005o())
                .setOFFILLER35(getOFFILLER35()).setSel0006c(getSel0006c())
                .setSel0006p(getSel0006p()).setSel0006h(getSel0006h())
                .setSel0006v(getSel0006v()).setSel0006o(getSel0006o())
                .setOFFILLER36(getOFFILLER36()).setTrnid06c(getTrnid06c())
                .setTrnid06p(getTrnid06p()).setTrnid06h(getTrnid06h())
                .setTrnid06v(getTrnid06v()).setTrnid06o(getTrnid06o())
                .setOFFILLER37(getOFFILLER37()).setTdate06c(getTdate06c())
                .setTdate06p(getTdate06p()).setTdate06h(getTdate06h())
                .setTdate06v(getTdate06v()).setTdate06o(getTdate06o())
                .setOFFILLER38(getOFFILLER38()).setTdesc06c(getTdesc06c())
                .setTdesc06p(getTdesc06p()).setTdesc06h(getTdesc06h())
                .setTdesc06v(getTdesc06v()).setTdesc06o(getTdesc06o())
                .setOFFILLER39(getOFFILLER39()).setTamt006c(getTamt006c())
                .setTamt006p(getTamt006p()).setTamt006h(getTamt006h())
                .setTamt006v(getTamt006v()).setTamt006o(getTamt006o())
                .setOFFILLER40(getOFFILLER40()).setSel0007c(getSel0007c())
                .setSel0007p(getSel0007p()).setSel0007h(getSel0007h())
                .setSel0007v(getSel0007v()).setSel0007o(getSel0007o())
                .setOFFILLER41(getOFFILLER41()).setTrnid07c(getTrnid07c())
                .setTrnid07p(getTrnid07p()).setTrnid07h(getTrnid07h())
                .setTrnid07v(getTrnid07v()).setTrnid07o(getTrnid07o())
                .setOFFILLER42(getOFFILLER42()).setTdate07c(getTdate07c())
                .setTdate07p(getTdate07p()).setTdate07h(getTdate07h())
                .setTdate07v(getTdate07v()).setTdate07o(getTdate07o())
                .setOFFILLER43(getOFFILLER43()).setTdesc07c(getTdesc07c())
                .setTdesc07p(getTdesc07p()).setTdesc07h(getTdesc07h())
                .setTdesc07v(getTdesc07v()).setTdesc07o(getTdesc07o())
                .setOFFILLER44(getOFFILLER44()).setTamt007c(getTamt007c())
                .setTamt007p(getTamt007p()).setTamt007h(getTamt007h())
                .setTamt007v(getTamt007v()).setTamt007o(getTamt007o())
                .setOFFILLER45(getOFFILLER45()).setSel0008c(getSel0008c())
                .setSel0008p(getSel0008p()).setSel0008h(getSel0008h())
                .setSel0008v(getSel0008v()).setSel0008o(getSel0008o())
                .setOFFILLER46(getOFFILLER46()).setTrnid08c(getTrnid08c())
                .setTrnid08p(getTrnid08p()).setTrnid08h(getTrnid08h())
                .setTrnid08v(getTrnid08v()).setTrnid08o(getTrnid08o())
                .setOFFILLER47(getOFFILLER47()).setTdate08c(getTdate08c())
                .setTdate08p(getTdate08p()).setTdate08h(getTdate08h())
                .setTdate08v(getTdate08v()).setTdate08o(getTdate08o())
                .setOFFILLER48(getOFFILLER48()).setTdesc08c(getTdesc08c())
                .setTdesc08p(getTdesc08p()).setTdesc08h(getTdesc08h())
                .setTdesc08v(getTdesc08v()).setTdesc08o(getTdesc08o())
                .setOFFILLER49(getOFFILLER49()).setTamt008c(getTamt008c())
                .setTamt008p(getTamt008p()).setTamt008h(getTamt008h())
                .setTamt008v(getTamt008v()).setTamt008o(getTamt008o())
                .setOFFILLER50(getOFFILLER50()).setSel0009c(getSel0009c())
                .setSel0009p(getSel0009p()).setSel0009h(getSel0009h())
                .setSel0009v(getSel0009v()).setSel0009o(getSel0009o())
                .setOFFILLER51(getOFFILLER51()).setTrnid09c(getTrnid09c())
                .setTrnid09p(getTrnid09p()).setTrnid09h(getTrnid09h())
                .setTrnid09v(getTrnid09v()).setTrnid09o(getTrnid09o())
                .setOFFILLER52(getOFFILLER52()).setTdate09c(getTdate09c())
                .setTdate09p(getTdate09p()).setTdate09h(getTdate09h())
                .setTdate09v(getTdate09v()).setTdate09o(getTdate09o())
                .setOFFILLER53(getOFFILLER53()).setTdesc09c(getTdesc09c())
                .setTdesc09p(getTdesc09p()).setTdesc09h(getTdesc09h())
                .setTdesc09v(getTdesc09v()).setTdesc09o(getTdesc09o())
                .setOFFILLER54(getOFFILLER54()).setTamt009c(getTamt009c())
                .setTamt009p(getTamt009p()).setTamt009h(getTamt009h())
                .setTamt009v(getTamt009v()).setTamt009o(getTamt009o())
                .setOFFILLER55(getOFFILLER55()).setSel0010c(getSel0010c())
                .setSel0010p(getSel0010p()).setSel0010h(getSel0010h())
                .setSel0010v(getSel0010v()).setSel0010o(getSel0010o())
                .setOFFILLER56(getOFFILLER56()).setTrnid10c(getTrnid10c())
                .setTrnid10p(getTrnid10p()).setTrnid10h(getTrnid10h())
                .setTrnid10v(getTrnid10v()).setTrnid10o(getTrnid10o())
                .setOFFILLER57(getOFFILLER57()).setTdate10c(getTdate10c())
                .setTdate10p(getTdate10p()).setTdate10h(getTdate10h())
                .setTdate10v(getTdate10v()).setTdate10o(getTdate10o())
                .setOFFILLER58(getOFFILLER58()).setTdesc10c(getTdesc10c())
                .setTdesc10p(getTdesc10p()).setTdesc10h(getTdesc10h())
                .setTdesc10v(getTdesc10v()).setTdesc10o(getTdesc10o())
                .setOFFILLER59(getOFFILLER59()).setTamt010c(getTamt010c())
                .setTamt010p(getTamt010p()).setTamt010h(getTamt010h())
                .setTamt010v(getTamt010v()).setTamt010o(getTamt010o())
                .setOFFILLER60(getOFFILLER60()).setErrmsgc(getErrmsgc())
                .setErrmsgp(getErrmsgp()).setErrmsgh(getErrmsgh())
                .setErrmsgv(getErrmsgv()).setErrmsgo(getErrmsgo());
    }

    public void setCotrn0ao(String source) {
        setOFFILLER1(source.substring(0, 12));
        setOFFILLER2(source.substring(12, 15));
        setTrnnamec(source.substring(15, 16));
        setTrnnamep(source.substring(16, 17));
        setTrnnameh(source.substring(17, 18));
        setTrnnamev(source.substring(18, 19));
        setTrnnameo(source.substring(19, 23));
        setOFFILLER3(source.substring(23, 26));
        setTitle01c(source.substring(26, 27));
        setTitle01p(source.substring(27, 28));
        setTitle01h(source.substring(28, 29));
        setTitle01v(source.substring(29, 30));
        setTitle01o(source.substring(30, 70));
        setOFFILLER4(source.substring(70, 73));
        setCurdatec(source.substring(73, 74));
        setCurdatep(source.substring(74, 75));
        setCurdateh(source.substring(75, 76));
        setCurdatev(source.substring(76, 77));
        setCurdateo(source.substring(77, 85));
        setOFFILLER5(source.substring(85, 88));
        setPgmnamec(source.substring(88, 89));
        setPgmnamep(source.substring(89, 90));
        setPgmnameh(source.substring(90, 91));
        setPgmnamev(source.substring(91, 92));
        setPgmnameo(source.substring(92, 100));
        setOFFILLER6(source.substring(100, 103));
        setTitle02c(source.substring(103, 104));
        setTitle02p(source.substring(104, 105));
        setTitle02h(source.substring(105, 106));
        setTitle02v(source.substring(106, 107));
        setTitle02o(source.substring(107, 147));
        setOFFILLER7(source.substring(147, 150));
        setCurtimec(source.substring(150, 151));
        setCurtimep(source.substring(151, 152));
        setCurtimeh(source.substring(152, 153));
        setCurtimev(source.substring(153, 154));
        setCurtimeo(source.substring(154, 162));
        setOFFILLER8(source.substring(162, 165));
        setPagenumc(source.substring(165, 166));
        setPagenump(source.substring(166, 167));
        setPagenumh(source.substring(167, 168));
        setPagenumv(source.substring(168, 169));
        setPagenumo(source.substring(169, 177));
        setOFFILLER9(source.substring(177, 180));
        setTrnidinc(source.substring(180, 181));
        setTrnidinp(source.substring(181, 182));
        setTrnidinh(source.substring(182, 183));
        setTrnidinv(source.substring(183, 184));
        setTrnidino(source.substring(184, 200));
        setOFFILLER10(source.substring(200, 203));
        setSel0001c(source.substring(203, 204));
        setSel0001p(source.substring(204, 205));
        setSel0001h(source.substring(205, 206));
        setSel0001v(source.substring(206, 207));
        setSel0001o(source.substring(207, 208));
        setOFFILLER11(source.substring(208, 211));
        setTrnid01c(source.substring(211, 212));
        setTrnid01p(source.substring(212, 213));
        setTrnid01h(source.substring(213, 214));
        setTrnid01v(source.substring(214, 215));
        setTrnid01o(source.substring(215, 231));
        setOFFILLER12(source.substring(231, 234));
        setTdate01c(source.substring(234, 235));
        setTdate01p(source.substring(235, 236));
        setTdate01h(source.substring(236, 237));
        setTdate01v(source.substring(237, 238));
        setTdate01o(source.substring(238, 246));
        setOFFILLER13(source.substring(246, 249));
        setTdesc01c(source.substring(249, 250));
        setTdesc01p(source.substring(250, 251));
        setTdesc01h(source.substring(251, 252));
        setTdesc01v(source.substring(252, 253));
        setTdesc01o(source.substring(253, 279));
        setOFFILLER14(source.substring(279, 282));
        setTamt001c(source.substring(282, 283));
        setTamt001p(source.substring(283, 284));
        setTamt001h(source.substring(284, 285));
        setTamt001v(source.substring(285, 286));
        setTamt001o(source.substring(286, 298));
        setOFFILLER15(source.substring(298, 301));
        setSel0002c(source.substring(301, 302));
        setSel0002p(source.substring(302, 303));
        setSel0002h(source.substring(303, 304));
        setSel0002v(source.substring(304, 305));
        setSel0002o(source.substring(305, 306));
        setOFFILLER16(source.substring(306, 309));
        setTrnid02c(source.substring(309, 310));
        setTrnid02p(source.substring(310, 311));
        setTrnid02h(source.substring(311, 312));
        setTrnid02v(source.substring(312, 313));
        setTrnid02o(source.substring(313, 329));
        setOFFILLER17(source.substring(329, 332));
        setTdate02c(source.substring(332, 333));
        setTdate02p(source.substring(333, 334));
        setTdate02h(source.substring(334, 335));
        setTdate02v(source.substring(335, 336));
        setTdate02o(source.substring(336, 344));
        setOFFILLER18(source.substring(344, 347));
        setTdesc02c(source.substring(347, 348));
        setTdesc02p(source.substring(348, 349));
        setTdesc02h(source.substring(349, 350));
        setTdesc02v(source.substring(350, 351));
        setTdesc02o(source.substring(351, 377));
        setOFFILLER19(source.substring(377, 380));
        setTamt002c(source.substring(380, 381));
        setTamt002p(source.substring(381, 382));
        setTamt002h(source.substring(382, 383));
        setTamt002v(source.substring(383, 384));
        setTamt002o(source.substring(384, 396));
        setOFFILLER20(source.substring(396, 399));
        setSel0003c(source.substring(399, 400));
        setSel0003p(source.substring(400, 401));
        setSel0003h(source.substring(401, 402));
        setSel0003v(source.substring(402, 403));
        setSel0003o(source.substring(403, 404));
        setOFFILLER21(source.substring(404, 407));
        setTrnid03c(source.substring(407, 408));
        setTrnid03p(source.substring(408, 409));
        setTrnid03h(source.substring(409, 410));
        setTrnid03v(source.substring(410, 411));
        setTrnid03o(source.substring(411, 427));
        setOFFILLER22(source.substring(427, 430));
        setTdate03c(source.substring(430, 431));
        setTdate03p(source.substring(431, 432));
        setTdate03h(source.substring(432, 433));
        setTdate03v(source.substring(433, 434));
        setTdate03o(source.substring(434, 442));
        setOFFILLER23(source.substring(442, 445));
        setTdesc03c(source.substring(445, 446));
        setTdesc03p(source.substring(446, 447));
        setTdesc03h(source.substring(447, 448));
        setTdesc03v(source.substring(448, 449));
        setTdesc03o(source.substring(449, 475));
        setOFFILLER24(source.substring(475, 478));
        setTamt003c(source.substring(478, 479));
        setTamt003p(source.substring(479, 480));
        setTamt003h(source.substring(480, 481));
        setTamt003v(source.substring(481, 482));
        setTamt003o(source.substring(482, 494));
        setOFFILLER25(source.substring(494, 497));
        setSel0004c(source.substring(497, 498));
        setSel0004p(source.substring(498, 499));
        setSel0004h(source.substring(499, 500));
        setSel0004v(source.substring(500, 501));
        setSel0004o(source.substring(501, 502));
        setOFFILLER26(source.substring(502, 505));
        setTrnid04c(source.substring(505, 506));
        setTrnid04p(source.substring(506, 507));
        setTrnid04h(source.substring(507, 508));
        setTrnid04v(source.substring(508, 509));
        setTrnid04o(source.substring(509, 525));
        setOFFILLER27(source.substring(525, 528));
        setTdate04c(source.substring(528, 529));
        setTdate04p(source.substring(529, 530));
        setTdate04h(source.substring(530, 531));
        setTdate04v(source.substring(531, 532));
        setTdate04o(source.substring(532, 540));
        setOFFILLER28(source.substring(540, 543));
        setTdesc04c(source.substring(543, 544));
        setTdesc04p(source.substring(544, 545));
        setTdesc04h(source.substring(545, 546));
        setTdesc04v(source.substring(546, 547));
        setTdesc04o(source.substring(547, 573));
        setOFFILLER29(source.substring(573, 576));
        setTamt004c(source.substring(576, 577));
        setTamt004p(source.substring(577, 578));
        setTamt004h(source.substring(578, 579));
        setTamt004v(source.substring(579, 580));
        setTamt004o(source.substring(580, 592));
        setOFFILLER30(source.substring(592, 595));
        setSel0005c(source.substring(595, 596));
        setSel0005p(source.substring(596, 597));
        setSel0005h(source.substring(597, 598));
        setSel0005v(source.substring(598, 599));
        setSel0005o(source.substring(599, 600));
        setOFFILLER31(source.substring(600, 603));
        setTrnid05c(source.substring(603, 604));
        setTrnid05p(source.substring(604, 605));
        setTrnid05h(source.substring(605, 606));
        setTrnid05v(source.substring(606, 607));
        setTrnid05o(source.substring(607, 623));
        setOFFILLER32(source.substring(623, 626));
        setTdate05c(source.substring(626, 627));
        setTdate05p(source.substring(627, 628));
        setTdate05h(source.substring(628, 629));
        setTdate05v(source.substring(629, 630));
        setTdate05o(source.substring(630, 638));
        setOFFILLER33(source.substring(638, 641));
        setTdesc05c(source.substring(641, 642));
        setTdesc05p(source.substring(642, 643));
        setTdesc05h(source.substring(643, 644));
        setTdesc05v(source.substring(644, 645));
        setTdesc05o(source.substring(645, 671));
        setOFFILLER34(source.substring(671, 674));
        setTamt005c(source.substring(674, 675));
        setTamt005p(source.substring(675, 676));
        setTamt005h(source.substring(676, 677));
        setTamt005v(source.substring(677, 678));
        setTamt005o(source.substring(678, 690));
        setOFFILLER35(source.substring(690, 693));
        setSel0006c(source.substring(693, 694));
        setSel0006p(source.substring(694, 695));
        setSel0006h(source.substring(695, 696));
        setSel0006v(source.substring(696, 697));
        setSel0006o(source.substring(697, 698));
        setOFFILLER36(source.substring(698, 701));
        setTrnid06c(source.substring(701, 702));
        setTrnid06p(source.substring(702, 703));
        setTrnid06h(source.substring(703, 704));
        setTrnid06v(source.substring(704, 705));
        setTrnid06o(source.substring(705, 721));
        setOFFILLER37(source.substring(721, 724));
        setTdate06c(source.substring(724, 725));
        setTdate06p(source.substring(725, 726));
        setTdate06h(source.substring(726, 727));
        setTdate06v(source.substring(727, 728));
        setTdate06o(source.substring(728, 736));
        setOFFILLER38(source.substring(736, 739));
        setTdesc06c(source.substring(739, 740));
        setTdesc06p(source.substring(740, 741));
        setTdesc06h(source.substring(741, 742));
        setTdesc06v(source.substring(742, 743));
        setTdesc06o(source.substring(743, 769));
        setOFFILLER39(source.substring(769, 772));
        setTamt006c(source.substring(772, 773));
        setTamt006p(source.substring(773, 774));
        setTamt006h(source.substring(774, 775));
        setTamt006v(source.substring(775, 776));
        setTamt006o(source.substring(776, 788));
        setOFFILLER40(source.substring(788, 791));
        setSel0007c(source.substring(791, 792));
        setSel0007p(source.substring(792, 793));
        setSel0007h(source.substring(793, 794));
        setSel0007v(source.substring(794, 795));
        setSel0007o(source.substring(795, 796));
        setOFFILLER41(source.substring(796, 799));
        setTrnid07c(source.substring(799, 800));
        setTrnid07p(source.substring(800, 801));
        setTrnid07h(source.substring(801, 802));
        setTrnid07v(source.substring(802, 803));
        setTrnid07o(source.substring(803, 819));
        setOFFILLER42(source.substring(819, 822));
        setTdate07c(source.substring(822, 823));
        setTdate07p(source.substring(823, 824));
        setTdate07h(source.substring(824, 825));
        setTdate07v(source.substring(825, 826));
        setTdate07o(source.substring(826, 834));
        setOFFILLER43(source.substring(834, 837));
        setTdesc07c(source.substring(837, 838));
        setTdesc07p(source.substring(838, 839));
        setTdesc07h(source.substring(839, 840));
        setTdesc07v(source.substring(840, 841));
        setTdesc07o(source.substring(841, 867));
        setOFFILLER44(source.substring(867, 870));
        setTamt007c(source.substring(870, 871));
        setTamt007p(source.substring(871, 872));
        setTamt007h(source.substring(872, 873));
        setTamt007v(source.substring(873, 874));
        setTamt007o(source.substring(874, 886));
        setOFFILLER45(source.substring(886, 889));
        setSel0008c(source.substring(889, 890));
        setSel0008p(source.substring(890, 891));
        setSel0008h(source.substring(891, 892));
        setSel0008v(source.substring(892, 893));
        setSel0008o(source.substring(893, 894));
        setOFFILLER46(source.substring(894, 897));
        setTrnid08c(source.substring(897, 898));
        setTrnid08p(source.substring(898, 899));
        setTrnid08h(source.substring(899, 900));
        setTrnid08v(source.substring(900, 901));
        setTrnid08o(source.substring(901, 917));
        setOFFILLER47(source.substring(917, 920));
        setTdate08c(source.substring(920, 921));
        setTdate08p(source.substring(921, 922));
        setTdate08h(source.substring(922, 923));
        setTdate08v(source.substring(923, 924));
        setTdate08o(source.substring(924, 932));
        setOFFILLER48(source.substring(932, 935));
        setTdesc08c(source.substring(935, 936));
        setTdesc08p(source.substring(936, 937));
        setTdesc08h(source.substring(937, 938));
        setTdesc08v(source.substring(938, 939));
        setTdesc08o(source.substring(939, 965));
        setOFFILLER49(source.substring(965, 968));
        setTamt008c(source.substring(968, 969));
        setTamt008p(source.substring(969, 970));
        setTamt008h(source.substring(970, 971));
        setTamt008v(source.substring(971, 972));
        setTamt008o(source.substring(972, 984));
        setOFFILLER50(source.substring(984, 987));
        setSel0009c(source.substring(987, 988));
        setSel0009p(source.substring(988, 989));
        setSel0009h(source.substring(989, 990));
        setSel0009v(source.substring(990, 991));
        setSel0009o(source.substring(991, 992));
        setOFFILLER51(source.substring(992, 995));
        setTrnid09c(source.substring(995, 996));
        setTrnid09p(source.substring(996, 997));
        setTrnid09h(source.substring(997, 998));
        setTrnid09v(source.substring(998, 999));
        setTrnid09o(source.substring(999, 1015));
        setOFFILLER52(source.substring(1015, 1018));
        setTdate09c(source.substring(1018, 1019));
        setTdate09p(source.substring(1019, 1020));
        setTdate09h(source.substring(1020, 1021));
        setTdate09v(source.substring(1021, 1022));
        setTdate09o(source.substring(1022, 1030));
        setOFFILLER53(source.substring(1030, 1033));
        setTdesc09c(source.substring(1033, 1034));
        setTdesc09p(source.substring(1034, 1035));
        setTdesc09h(source.substring(1035, 1036));
        setTdesc09v(source.substring(1036, 1037));
        setTdesc09o(source.substring(1037, 1063));
        setOFFILLER54(source.substring(1063, 1066));
        setTamt009c(source.substring(1066, 1067));
        setTamt009p(source.substring(1067, 1068));
        setTamt009h(source.substring(1068, 1069));
        setTamt009v(source.substring(1069, 1070));
        setTamt009o(source.substring(1070, 1082));
        setOFFILLER55(source.substring(1082, 1085));
        setSel0010c(source.substring(1085, 1086));
        setSel0010p(source.substring(1086, 1087));
        setSel0010h(source.substring(1087, 1088));
        setSel0010v(source.substring(1088, 1089));
        setSel0010o(source.substring(1089, 1090));
        setOFFILLER56(source.substring(1090, 1093));
        setTrnid10c(source.substring(1093, 1094));
        setTrnid10p(source.substring(1094, 1095));
        setTrnid10h(source.substring(1095, 1096));
        setTrnid10v(source.substring(1096, 1097));
        setTrnid10o(source.substring(1097, 1113));
        setOFFILLER57(source.substring(1113, 1116));
        setTdate10c(source.substring(1116, 1117));
        setTdate10p(source.substring(1117, 1118));
        setTdate10h(source.substring(1118, 1119));
        setTdate10v(source.substring(1119, 1120));
        setTdate10o(source.substring(1120, 1128));
        setOFFILLER58(source.substring(1128, 1131));
        setTdesc10c(source.substring(1131, 1132));
        setTdesc10p(source.substring(1132, 1133));
        setTdesc10h(source.substring(1133, 1134));
        setTdesc10v(source.substring(1134, 1135));
        setTdesc10o(source.substring(1135, 1161));
        setOFFILLER59(source.substring(1161, 1164));
        setTamt010c(source.substring(1164, 1165));
        setTamt010p(source.substring(1165, 1166));
        setTamt010h(source.substring(1166, 1167));
        setTamt010v(source.substring(1167, 1168));
        setTamt010o(source.substring(1168, 1180));
        setOFFILLER60(source.substring(1180, 1183));
        setErrmsgc(source.substring(1183, 1184));
        setErrmsgp(source.substring(1184, 1185));
        setErrmsgh(source.substring(1185, 1186));
        setErrmsgv(source.substring(1186, 1187));
        setErrmsgo(source.substring(1187, 1265));
    }

    public void setCotrn0ao(Cotrn00cCotrn0ao source) {
        setCotrn0ao(source.toString());
    }

    public String getOFFILLER1() {
        return getCotrn0ai().getOFFILLER1();
    }

    public void setOFFILLER1(String source) {
        getCotrn0ai().setOFFILLER1(source);
    }

    public String getOFFILLER2() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnnamel());
        tempByteBuffer1.flip();
        String temp1 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp1 + getCotrn0ai().getTrnnamef();
    }

    public void setOFFILLER2(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnnamel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnnamel(0);
        }
    }

    public String getTrnnamec() {
        return getCotrn0ai().getOFFILLER3().substring(0, 1);
    }

    public void setTrnnamec(String source) {
        getCotrn0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER3(),
                                source, 0, 1));
    }

    public String getTrnnamep() {
        return getCotrn0ai().getOFFILLER3().substring(1, 2);
    }

    public void setTrnnamep(String source) {
        getCotrn0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER3(),
                                source, 1, 2));
    }

    public String getTrnnameh() {
        return getCotrn0ai().getOFFILLER3().substring(2, 3);
    }

    public void setTrnnameh(String source) {
        getCotrn0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER3(),
                                source, 2, 3));
    }

    public String getTrnnamev() {
        return getCotrn0ai().getOFFILLER3().substring(3);
    }

    public void setTrnnamev(String source) {
        getCotrn0ai()
                .setOFFILLER3(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER3(),
                                source, 3, 4));
    }

    public String getTrnnameo() {
        return getCotrn0ai().getTrnnamei();
    }

    public void setTrnnameo(String source) {
        getCotrn0ai().setTrnnamei(source);
    }

    public String getOFFILLER3() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTitle01l());
        tempByteBuffer1.flip();
        String temp2 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp2 + getCotrn0ai().getTitle01f();
    }

    public void setOFFILLER3(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTitle01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTitle01l(0);
        }
    }

    public String getTitle01c() {
        return getCotrn0ai().getOFFILLER5().substring(0, 1);
    }

    public void setTitle01c(String source) {
        getCotrn0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER5(),
                                source, 0, 1));
    }

    public String getTitle01p() {
        return getCotrn0ai().getOFFILLER5().substring(1, 2);
    }

    public void setTitle01p(String source) {
        getCotrn0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER5(),
                                source, 1, 2));
    }

    public String getTitle01h() {
        return getCotrn0ai().getOFFILLER5().substring(2, 3);
    }

    public void setTitle01h(String source) {
        getCotrn0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER5(),
                                source, 2, 3));
    }

    public String getTitle01v() {
        return getCotrn0ai().getOFFILLER5().substring(3);
    }

    public void setTitle01v(String source) {
        getCotrn0ai()
                .setOFFILLER5(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER5(),
                                source, 3, 4));
    }

    public String getTitle01o() {
        return getCotrn0ai().getTitle01i();
    }

    public void setTitle01o(String source) {
        getCotrn0ai().setTitle01i(source);
    }

    public String getOFFILLER4() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getCurdatel());
        tempByteBuffer1.flip();
        String temp3 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp3 + getCotrn0ai().getCurdatef();
    }

    public void setOFFILLER4(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setCurdatel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setCurdatel(0);
        }
    }

    public String getCurdatec() {
        return getCotrn0ai().getOFFILLER7().substring(0, 1);
    }

    public void setCurdatec(String source) {
        getCotrn0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER7(),
                                source, 0, 1));
    }

    public String getCurdatep() {
        return getCotrn0ai().getOFFILLER7().substring(1, 2);
    }

    public void setCurdatep(String source) {
        getCotrn0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER7(),
                                source, 1, 2));
    }

    public String getCurdateh() {
        return getCotrn0ai().getOFFILLER7().substring(2, 3);
    }

    public void setCurdateh(String source) {
        getCotrn0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER7(),
                                source, 2, 3));
    }

    public String getCurdatev() {
        return getCotrn0ai().getOFFILLER7().substring(3);
    }

    public void setCurdatev(String source) {
        getCotrn0ai()
                .setOFFILLER7(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER7(),
                                source, 3, 4));
    }

    public String getCurdateo() {
        return getCotrn0ai().getCurdatei();
    }

    public void setCurdateo(String source) {
        getCotrn0ai().setCurdatei(source);
    }

    public String getOFFILLER5() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getPgmnamel());
        tempByteBuffer1.flip();
        String temp4 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp4 + getCotrn0ai().getPgmnamef();
    }

    public void setOFFILLER5(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setPgmnamel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setPgmnamel(0);
        }
    }

    public String getPgmnamec() {
        return getCotrn0ai().getOFFILLER9().substring(0, 1);
    }

    public void setPgmnamec(String source) {
        getCotrn0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER9(),
                                source, 0, 1));
    }

    public String getPgmnamep() {
        return getCotrn0ai().getOFFILLER9().substring(1, 2);
    }

    public void setPgmnamep(String source) {
        getCotrn0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER9(),
                                source, 1, 2));
    }

    public String getPgmnameh() {
        return getCotrn0ai().getOFFILLER9().substring(2, 3);
    }

    public void setPgmnameh(String source) {
        getCotrn0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER9(),
                                source, 2, 3));
    }

    public String getPgmnamev() {
        return getCotrn0ai().getOFFILLER9().substring(3);
    }

    public void setPgmnamev(String source) {
        getCotrn0ai()
                .setOFFILLER9(
                        StringUtils.overlay(getCotrn0ai().getOFFILLER9(),
                                source, 3, 4));
    }

    public String getPgmnameo() {
        return getCotrn0ai().getPgmnamei();
    }

    public void setPgmnameo(String source) {
        getCotrn0ai().setPgmnamei(source);
    }

    public String getOFFILLER6() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTitle02l());
        tempByteBuffer1.flip();
        String temp5 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp5 + getCotrn0ai().getTitle02f();
    }

    public void setOFFILLER6(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTitle02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTitle02l(0);
        }
    }

    public String getTitle02c() {
        return getCotrn0ai().getOFFILLER11().substring(0, 1);
    }

    public void setTitle02c(String source) {
        getCotrn0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER11(), source, 0, 1));
    }

    public String getTitle02p() {
        return getCotrn0ai().getOFFILLER11().substring(1, 2);
    }

    public void setTitle02p(String source) {
        getCotrn0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER11(), source, 1, 2));
    }

    public String getTitle02h() {
        return getCotrn0ai().getOFFILLER11().substring(2, 3);
    }

    public void setTitle02h(String source) {
        getCotrn0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER11(), source, 2, 3));
    }

    public String getTitle02v() {
        return getCotrn0ai().getOFFILLER11().substring(3);
    }

    public void setTitle02v(String source) {
        getCotrn0ai().setOFFILLER11(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER11(), source, 3, 4));
    }

    public String getTitle02o() {
        return getCotrn0ai().getTitle02i();
    }

    public void setTitle02o(String source) {
        getCotrn0ai().setTitle02i(source);
    }

    public String getOFFILLER7() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getCurtimel());
        tempByteBuffer1.flip();
        String temp6 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp6 + getCotrn0ai().getCurtimef();
    }

    public void setOFFILLER7(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setCurtimel(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setCurtimel(0);
        }
    }

    public String getCurtimec() {
        return getCotrn0ai().getOFFILLER13().substring(0, 1);
    }

    public void setCurtimec(String source) {
        getCotrn0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER13(), source, 0, 1));
    }

    public String getCurtimep() {
        return getCotrn0ai().getOFFILLER13().substring(1, 2);
    }

    public void setCurtimep(String source) {
        getCotrn0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER13(), source, 1, 2));
    }

    public String getCurtimeh() {
        return getCotrn0ai().getOFFILLER13().substring(2, 3);
    }

    public void setCurtimeh(String source) {
        getCotrn0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER13(), source, 2, 3));
    }

    public String getCurtimev() {
        return getCotrn0ai().getOFFILLER13().substring(3);
    }

    public void setCurtimev(String source) {
        getCotrn0ai().setOFFILLER13(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER13(), source, 3, 4));
    }

    public String getCurtimeo() {
        return getCotrn0ai().getCurtimei();
    }

    public void setCurtimeo(String source) {
        getCotrn0ai().setCurtimei(source);
    }

    public String getOFFILLER8() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getPagenuml());
        tempByteBuffer1.flip();
        String temp7 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp7 + getCotrn0ai().getPagenumf();
    }

    public void setOFFILLER8(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setPagenuml(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setPagenuml(0);
        }
    }

    public String getPagenumc() {
        return getCotrn0ai().getOFFILLER15().substring(0, 1);
    }

    public void setPagenumc(String source) {
        getCotrn0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER15(), source, 0, 1));
    }

    public String getPagenump() {
        return getCotrn0ai().getOFFILLER15().substring(1, 2);
    }

    public void setPagenump(String source) {
        getCotrn0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER15(), source, 1, 2));
    }

    public String getPagenumh() {
        return getCotrn0ai().getOFFILLER15().substring(2, 3);
    }

    public void setPagenumh(String source) {
        getCotrn0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER15(), source, 2, 3));
    }

    public String getPagenumv() {
        return getCotrn0ai().getOFFILLER15().substring(3);
    }

    public void setPagenumv(String source) {
        getCotrn0ai().setOFFILLER15(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER15(), source, 3, 4));
    }

    public String getPagenumo() {
        return getCotrn0ai().getPagenumi();
    }

    public void setPagenumo(String source) {
        getCotrn0ai().setPagenumi(source);
    }

    public String getOFFILLER9() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnidinl());
        tempByteBuffer1.flip();
        String temp8 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp8 + getCotrn0ai().getTrnidinf();
    }

    public void setOFFILLER9(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnidinl(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnidinl(0);
        }
    }

    public String getTrnidinc() {
        return getCotrn0ai().getOFFILLER17().substring(0, 1);
    }

    public void setTrnidinc(String source) {
        getCotrn0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER17(), source, 0, 1));
    }

    public String getTrnidinp() {
        return getCotrn0ai().getOFFILLER17().substring(1, 2);
    }

    public void setTrnidinp(String source) {
        getCotrn0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER17(), source, 1, 2));
    }

    public String getTrnidinh() {
        return getCotrn0ai().getOFFILLER17().substring(2, 3);
    }

    public void setTrnidinh(String source) {
        getCotrn0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER17(), source, 2, 3));
    }

    public String getTrnidinv() {
        return getCotrn0ai().getOFFILLER17().substring(3);
    }

    public void setTrnidinv(String source) {
        getCotrn0ai().setOFFILLER17(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER17(), source, 3, 4));
    }

    public String getTrnidino() {
        return getCotrn0ai().getTrnidini();
    }

    public void setTrnidino(String source) {
        getCotrn0ai().setTrnidini(source);
    }

    public String getOFFILLER10() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0001l());
        tempByteBuffer1.flip();
        String temp9 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp9 + getCotrn0ai().getSel0001f();
    }

    public void setOFFILLER10(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0001l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0001l(0);
        }
    }

    public String getSel0001c() {
        return getCotrn0ai().getOFFILLER19().substring(0, 1);
    }

    public void setSel0001c(String source) {
        getCotrn0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER19(), source, 0, 1));
    }

    public String getSel0001p() {
        return getCotrn0ai().getOFFILLER19().substring(1, 2);
    }

    public void setSel0001p(String source) {
        getCotrn0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER19(), source, 1, 2));
    }

    public String getSel0001h() {
        return getCotrn0ai().getOFFILLER19().substring(2, 3);
    }

    public void setSel0001h(String source) {
        getCotrn0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER19(), source, 2, 3));
    }

    public String getSel0001v() {
        return getCotrn0ai().getOFFILLER19().substring(3);
    }

    public void setSel0001v(String source) {
        getCotrn0ai().setOFFILLER19(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER19(), source, 3, 4));
    }

    public String getSel0001o() {
        return getCotrn0ai().getSel0001i();
    }

    public void setSel0001o(String source) {
        getCotrn0ai().setSel0001i(source);
    }

    public String getOFFILLER11() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid01l());
        tempByteBuffer1.flip();
        String temp10 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp10 + getCotrn0ai().getTrnid01f();
    }

    public void setOFFILLER11(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid01l(0);
        }
    }

    public String getTrnid01c() {
        return getCotrn0ai().getOFFILLER21().substring(0, 1);
    }

    public void setTrnid01c(String source) {
        getCotrn0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER21(), source, 0, 1));
    }

    public String getTrnid01p() {
        return getCotrn0ai().getOFFILLER21().substring(1, 2);
    }

    public void setTrnid01p(String source) {
        getCotrn0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER21(), source, 1, 2));
    }

    public String getTrnid01h() {
        return getCotrn0ai().getOFFILLER21().substring(2, 3);
    }

    public void setTrnid01h(String source) {
        getCotrn0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER21(), source, 2, 3));
    }

    public String getTrnid01v() {
        return getCotrn0ai().getOFFILLER21().substring(3);
    }

    public void setTrnid01v(String source) {
        getCotrn0ai().setOFFILLER21(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER21(), source, 3, 4));
    }

    public String getTrnid01o() {
        return getCotrn0ai().getTrnid01i();
    }

    public void setTrnid01o(String source) {
        getCotrn0ai().setTrnid01i(source);
    }

    public String getOFFILLER12() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate01l());
        tempByteBuffer1.flip();
        String temp11 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp11 + getCotrn0ai().getTdate01f();
    }

    public void setOFFILLER12(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate01l(0);
        }
    }

    public String getTdate01c() {
        return getCotrn0ai().getOFFILLER23().substring(0, 1);
    }

    public void setTdate01c(String source) {
        getCotrn0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER23(), source, 0, 1));
    }

    public String getTdate01p() {
        return getCotrn0ai().getOFFILLER23().substring(1, 2);
    }

    public void setTdate01p(String source) {
        getCotrn0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER23(), source, 1, 2));
    }

    public String getTdate01h() {
        return getCotrn0ai().getOFFILLER23().substring(2, 3);
    }

    public void setTdate01h(String source) {
        getCotrn0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER23(), source, 2, 3));
    }

    public String getTdate01v() {
        return getCotrn0ai().getOFFILLER23().substring(3);
    }

    public void setTdate01v(String source) {
        getCotrn0ai().setOFFILLER23(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER23(), source, 3, 4));
    }

    public String getTdate01o() {
        return getCotrn0ai().getTdate01i();
    }

    public void setTdate01o(String source) {
        getCotrn0ai().setTdate01i(source);
    }

    public String getOFFILLER13() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc01l());
        tempByteBuffer1.flip();
        String temp12 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp12 + getCotrn0ai().getTdesc01f();
    }

    public void setOFFILLER13(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc01l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc01l(0);
        }
    }

    public String getTdesc01c() {
        return getCotrn0ai().getOFFILLER25().substring(0, 1);
    }

    public void setTdesc01c(String source) {
        getCotrn0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER25(), source, 0, 1));
    }

    public String getTdesc01p() {
        return getCotrn0ai().getOFFILLER25().substring(1, 2);
    }

    public void setTdesc01p(String source) {
        getCotrn0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER25(), source, 1, 2));
    }

    public String getTdesc01h() {
        return getCotrn0ai().getOFFILLER25().substring(2, 3);
    }

    public void setTdesc01h(String source) {
        getCotrn0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER25(), source, 2, 3));
    }

    public String getTdesc01v() {
        return getCotrn0ai().getOFFILLER25().substring(3);
    }

    public void setTdesc01v(String source) {
        getCotrn0ai().setOFFILLER25(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER25(), source, 3, 4));
    }

    public String getTdesc01o() {
        return getCotrn0ai().getTdesc01i();
    }

    public void setTdesc01o(String source) {
        getCotrn0ai().setTdesc01i(source);
    }

    public String getOFFILLER14() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt001l());
        tempByteBuffer1.flip();
        String temp13 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp13 + getCotrn0ai().getTamt001f();
    }

    public void setOFFILLER14(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt001l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt001l(0);
        }
    }

    public String getTamt001c() {
        return getCotrn0ai().getOFFILLER27().substring(0, 1);
    }

    public void setTamt001c(String source) {
        getCotrn0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER27(), source, 0, 1));
    }

    public String getTamt001p() {
        return getCotrn0ai().getOFFILLER27().substring(1, 2);
    }

    public void setTamt001p(String source) {
        getCotrn0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER27(), source, 1, 2));
    }

    public String getTamt001h() {
        return getCotrn0ai().getOFFILLER27().substring(2, 3);
    }

    public void setTamt001h(String source) {
        getCotrn0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER27(), source, 2, 3));
    }

    public String getTamt001v() {
        return getCotrn0ai().getOFFILLER27().substring(3);
    }

    public void setTamt001v(String source) {
        getCotrn0ai().setOFFILLER27(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER27(), source, 3, 4));
    }

    public String getTamt001o() {
        return getCotrn0ai().getTamt001i();
    }

    public void setTamt001o(String source) {
        getCotrn0ai().setTamt001i(source);
    }

    public String getOFFILLER15() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0002l());
        tempByteBuffer1.flip();
        String temp14 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp14 + getCotrn0ai().getSel0002f();
    }

    public void setOFFILLER15(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0002l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0002l(0);
        }
    }

    public String getSel0002c() {
        return getCotrn0ai().getOFFILLER29().substring(0, 1);
    }

    public void setSel0002c(String source) {
        getCotrn0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER29(), source, 0, 1));
    }

    public String getSel0002p() {
        return getCotrn0ai().getOFFILLER29().substring(1, 2);
    }

    public void setSel0002p(String source) {
        getCotrn0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER29(), source, 1, 2));
    }

    public String getSel0002h() {
        return getCotrn0ai().getOFFILLER29().substring(2, 3);
    }

    public void setSel0002h(String source) {
        getCotrn0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER29(), source, 2, 3));
    }

    public String getSel0002v() {
        return getCotrn0ai().getOFFILLER29().substring(3);
    }

    public void setSel0002v(String source) {
        getCotrn0ai().setOFFILLER29(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER29(), source, 3, 4));
    }

    public String getSel0002o() {
        return getCotrn0ai().getSel0002i();
    }

    public void setSel0002o(String source) {
        getCotrn0ai().setSel0002i(source);
    }

    public String getOFFILLER16() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid02l());
        tempByteBuffer1.flip();
        String temp15 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp15 + getCotrn0ai().getTrnid02f();
    }

    public void setOFFILLER16(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid02l(0);
        }
    }

    public String getTrnid02c() {
        return getCotrn0ai().getOFFILLER31().substring(0, 1);
    }

    public void setTrnid02c(String source) {
        getCotrn0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER31(), source, 0, 1));
    }

    public String getTrnid02p() {
        return getCotrn0ai().getOFFILLER31().substring(1, 2);
    }

    public void setTrnid02p(String source) {
        getCotrn0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER31(), source, 1, 2));
    }

    public String getTrnid02h() {
        return getCotrn0ai().getOFFILLER31().substring(2, 3);
    }

    public void setTrnid02h(String source) {
        getCotrn0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER31(), source, 2, 3));
    }

    public String getTrnid02v() {
        return getCotrn0ai().getOFFILLER31().substring(3);
    }

    public void setTrnid02v(String source) {
        getCotrn0ai().setOFFILLER31(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER31(), source, 3, 4));
    }

    public String getTrnid02o() {
        return getCotrn0ai().getTrnid02i();
    }

    public void setTrnid02o(String source) {
        getCotrn0ai().setTrnid02i(source);
    }

    public String getOFFILLER17() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate02l());
        tempByteBuffer1.flip();
        String temp16 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp16 + getCotrn0ai().getTdate02f();
    }

    public void setOFFILLER17(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate02l(0);
        }
    }

    public String getTdate02c() {
        return getCotrn0ai().getOFFILLER33().substring(0, 1);
    }

    public void setTdate02c(String source) {
        getCotrn0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER33(), source, 0, 1));
    }

    public String getTdate02p() {
        return getCotrn0ai().getOFFILLER33().substring(1, 2);
    }

    public void setTdate02p(String source) {
        getCotrn0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER33(), source, 1, 2));
    }

    public String getTdate02h() {
        return getCotrn0ai().getOFFILLER33().substring(2, 3);
    }

    public void setTdate02h(String source) {
        getCotrn0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER33(), source, 2, 3));
    }

    public String getTdate02v() {
        return getCotrn0ai().getOFFILLER33().substring(3);
    }

    public void setTdate02v(String source) {
        getCotrn0ai().setOFFILLER33(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER33(), source, 3, 4));
    }

    public String getTdate02o() {
        return getCotrn0ai().getTdate02i();
    }

    public void setTdate02o(String source) {
        getCotrn0ai().setTdate02i(source);
    }

    public String getOFFILLER18() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc02l());
        tempByteBuffer1.flip();
        String temp17 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp17 + getCotrn0ai().getTdesc02f();
    }

    public void setOFFILLER18(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc02l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc02l(0);
        }
    }

    public String getTdesc02c() {
        return getCotrn0ai().getOFFILLER35().substring(0, 1);
    }

    public void setTdesc02c(String source) {
        getCotrn0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER35(), source, 0, 1));
    }

    public String getTdesc02p() {
        return getCotrn0ai().getOFFILLER35().substring(1, 2);
    }

    public void setTdesc02p(String source) {
        getCotrn0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER35(), source, 1, 2));
    }

    public String getTdesc02h() {
        return getCotrn0ai().getOFFILLER35().substring(2, 3);
    }

    public void setTdesc02h(String source) {
        getCotrn0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER35(), source, 2, 3));
    }

    public String getTdesc02v() {
        return getCotrn0ai().getOFFILLER35().substring(3);
    }

    public void setTdesc02v(String source) {
        getCotrn0ai().setOFFILLER35(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER35(), source, 3, 4));
    }

    public String getTdesc02o() {
        return getCotrn0ai().getTdesc02i();
    }

    public void setTdesc02o(String source) {
        getCotrn0ai().setTdesc02i(source);
    }

    public String getOFFILLER19() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt002l());
        tempByteBuffer1.flip();
        String temp18 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp18 + getCotrn0ai().getTamt002f();
    }

    public void setOFFILLER19(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt002l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt002l(0);
        }
    }

    public String getTamt002c() {
        return getCotrn0ai().getOFFILLER37().substring(0, 1);
    }

    public void setTamt002c(String source) {
        getCotrn0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER37(), source, 0, 1));
    }

    public String getTamt002p() {
        return getCotrn0ai().getOFFILLER37().substring(1, 2);
    }

    public void setTamt002p(String source) {
        getCotrn0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER37(), source, 1, 2));
    }

    public String getTamt002h() {
        return getCotrn0ai().getOFFILLER37().substring(2, 3);
    }

    public void setTamt002h(String source) {
        getCotrn0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER37(), source, 2, 3));
    }

    public String getTamt002v() {
        return getCotrn0ai().getOFFILLER37().substring(3);
    }

    public void setTamt002v(String source) {
        getCotrn0ai().setOFFILLER37(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER37(), source, 3, 4));
    }

    public String getTamt002o() {
        return getCotrn0ai().getTamt002i();
    }

    public void setTamt002o(String source) {
        getCotrn0ai().setTamt002i(source);
    }

    public String getOFFILLER20() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0003l());
        tempByteBuffer1.flip();
        String temp19 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp19 + getCotrn0ai().getSel0003f();
    }

    public void setOFFILLER20(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0003l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0003l(0);
        }
    }

    public String getSel0003c() {
        return getCotrn0ai().getOFFILLER39().substring(0, 1);
    }

    public void setSel0003c(String source) {
        getCotrn0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER39(), source, 0, 1));
    }

    public String getSel0003p() {
        return getCotrn0ai().getOFFILLER39().substring(1, 2);
    }

    public void setSel0003p(String source) {
        getCotrn0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER39(), source, 1, 2));
    }

    public String getSel0003h() {
        return getCotrn0ai().getOFFILLER39().substring(2, 3);
    }

    public void setSel0003h(String source) {
        getCotrn0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER39(), source, 2, 3));
    }

    public String getSel0003v() {
        return getCotrn0ai().getOFFILLER39().substring(3);
    }

    public void setSel0003v(String source) {
        getCotrn0ai().setOFFILLER39(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER39(), source, 3, 4));
    }

    public String getSel0003o() {
        return getCotrn0ai().getSel0003i();
    }

    public void setSel0003o(String source) {
        getCotrn0ai().setSel0003i(source);
    }

    public String getOFFILLER21() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid03l());
        tempByteBuffer1.flip();
        String temp20 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp20 + getCotrn0ai().getTrnid03f();
    }

    public void setOFFILLER21(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid03l(0);
        }
    }

    public String getTrnid03c() {
        return getCotrn0ai().getOFFILLER41().substring(0, 1);
    }

    public void setTrnid03c(String source) {
        getCotrn0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER41(), source, 0, 1));
    }

    public String getTrnid03p() {
        return getCotrn0ai().getOFFILLER41().substring(1, 2);
    }

    public void setTrnid03p(String source) {
        getCotrn0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER41(), source, 1, 2));
    }

    public String getTrnid03h() {
        return getCotrn0ai().getOFFILLER41().substring(2, 3);
    }

    public void setTrnid03h(String source) {
        getCotrn0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER41(), source, 2, 3));
    }

    public String getTrnid03v() {
        return getCotrn0ai().getOFFILLER41().substring(3);
    }

    public void setTrnid03v(String source) {
        getCotrn0ai().setOFFILLER41(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER41(), source, 3, 4));
    }

    public String getTrnid03o() {
        return getCotrn0ai().getTrnid03i();
    }

    public void setTrnid03o(String source) {
        getCotrn0ai().setTrnid03i(source);
    }

    public String getOFFILLER22() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate03l());
        tempByteBuffer1.flip();
        String temp21 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp21 + getCotrn0ai().getTdate03f();
    }

    public void setOFFILLER22(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate03l(0);
        }
    }

    public String getTdate03c() {
        return getCotrn0ai().getOFFILLER43().substring(0, 1);
    }

    public void setTdate03c(String source) {
        getCotrn0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER43(), source, 0, 1));
    }

    public String getTdate03p() {
        return getCotrn0ai().getOFFILLER43().substring(1, 2);
    }

    public void setTdate03p(String source) {
        getCotrn0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER43(), source, 1, 2));
    }

    public String getTdate03h() {
        return getCotrn0ai().getOFFILLER43().substring(2, 3);
    }

    public void setTdate03h(String source) {
        getCotrn0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER43(), source, 2, 3));
    }

    public String getTdate03v() {
        return getCotrn0ai().getOFFILLER43().substring(3);
    }

    public void setTdate03v(String source) {
        getCotrn0ai().setOFFILLER43(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER43(), source, 3, 4));
    }

    public String getTdate03o() {
        return getCotrn0ai().getTdate03i();
    }

    public void setTdate03o(String source) {
        getCotrn0ai().setTdate03i(source);
    }

    public String getOFFILLER23() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc03l());
        tempByteBuffer1.flip();
        String temp22 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp22 + getCotrn0ai().getTdesc03f();
    }

    public void setOFFILLER23(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc03l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc03l(0);
        }
    }

    public String getTdesc03c() {
        return getCotrn0ai().getOFFILLER45().substring(0, 1);
    }

    public void setTdesc03c(String source) {
        getCotrn0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER45(), source, 0, 1));
    }

    public String getTdesc03p() {
        return getCotrn0ai().getOFFILLER45().substring(1, 2);
    }

    public void setTdesc03p(String source) {
        getCotrn0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER45(), source, 1, 2));
    }

    public String getTdesc03h() {
        return getCotrn0ai().getOFFILLER45().substring(2, 3);
    }

    public void setTdesc03h(String source) {
        getCotrn0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER45(), source, 2, 3));
    }

    public String getTdesc03v() {
        return getCotrn0ai().getOFFILLER45().substring(3);
    }

    public void setTdesc03v(String source) {
        getCotrn0ai().setOFFILLER45(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER45(), source, 3, 4));
    }

    public String getTdesc03o() {
        return getCotrn0ai().getTdesc03i();
    }

    public void setTdesc03o(String source) {
        getCotrn0ai().setTdesc03i(source);
    }

    public String getOFFILLER24() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt003l());
        tempByteBuffer1.flip();
        String temp23 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp23 + getCotrn0ai().getTamt003f();
    }

    public void setOFFILLER24(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt003l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt003l(0);
        }
    }

    public String getTamt003c() {
        return getCotrn0ai().getOFFILLER47().substring(0, 1);
    }

    public void setTamt003c(String source) {
        getCotrn0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER47(), source, 0, 1));
    }

    public String getTamt003p() {
        return getCotrn0ai().getOFFILLER47().substring(1, 2);
    }

    public void setTamt003p(String source) {
        getCotrn0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER47(), source, 1, 2));
    }

    public String getTamt003h() {
        return getCotrn0ai().getOFFILLER47().substring(2, 3);
    }

    public void setTamt003h(String source) {
        getCotrn0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER47(), source, 2, 3));
    }

    public String getTamt003v() {
        return getCotrn0ai().getOFFILLER47().substring(3);
    }

    public void setTamt003v(String source) {
        getCotrn0ai().setOFFILLER47(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER47(), source, 3, 4));
    }

    public String getTamt003o() {
        return getCotrn0ai().getTamt003i();
    }

    public void setTamt003o(String source) {
        getCotrn0ai().setTamt003i(source);
    }

    public String getOFFILLER25() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0004l());
        tempByteBuffer1.flip();
        String temp24 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp24 + getCotrn0ai().getSel0004f();
    }

    public void setOFFILLER25(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0004l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0004l(0);
        }
    }

    public String getSel0004c() {
        return getCotrn0ai().getOFFILLER49().substring(0, 1);
    }

    public void setSel0004c(String source) {
        getCotrn0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER49(), source, 0, 1));
    }

    public String getSel0004p() {
        return getCotrn0ai().getOFFILLER49().substring(1, 2);
    }

    public void setSel0004p(String source) {
        getCotrn0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER49(), source, 1, 2));
    }

    public String getSel0004h() {
        return getCotrn0ai().getOFFILLER49().substring(2, 3);
    }

    public void setSel0004h(String source) {
        getCotrn0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER49(), source, 2, 3));
    }

    public String getSel0004v() {
        return getCotrn0ai().getOFFILLER49().substring(3);
    }

    public void setSel0004v(String source) {
        getCotrn0ai().setOFFILLER49(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER49(), source, 3, 4));
    }

    public String getSel0004o() {
        return getCotrn0ai().getSel0004i();
    }

    public void setSel0004o(String source) {
        getCotrn0ai().setSel0004i(source);
    }

    public String getOFFILLER26() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid04l());
        tempByteBuffer1.flip();
        String temp25 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp25 + getCotrn0ai().getTrnid04f();
    }

    public void setOFFILLER26(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid04l(0);
        }
    }

    public String getTrnid04c() {
        return getCotrn0ai().getOFFILLER51().substring(0, 1);
    }

    public void setTrnid04c(String source) {
        getCotrn0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER51(), source, 0, 1));
    }

    public String getTrnid04p() {
        return getCotrn0ai().getOFFILLER51().substring(1, 2);
    }

    public void setTrnid04p(String source) {
        getCotrn0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER51(), source, 1, 2));
    }

    public String getTrnid04h() {
        return getCotrn0ai().getOFFILLER51().substring(2, 3);
    }

    public void setTrnid04h(String source) {
        getCotrn0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER51(), source, 2, 3));
    }

    public String getTrnid04v() {
        return getCotrn0ai().getOFFILLER51().substring(3);
    }

    public void setTrnid04v(String source) {
        getCotrn0ai().setOFFILLER51(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER51(), source, 3, 4));
    }

    public String getTrnid04o() {
        return getCotrn0ai().getTrnid04i();
    }

    public void setTrnid04o(String source) {
        getCotrn0ai().setTrnid04i(source);
    }

    public String getOFFILLER27() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate04l());
        tempByteBuffer1.flip();
        String temp26 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp26 + getCotrn0ai().getTdate04f();
    }

    public void setOFFILLER27(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate04l(0);
        }
    }

    public String getTdate04c() {
        return getCotrn0ai().getOFFILLER53().substring(0, 1);
    }

    public void setTdate04c(String source) {
        getCotrn0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER53(), source, 0, 1));
    }

    public String getTdate04p() {
        return getCotrn0ai().getOFFILLER53().substring(1, 2);
    }

    public void setTdate04p(String source) {
        getCotrn0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER53(), source, 1, 2));
    }

    public String getTdate04h() {
        return getCotrn0ai().getOFFILLER53().substring(2, 3);
    }

    public void setTdate04h(String source) {
        getCotrn0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER53(), source, 2, 3));
    }

    public String getTdate04v() {
        return getCotrn0ai().getOFFILLER53().substring(3);
    }

    public void setTdate04v(String source) {
        getCotrn0ai().setOFFILLER53(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER53(), source, 3, 4));
    }

    public String getTdate04o() {
        return getCotrn0ai().getTdate04i();
    }

    public void setTdate04o(String source) {
        getCotrn0ai().setTdate04i(source);
    }

    public String getOFFILLER28() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc04l());
        tempByteBuffer1.flip();
        String temp27 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp27 + getCotrn0ai().getTdesc04f();
    }

    public void setOFFILLER28(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc04l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc04l(0);
        }
    }

    public String getTdesc04c() {
        return getCotrn0ai().getOFFILLER55().substring(0, 1);
    }

    public void setTdesc04c(String source) {
        getCotrn0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER55(), source, 0, 1));
    }

    public String getTdesc04p() {
        return getCotrn0ai().getOFFILLER55().substring(1, 2);
    }

    public void setTdesc04p(String source) {
        getCotrn0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER55(), source, 1, 2));
    }

    public String getTdesc04h() {
        return getCotrn0ai().getOFFILLER55().substring(2, 3);
    }

    public void setTdesc04h(String source) {
        getCotrn0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER55(), source, 2, 3));
    }

    public String getTdesc04v() {
        return getCotrn0ai().getOFFILLER55().substring(3);
    }

    public void setTdesc04v(String source) {
        getCotrn0ai().setOFFILLER55(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER55(), source, 3, 4));
    }

    public String getTdesc04o() {
        return getCotrn0ai().getTdesc04i();
    }

    public void setTdesc04o(String source) {
        getCotrn0ai().setTdesc04i(source);
    }

    public String getOFFILLER29() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt004l());
        tempByteBuffer1.flip();
        String temp28 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp28 + getCotrn0ai().getTamt004f();
    }

    public void setOFFILLER29(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt004l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt004l(0);
        }
    }

    public String getTamt004c() {
        return getCotrn0ai().getOFFILLER57().substring(0, 1);
    }

    public void setTamt004c(String source) {
        getCotrn0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER57(), source, 0, 1));
    }

    public String getTamt004p() {
        return getCotrn0ai().getOFFILLER57().substring(1, 2);
    }

    public void setTamt004p(String source) {
        getCotrn0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER57(), source, 1, 2));
    }

    public String getTamt004h() {
        return getCotrn0ai().getOFFILLER57().substring(2, 3);
    }

    public void setTamt004h(String source) {
        getCotrn0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER57(), source, 2, 3));
    }

    public String getTamt004v() {
        return getCotrn0ai().getOFFILLER57().substring(3);
    }

    public void setTamt004v(String source) {
        getCotrn0ai().setOFFILLER57(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER57(), source, 3, 4));
    }

    public String getTamt004o() {
        return getCotrn0ai().getTamt004i();
    }

    public void setTamt004o(String source) {
        getCotrn0ai().setTamt004i(source);
    }

    public String getOFFILLER30() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0005l());
        tempByteBuffer1.flip();
        String temp29 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp29 + getCotrn0ai().getSel0005f();
    }

    public void setOFFILLER30(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0005l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0005l(0);
        }
    }

    public String getSel0005c() {
        return getCotrn0ai().getOFFILLER59().substring(0, 1);
    }

    public void setSel0005c(String source) {
        getCotrn0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER59(), source, 0, 1));
    }

    public String getSel0005p() {
        return getCotrn0ai().getOFFILLER59().substring(1, 2);
    }

    public void setSel0005p(String source) {
        getCotrn0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER59(), source, 1, 2));
    }

    public String getSel0005h() {
        return getCotrn0ai().getOFFILLER59().substring(2, 3);
    }

    public void setSel0005h(String source) {
        getCotrn0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER59(), source, 2, 3));
    }

    public String getSel0005v() {
        return getCotrn0ai().getOFFILLER59().substring(3);
    }

    public void setSel0005v(String source) {
        getCotrn0ai().setOFFILLER59(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER59(), source, 3, 4));
    }

    public String getSel0005o() {
        return getCotrn0ai().getSel0005i();
    }

    public void setSel0005o(String source) {
        getCotrn0ai().setSel0005i(source);
    }

    public String getOFFILLER31() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid05l());
        tempByteBuffer1.flip();
        String temp30 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp30 + getCotrn0ai().getTrnid05f();
    }

    public void setOFFILLER31(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid05l(0);
        }
    }

    public String getTrnid05c() {
        return getCotrn0ai().getOFFILLER61().substring(0, 1);
    }

    public void setTrnid05c(String source) {
        getCotrn0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER61(), source, 0, 1));
    }

    public String getTrnid05p() {
        return getCotrn0ai().getOFFILLER61().substring(1, 2);
    }

    public void setTrnid05p(String source) {
        getCotrn0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER61(), source, 1, 2));
    }

    public String getTrnid05h() {
        return getCotrn0ai().getOFFILLER61().substring(2, 3);
    }

    public void setTrnid05h(String source) {
        getCotrn0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER61(), source, 2, 3));
    }

    public String getTrnid05v() {
        return getCotrn0ai().getOFFILLER61().substring(3);
    }

    public void setTrnid05v(String source) {
        getCotrn0ai().setOFFILLER61(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER61(), source, 3, 4));
    }

    public String getTrnid05o() {
        return getCotrn0ai().getTrnid05i();
    }

    public void setTrnid05o(String source) {
        getCotrn0ai().setTrnid05i(source);
    }

    public String getOFFILLER32() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate05l());
        tempByteBuffer1.flip();
        String temp31 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp31 + getCotrn0ai().getTdate05f();
    }

    public void setOFFILLER32(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate05l(0);
        }
    }

    public String getTdate05c() {
        return getCotrn0ai().getOFFILLER63().substring(0, 1);
    }

    public void setTdate05c(String source) {
        getCotrn0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER63(), source, 0, 1));
    }

    public String getTdate05p() {
        return getCotrn0ai().getOFFILLER63().substring(1, 2);
    }

    public void setTdate05p(String source) {
        getCotrn0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER63(), source, 1, 2));
    }

    public String getTdate05h() {
        return getCotrn0ai().getOFFILLER63().substring(2, 3);
    }

    public void setTdate05h(String source) {
        getCotrn0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER63(), source, 2, 3));
    }

    public String getTdate05v() {
        return getCotrn0ai().getOFFILLER63().substring(3);
    }

    public void setTdate05v(String source) {
        getCotrn0ai().setOFFILLER63(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER63(), source, 3, 4));
    }

    public String getTdate05o() {
        return getCotrn0ai().getTdate05i();
    }

    public void setTdate05o(String source) {
        getCotrn0ai().setTdate05i(source);
    }

    public String getOFFILLER33() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc05l());
        tempByteBuffer1.flip();
        String temp32 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp32 + getCotrn0ai().getTdesc05f();
    }

    public void setOFFILLER33(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc05l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc05l(0);
        }
    }

    public String getTdesc05c() {
        return getCotrn0ai().getOFFILLER65().substring(0, 1);
    }

    public void setTdesc05c(String source) {
        getCotrn0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER65(), source, 0, 1));
    }

    public String getTdesc05p() {
        return getCotrn0ai().getOFFILLER65().substring(1, 2);
    }

    public void setTdesc05p(String source) {
        getCotrn0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER65(), source, 1, 2));
    }

    public String getTdesc05h() {
        return getCotrn0ai().getOFFILLER65().substring(2, 3);
    }

    public void setTdesc05h(String source) {
        getCotrn0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER65(), source, 2, 3));
    }

    public String getTdesc05v() {
        return getCotrn0ai().getOFFILLER65().substring(3);
    }

    public void setTdesc05v(String source) {
        getCotrn0ai().setOFFILLER65(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER65(), source, 3, 4));
    }

    public String getTdesc05o() {
        return getCotrn0ai().getTdesc05i();
    }

    public void setTdesc05o(String source) {
        getCotrn0ai().setTdesc05i(source);
    }

    public String getOFFILLER34() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt005l());
        tempByteBuffer1.flip();
        String temp33 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp33 + getCotrn0ai().getTamt005f();
    }

    public void setOFFILLER34(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt005l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt005l(0);
        }
    }

    public String getTamt005c() {
        return getCotrn0ai().getOFFILLER67().substring(0, 1);
    }

    public void setTamt005c(String source) {
        getCotrn0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER67(), source, 0, 1));
    }

    public String getTamt005p() {
        return getCotrn0ai().getOFFILLER67().substring(1, 2);
    }

    public void setTamt005p(String source) {
        getCotrn0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER67(), source, 1, 2));
    }

    public String getTamt005h() {
        return getCotrn0ai().getOFFILLER67().substring(2, 3);
    }

    public void setTamt005h(String source) {
        getCotrn0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER67(), source, 2, 3));
    }

    public String getTamt005v() {
        return getCotrn0ai().getOFFILLER67().substring(3);
    }

    public void setTamt005v(String source) {
        getCotrn0ai().setOFFILLER67(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER67(), source, 3, 4));
    }

    public String getTamt005o() {
        return getCotrn0ai().getTamt005i();
    }

    public void setTamt005o(String source) {
        getCotrn0ai().setTamt005i(source);
    }

    public String getOFFILLER35() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0006l());
        tempByteBuffer1.flip();
        String temp34 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp34 + getCotrn0ai().getSel0006f();
    }

    public void setOFFILLER35(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0006l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0006l(0);
        }
    }

    public String getSel0006c() {
        return getCotrn0ai().getOFFILLER69().substring(0, 1);
    }

    public void setSel0006c(String source) {
        getCotrn0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER69(), source, 0, 1));
    }

    public String getSel0006p() {
        return getCotrn0ai().getOFFILLER69().substring(1, 2);
    }

    public void setSel0006p(String source) {
        getCotrn0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER69(), source, 1, 2));
    }

    public String getSel0006h() {
        return getCotrn0ai().getOFFILLER69().substring(2, 3);
    }

    public void setSel0006h(String source) {
        getCotrn0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER69(), source, 2, 3));
    }

    public String getSel0006v() {
        return getCotrn0ai().getOFFILLER69().substring(3);
    }

    public void setSel0006v(String source) {
        getCotrn0ai().setOFFILLER69(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER69(), source, 3, 4));
    }

    public String getSel0006o() {
        return getCotrn0ai().getSel0006i();
    }

    public void setSel0006o(String source) {
        getCotrn0ai().setSel0006i(source);
    }

    public String getOFFILLER36() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid06l());
        tempByteBuffer1.flip();
        String temp35 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp35 + getCotrn0ai().getTrnid06f();
    }

    public void setOFFILLER36(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid06l(0);
        }
    }

    public String getTrnid06c() {
        return getCotrn0ai().getOFFILLER71().substring(0, 1);
    }

    public void setTrnid06c(String source) {
        getCotrn0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER71(), source, 0, 1));
    }

    public String getTrnid06p() {
        return getCotrn0ai().getOFFILLER71().substring(1, 2);
    }

    public void setTrnid06p(String source) {
        getCotrn0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER71(), source, 1, 2));
    }

    public String getTrnid06h() {
        return getCotrn0ai().getOFFILLER71().substring(2, 3);
    }

    public void setTrnid06h(String source) {
        getCotrn0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER71(), source, 2, 3));
    }

    public String getTrnid06v() {
        return getCotrn0ai().getOFFILLER71().substring(3);
    }

    public void setTrnid06v(String source) {
        getCotrn0ai().setOFFILLER71(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER71(), source, 3, 4));
    }

    public String getTrnid06o() {
        return getCotrn0ai().getTrnid06i();
    }

    public void setTrnid06o(String source) {
        getCotrn0ai().setTrnid06i(source);
    }

    public String getOFFILLER37() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate06l());
        tempByteBuffer1.flip();
        String temp36 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp36 + getCotrn0ai().getTdate06f();
    }

    public void setOFFILLER37(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate06l(0);
        }
    }

    public String getTdate06c() {
        return getCotrn0ai().getOFFILLER73().substring(0, 1);
    }

    public void setTdate06c(String source) {
        getCotrn0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER73(), source, 0, 1));
    }

    public String getTdate06p() {
        return getCotrn0ai().getOFFILLER73().substring(1, 2);
    }

    public void setTdate06p(String source) {
        getCotrn0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER73(), source, 1, 2));
    }

    public String getTdate06h() {
        return getCotrn0ai().getOFFILLER73().substring(2, 3);
    }

    public void setTdate06h(String source) {
        getCotrn0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER73(), source, 2, 3));
    }

    public String getTdate06v() {
        return getCotrn0ai().getOFFILLER73().substring(3);
    }

    public void setTdate06v(String source) {
        getCotrn0ai().setOFFILLER73(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER73(), source, 3, 4));
    }

    public String getTdate06o() {
        return getCotrn0ai().getTdate06i();
    }

    public void setTdate06o(String source) {
        getCotrn0ai().setTdate06i(source);
    }

    public String getOFFILLER38() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc06l());
        tempByteBuffer1.flip();
        String temp37 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp37 + getCotrn0ai().getTdesc06f();
    }

    public void setOFFILLER38(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc06l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc06l(0);
        }
    }

    public String getTdesc06c() {
        return getCotrn0ai().getOFFILLER75().substring(0, 1);
    }

    public void setTdesc06c(String source) {
        getCotrn0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER75(), source, 0, 1));
    }

    public String getTdesc06p() {
        return getCotrn0ai().getOFFILLER75().substring(1, 2);
    }

    public void setTdesc06p(String source) {
        getCotrn0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER75(), source, 1, 2));
    }

    public String getTdesc06h() {
        return getCotrn0ai().getOFFILLER75().substring(2, 3);
    }

    public void setTdesc06h(String source) {
        getCotrn0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER75(), source, 2, 3));
    }

    public String getTdesc06v() {
        return getCotrn0ai().getOFFILLER75().substring(3);
    }

    public void setTdesc06v(String source) {
        getCotrn0ai().setOFFILLER75(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER75(), source, 3, 4));
    }

    public String getTdesc06o() {
        return getCotrn0ai().getTdesc06i();
    }

    public void setTdesc06o(String source) {
        getCotrn0ai().setTdesc06i(source);
    }

    public String getOFFILLER39() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt006l());
        tempByteBuffer1.flip();
        String temp38 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp38 + getCotrn0ai().getTamt006f();
    }

    public void setOFFILLER39(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt006l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt006l(0);
        }
    }

    public String getTamt006c() {
        return getCotrn0ai().getOFFILLER77().substring(0, 1);
    }

    public void setTamt006c(String source) {
        getCotrn0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER77(), source, 0, 1));
    }

    public String getTamt006p() {
        return getCotrn0ai().getOFFILLER77().substring(1, 2);
    }

    public void setTamt006p(String source) {
        getCotrn0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER77(), source, 1, 2));
    }

    public String getTamt006h() {
        return getCotrn0ai().getOFFILLER77().substring(2, 3);
    }

    public void setTamt006h(String source) {
        getCotrn0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER77(), source, 2, 3));
    }

    public String getTamt006v() {
        return getCotrn0ai().getOFFILLER77().substring(3);
    }

    public void setTamt006v(String source) {
        getCotrn0ai().setOFFILLER77(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER77(), source, 3, 4));
    }

    public String getTamt006o() {
        return getCotrn0ai().getTamt006i();
    }

    public void setTamt006o(String source) {
        getCotrn0ai().setTamt006i(source);
    }

    public String getOFFILLER40() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0007l());
        tempByteBuffer1.flip();
        String temp39 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp39 + getCotrn0ai().getSel0007f();
    }

    public void setOFFILLER40(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0007l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0007l(0);
        }
    }

    public String getSel0007c() {
        return getCotrn0ai().getOFFILLER79().substring(0, 1);
    }

    public void setSel0007c(String source) {
        getCotrn0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER79(), source, 0, 1));
    }

    public String getSel0007p() {
        return getCotrn0ai().getOFFILLER79().substring(1, 2);
    }

    public void setSel0007p(String source) {
        getCotrn0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER79(), source, 1, 2));
    }

    public String getSel0007h() {
        return getCotrn0ai().getOFFILLER79().substring(2, 3);
    }

    public void setSel0007h(String source) {
        getCotrn0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER79(), source, 2, 3));
    }

    public String getSel0007v() {
        return getCotrn0ai().getOFFILLER79().substring(3);
    }

    public void setSel0007v(String source) {
        getCotrn0ai().setOFFILLER79(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER79(), source, 3, 4));
    }

    public String getSel0007o() {
        return getCotrn0ai().getSel0007i();
    }

    public void setSel0007o(String source) {
        getCotrn0ai().setSel0007i(source);
    }

    public String getOFFILLER41() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid07l());
        tempByteBuffer1.flip();
        String temp40 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp40 + getCotrn0ai().getTrnid07f();
    }

    public void setOFFILLER41(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid07l(0);
        }
    }

    public String getTrnid07c() {
        return getCotrn0ai().getOFFILLER81().substring(0, 1);
    }

    public void setTrnid07c(String source) {
        getCotrn0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER81(), source, 0, 1));
    }

    public String getTrnid07p() {
        return getCotrn0ai().getOFFILLER81().substring(1, 2);
    }

    public void setTrnid07p(String source) {
        getCotrn0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER81(), source, 1, 2));
    }

    public String getTrnid07h() {
        return getCotrn0ai().getOFFILLER81().substring(2, 3);
    }

    public void setTrnid07h(String source) {
        getCotrn0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER81(), source, 2, 3));
    }

    public String getTrnid07v() {
        return getCotrn0ai().getOFFILLER81().substring(3);
    }

    public void setTrnid07v(String source) {
        getCotrn0ai().setOFFILLER81(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER81(), source, 3, 4));
    }

    public String getTrnid07o() {
        return getCotrn0ai().getTrnid07i();
    }

    public void setTrnid07o(String source) {
        getCotrn0ai().setTrnid07i(source);
    }

    public String getOFFILLER42() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate07l());
        tempByteBuffer1.flip();
        String temp41 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp41 + getCotrn0ai().getTdate07f();
    }

    public void setOFFILLER42(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate07l(0);
        }
    }

    public String getTdate07c() {
        return getCotrn0ai().getOFFILLER83().substring(0, 1);
    }

    public void setTdate07c(String source) {
        getCotrn0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER83(), source, 0, 1));
    }

    public String getTdate07p() {
        return getCotrn0ai().getOFFILLER83().substring(1, 2);
    }

    public void setTdate07p(String source) {
        getCotrn0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER83(), source, 1, 2));
    }

    public String getTdate07h() {
        return getCotrn0ai().getOFFILLER83().substring(2, 3);
    }

    public void setTdate07h(String source) {
        getCotrn0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER83(), source, 2, 3));
    }

    public String getTdate07v() {
        return getCotrn0ai().getOFFILLER83().substring(3);
    }

    public void setTdate07v(String source) {
        getCotrn0ai().setOFFILLER83(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER83(), source, 3, 4));
    }

    public String getTdate07o() {
        return getCotrn0ai().getTdate07i();
    }

    public void setTdate07o(String source) {
        getCotrn0ai().setTdate07i(source);
    }

    public String getOFFILLER43() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc07l());
        tempByteBuffer1.flip();
        String temp42 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp42 + getCotrn0ai().getTdesc07f();
    }

    public void setOFFILLER43(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc07l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc07l(0);
        }
    }

    public String getTdesc07c() {
        return getCotrn0ai().getOFFILLER85().substring(0, 1);
    }

    public void setTdesc07c(String source) {
        getCotrn0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER85(), source, 0, 1));
    }

    public String getTdesc07p() {
        return getCotrn0ai().getOFFILLER85().substring(1, 2);
    }

    public void setTdesc07p(String source) {
        getCotrn0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER85(), source, 1, 2));
    }

    public String getTdesc07h() {
        return getCotrn0ai().getOFFILLER85().substring(2, 3);
    }

    public void setTdesc07h(String source) {
        getCotrn0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER85(), source, 2, 3));
    }

    public String getTdesc07v() {
        return getCotrn0ai().getOFFILLER85().substring(3);
    }

    public void setTdesc07v(String source) {
        getCotrn0ai().setOFFILLER85(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER85(), source, 3, 4));
    }

    public String getTdesc07o() {
        return getCotrn0ai().getTdesc07i();
    }

    public void setTdesc07o(String source) {
        getCotrn0ai().setTdesc07i(source);
    }

    public String getOFFILLER44() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt007l());
        tempByteBuffer1.flip();
        String temp43 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp43 + getCotrn0ai().getTamt007f();
    }

    public void setOFFILLER44(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt007l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt007l(0);
        }
    }

    public String getTamt007c() {
        return getCotrn0ai().getOFFILLER87().substring(0, 1);
    }

    public void setTamt007c(String source) {
        getCotrn0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER87(), source, 0, 1));
    }

    public String getTamt007p() {
        return getCotrn0ai().getOFFILLER87().substring(1, 2);
    }

    public void setTamt007p(String source) {
        getCotrn0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER87(), source, 1, 2));
    }

    public String getTamt007h() {
        return getCotrn0ai().getOFFILLER87().substring(2, 3);
    }

    public void setTamt007h(String source) {
        getCotrn0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER87(), source, 2, 3));
    }

    public String getTamt007v() {
        return getCotrn0ai().getOFFILLER87().substring(3);
    }

    public void setTamt007v(String source) {
        getCotrn0ai().setOFFILLER87(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER87(), source, 3, 4));
    }

    public String getTamt007o() {
        return getCotrn0ai().getTamt007i();
    }

    public void setTamt007o(String source) {
        getCotrn0ai().setTamt007i(source);
    }

    public String getOFFILLER45() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0008l());
        tempByteBuffer1.flip();
        String temp44 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp44 + getCotrn0ai().getSel0008f();
    }

    public void setOFFILLER45(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0008l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0008l(0);
        }
    }

    public String getSel0008c() {
        return getCotrn0ai().getOFFILLER89().substring(0, 1);
    }

    public void setSel0008c(String source) {
        getCotrn0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER89(), source, 0, 1));
    }

    public String getSel0008p() {
        return getCotrn0ai().getOFFILLER89().substring(1, 2);
    }

    public void setSel0008p(String source) {
        getCotrn0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER89(), source, 1, 2));
    }

    public String getSel0008h() {
        return getCotrn0ai().getOFFILLER89().substring(2, 3);
    }

    public void setSel0008h(String source) {
        getCotrn0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER89(), source, 2, 3));
    }

    public String getSel0008v() {
        return getCotrn0ai().getOFFILLER89().substring(3);
    }

    public void setSel0008v(String source) {
        getCotrn0ai().setOFFILLER89(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER89(), source, 3, 4));
    }

    public String getSel0008o() {
        return getCotrn0ai().getSel0008i();
    }

    public void setSel0008o(String source) {
        getCotrn0ai().setSel0008i(source);
    }

    public String getOFFILLER46() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid08l());
        tempByteBuffer1.flip();
        String temp45 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp45 + getCotrn0ai().getTrnid08f();
    }

    public void setOFFILLER46(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid08l(0);
        }
    }

    public String getTrnid08c() {
        return getCotrn0ai().getOFFILLER91().substring(0, 1);
    }

    public void setTrnid08c(String source) {
        getCotrn0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER91(), source, 0, 1));
    }

    public String getTrnid08p() {
        return getCotrn0ai().getOFFILLER91().substring(1, 2);
    }

    public void setTrnid08p(String source) {
        getCotrn0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER91(), source, 1, 2));
    }

    public String getTrnid08h() {
        return getCotrn0ai().getOFFILLER91().substring(2, 3);
    }

    public void setTrnid08h(String source) {
        getCotrn0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER91(), source, 2, 3));
    }

    public String getTrnid08v() {
        return getCotrn0ai().getOFFILLER91().substring(3);
    }

    public void setTrnid08v(String source) {
        getCotrn0ai().setOFFILLER91(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER91(), source, 3, 4));
    }

    public String getTrnid08o() {
        return getCotrn0ai().getTrnid08i();
    }

    public void setTrnid08o(String source) {
        getCotrn0ai().setTrnid08i(source);
    }

    public String getOFFILLER47() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate08l());
        tempByteBuffer1.flip();
        String temp46 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp46 + getCotrn0ai().getTdate08f();
    }

    public void setOFFILLER47(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate08l(0);
        }
    }

    public String getTdate08c() {
        return getCotrn0ai().getOFFILLER93().substring(0, 1);
    }

    public void setTdate08c(String source) {
        getCotrn0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER93(), source, 0, 1));
    }

    public String getTdate08p() {
        return getCotrn0ai().getOFFILLER93().substring(1, 2);
    }

    public void setTdate08p(String source) {
        getCotrn0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER93(), source, 1, 2));
    }

    public String getTdate08h() {
        return getCotrn0ai().getOFFILLER93().substring(2, 3);
    }

    public void setTdate08h(String source) {
        getCotrn0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER93(), source, 2, 3));
    }

    public String getTdate08v() {
        return getCotrn0ai().getOFFILLER93().substring(3);
    }

    public void setTdate08v(String source) {
        getCotrn0ai().setOFFILLER93(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER93(), source, 3, 4));
    }

    public String getTdate08o() {
        return getCotrn0ai().getTdate08i();
    }

    public void setTdate08o(String source) {
        getCotrn0ai().setTdate08i(source);
    }

    public String getOFFILLER48() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc08l());
        tempByteBuffer1.flip();
        String temp47 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp47 + getCotrn0ai().getTdesc08f();
    }

    public void setOFFILLER48(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc08l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc08l(0);
        }
    }

    public String getTdesc08c() {
        return getCotrn0ai().getOFFILLER95().substring(0, 1);
    }

    public void setTdesc08c(String source) {
        getCotrn0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER95(), source, 0, 1));
    }

    public String getTdesc08p() {
        return getCotrn0ai().getOFFILLER95().substring(1, 2);
    }

    public void setTdesc08p(String source) {
        getCotrn0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER95(), source, 1, 2));
    }

    public String getTdesc08h() {
        return getCotrn0ai().getOFFILLER95().substring(2, 3);
    }

    public void setTdesc08h(String source) {
        getCotrn0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER95(), source, 2, 3));
    }

    public String getTdesc08v() {
        return getCotrn0ai().getOFFILLER95().substring(3);
    }

    public void setTdesc08v(String source) {
        getCotrn0ai().setOFFILLER95(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER95(), source, 3, 4));
    }

    public String getTdesc08o() {
        return getCotrn0ai().getTdesc08i();
    }

    public void setTdesc08o(String source) {
        getCotrn0ai().setTdesc08i(source);
    }

    public String getOFFILLER49() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt008l());
        tempByteBuffer1.flip();
        String temp48 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp48 + getCotrn0ai().getTamt008f();
    }

    public void setOFFILLER49(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt008l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt008l(0);
        }
    }

    public String getTamt008c() {
        return getCotrn0ai().getOFFILLER97().substring(0, 1);
    }

    public void setTamt008c(String source) {
        getCotrn0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER97(), source, 0, 1));
    }

    public String getTamt008p() {
        return getCotrn0ai().getOFFILLER97().substring(1, 2);
    }

    public void setTamt008p(String source) {
        getCotrn0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER97(), source, 1, 2));
    }

    public String getTamt008h() {
        return getCotrn0ai().getOFFILLER97().substring(2, 3);
    }

    public void setTamt008h(String source) {
        getCotrn0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER97(), source, 2, 3));
    }

    public String getTamt008v() {
        return getCotrn0ai().getOFFILLER97().substring(3);
    }

    public void setTamt008v(String source) {
        getCotrn0ai().setOFFILLER97(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER97(), source, 3, 4));
    }

    public String getTamt008o() {
        return getCotrn0ai().getTamt008i();
    }

    public void setTamt008o(String source) {
        getCotrn0ai().setTamt008i(source);
    }

    public String getOFFILLER50() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0009l());
        tempByteBuffer1.flip();
        String temp49 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp49 + getCotrn0ai().getSel0009f();
    }

    public void setOFFILLER50(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0009l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0009l(0);
        }
    }

    public String getSel0009c() {
        return getCotrn0ai().getOFFILLER99().substring(0, 1);
    }

    public void setSel0009c(String source) {
        getCotrn0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER99(), source, 0, 1));
    }

    public String getSel0009p() {
        return getCotrn0ai().getOFFILLER99().substring(1, 2);
    }

    public void setSel0009p(String source) {
        getCotrn0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER99(), source, 1, 2));
    }

    public String getSel0009h() {
        return getCotrn0ai().getOFFILLER99().substring(2, 3);
    }

    public void setSel0009h(String source) {
        getCotrn0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER99(), source, 2, 3));
    }

    public String getSel0009v() {
        return getCotrn0ai().getOFFILLER99().substring(3);
    }

    public void setSel0009v(String source) {
        getCotrn0ai().setOFFILLER99(
                StringUtils
                        .overlay(getCotrn0ai().getOFFILLER99(), source, 3, 4));
    }

    public String getSel0009o() {
        return getCotrn0ai().getSel0009i();
    }

    public void setSel0009o(String source) {
        getCotrn0ai().setSel0009i(source);
    }

    public String getOFFILLER51() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid09l());
        tempByteBuffer1.flip();
        String temp50 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp50 + getCotrn0ai().getTrnid09f();
    }

    public void setOFFILLER51(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid09l(0);
        }
    }

    public String getTrnid09c() {
        return getCotrn0ai().getOFFILLER101().substring(0, 1);
    }

    public void setTrnid09c(String source) {
        getCotrn0ai().setOFFILLER101(
                StringUtils.overlay(getCotrn0ai().getOFFILLER101(), source, 0,
                        1));
    }

    public String getTrnid09p() {
        return getCotrn0ai().getOFFILLER101().substring(1, 2);
    }

    public void setTrnid09p(String source) {
        getCotrn0ai().setOFFILLER101(
                StringUtils.overlay(getCotrn0ai().getOFFILLER101(), source, 1,
                        2));
    }

    public String getTrnid09h() {
        return getCotrn0ai().getOFFILLER101().substring(2, 3);
    }

    public void setTrnid09h(String source) {
        getCotrn0ai().setOFFILLER101(
                StringUtils.overlay(getCotrn0ai().getOFFILLER101(), source, 2,
                        3));
    }

    public String getTrnid09v() {
        return getCotrn0ai().getOFFILLER101().substring(3);
    }

    public void setTrnid09v(String source) {
        getCotrn0ai().setOFFILLER101(
                StringUtils.overlay(getCotrn0ai().getOFFILLER101(), source, 3,
                        4));
    }

    public String getTrnid09o() {
        return getCotrn0ai().getTrnid09i();
    }

    public void setTrnid09o(String source) {
        getCotrn0ai().setTrnid09i(source);
    }

    public String getOFFILLER52() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate09l());
        tempByteBuffer1.flip();
        String temp51 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp51 + getCotrn0ai().getTdate09f();
    }

    public void setOFFILLER52(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate09l(0);
        }
    }

    public String getTdate09c() {
        return getCotrn0ai().getOFFILLER103().substring(0, 1);
    }

    public void setTdate09c(String source) {
        getCotrn0ai().setOFFILLER103(
                StringUtils.overlay(getCotrn0ai().getOFFILLER103(), source, 0,
                        1));
    }

    public String getTdate09p() {
        return getCotrn0ai().getOFFILLER103().substring(1, 2);
    }

    public void setTdate09p(String source) {
        getCotrn0ai().setOFFILLER103(
                StringUtils.overlay(getCotrn0ai().getOFFILLER103(), source, 1,
                        2));
    }

    public String getTdate09h() {
        return getCotrn0ai().getOFFILLER103().substring(2, 3);
    }

    public void setTdate09h(String source) {
        getCotrn0ai().setOFFILLER103(
                StringUtils.overlay(getCotrn0ai().getOFFILLER103(), source, 2,
                        3));
    }

    public String getTdate09v() {
        return getCotrn0ai().getOFFILLER103().substring(3);
    }

    public void setTdate09v(String source) {
        getCotrn0ai().setOFFILLER103(
                StringUtils.overlay(getCotrn0ai().getOFFILLER103(), source, 3,
                        4));
    }

    public String getTdate09o() {
        return getCotrn0ai().getTdate09i();
    }

    public void setTdate09o(String source) {
        getCotrn0ai().setTdate09i(source);
    }

    public String getOFFILLER53() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc09l());
        tempByteBuffer1.flip();
        String temp52 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp52 + getCotrn0ai().getTdesc09f();
    }

    public void setOFFILLER53(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc09l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc09l(0);
        }
    }

    public String getTdesc09c() {
        return getCotrn0ai().getOFFILLER105().substring(0, 1);
    }

    public void setTdesc09c(String source) {
        getCotrn0ai().setOFFILLER105(
                StringUtils.overlay(getCotrn0ai().getOFFILLER105(), source, 0,
                        1));
    }

    public String getTdesc09p() {
        return getCotrn0ai().getOFFILLER105().substring(1, 2);
    }

    public void setTdesc09p(String source) {
        getCotrn0ai().setOFFILLER105(
                StringUtils.overlay(getCotrn0ai().getOFFILLER105(), source, 1,
                        2));
    }

    public String getTdesc09h() {
        return getCotrn0ai().getOFFILLER105().substring(2, 3);
    }

    public void setTdesc09h(String source) {
        getCotrn0ai().setOFFILLER105(
                StringUtils.overlay(getCotrn0ai().getOFFILLER105(), source, 2,
                        3));
    }

    public String getTdesc09v() {
        return getCotrn0ai().getOFFILLER105().substring(3);
    }

    public void setTdesc09v(String source) {
        getCotrn0ai().setOFFILLER105(
                StringUtils.overlay(getCotrn0ai().getOFFILLER105(), source, 3,
                        4));
    }

    public String getTdesc09o() {
        return getCotrn0ai().getTdesc09i();
    }

    public void setTdesc09o(String source) {
        getCotrn0ai().setTdesc09i(source);
    }

    public String getOFFILLER54() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt009l());
        tempByteBuffer1.flip();
        String temp53 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp53 + getCotrn0ai().getTamt009f();
    }

    public void setOFFILLER54(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt009l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt009l(0);
        }
    }

    public String getTamt009c() {
        return getCotrn0ai().getOFFILLER107().substring(0, 1);
    }

    public void setTamt009c(String source) {
        getCotrn0ai().setOFFILLER107(
                StringUtils.overlay(getCotrn0ai().getOFFILLER107(), source, 0,
                        1));
    }

    public String getTamt009p() {
        return getCotrn0ai().getOFFILLER107().substring(1, 2);
    }

    public void setTamt009p(String source) {
        getCotrn0ai().setOFFILLER107(
                StringUtils.overlay(getCotrn0ai().getOFFILLER107(), source, 1,
                        2));
    }

    public String getTamt009h() {
        return getCotrn0ai().getOFFILLER107().substring(2, 3);
    }

    public void setTamt009h(String source) {
        getCotrn0ai().setOFFILLER107(
                StringUtils.overlay(getCotrn0ai().getOFFILLER107(), source, 2,
                        3));
    }

    public String getTamt009v() {
        return getCotrn0ai().getOFFILLER107().substring(3);
    }

    public void setTamt009v(String source) {
        getCotrn0ai().setOFFILLER107(
                StringUtils.overlay(getCotrn0ai().getOFFILLER107(), source, 3,
                        4));
    }

    public String getTamt009o() {
        return getCotrn0ai().getTamt009i();
    }

    public void setTamt009o(String source) {
        getCotrn0ai().setTamt009i(source);
    }

    public String getOFFILLER55() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getSel0010l());
        tempByteBuffer1.flip();
        String temp54 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp54 + getCotrn0ai().getSel0010f();
    }

    public void setOFFILLER55(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setSel0010l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setSel0010l(0);
        }
    }

    public String getSel0010c() {
        return getCotrn0ai().getOFFILLER109().substring(0, 1);
    }

    public void setSel0010c(String source) {
        getCotrn0ai().setOFFILLER109(
                StringUtils.overlay(getCotrn0ai().getOFFILLER109(), source, 0,
                        1));
    }

    public String getSel0010p() {
        return getCotrn0ai().getOFFILLER109().substring(1, 2);
    }

    public void setSel0010p(String source) {
        getCotrn0ai().setOFFILLER109(
                StringUtils.overlay(getCotrn0ai().getOFFILLER109(), source, 1,
                        2));
    }

    public String getSel0010h() {
        return getCotrn0ai().getOFFILLER109().substring(2, 3);
    }

    public void setSel0010h(String source) {
        getCotrn0ai().setOFFILLER109(
                StringUtils.overlay(getCotrn0ai().getOFFILLER109(), source, 2,
                        3));
    }

    public String getSel0010v() {
        return getCotrn0ai().getOFFILLER109().substring(3);
    }

    public void setSel0010v(String source) {
        getCotrn0ai().setOFFILLER109(
                StringUtils.overlay(getCotrn0ai().getOFFILLER109(), source, 3,
                        4));
    }

    public String getSel0010o() {
        return getCotrn0ai().getSel0010i();
    }

    public void setSel0010o(String source) {
        getCotrn0ai().setSel0010i(source);
    }

    public String getOFFILLER56() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTrnid10l());
        tempByteBuffer1.flip();
        String temp55 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp55 + getCotrn0ai().getTrnid10f();
    }

    public void setOFFILLER56(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTrnid10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTrnid10l(0);
        }
    }

    public String getTrnid10c() {
        return getCotrn0ai().getOFFILLER111().substring(0, 1);
    }

    public void setTrnid10c(String source) {
        getCotrn0ai().setOFFILLER111(
                StringUtils.overlay(getCotrn0ai().getOFFILLER111(), source, 0,
                        1));
    }

    public String getTrnid10p() {
        return getCotrn0ai().getOFFILLER111().substring(1, 2);
    }

    public void setTrnid10p(String source) {
        getCotrn0ai().setOFFILLER111(
                StringUtils.overlay(getCotrn0ai().getOFFILLER111(), source, 1,
                        2));
    }

    public String getTrnid10h() {
        return getCotrn0ai().getOFFILLER111().substring(2, 3);
    }

    public void setTrnid10h(String source) {
        getCotrn0ai().setOFFILLER111(
                StringUtils.overlay(getCotrn0ai().getOFFILLER111(), source, 2,
                        3));
    }

    public String getTrnid10v() {
        return getCotrn0ai().getOFFILLER111().substring(3);
    }

    public void setTrnid10v(String source) {
        getCotrn0ai().setOFFILLER111(
                StringUtils.overlay(getCotrn0ai().getOFFILLER111(), source, 3,
                        4));
    }

    public String getTrnid10o() {
        return getCotrn0ai().getTrnid10i();
    }

    public void setTrnid10o(String source) {
        getCotrn0ai().setTrnid10i(source);
    }

    public String getOFFILLER57() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdate10l());
        tempByteBuffer1.flip();
        String temp56 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp56 + getCotrn0ai().getTdate10f();
    }

    public void setOFFILLER57(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdate10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdate10l(0);
        }
    }

    public String getTdate10c() {
        return getCotrn0ai().getOFFILLER113().substring(0, 1);
    }

    public void setTdate10c(String source) {
        getCotrn0ai().setOFFILLER113(
                StringUtils.overlay(getCotrn0ai().getOFFILLER113(), source, 0,
                        1));
    }

    public String getTdate10p() {
        return getCotrn0ai().getOFFILLER113().substring(1, 2);
    }

    public void setTdate10p(String source) {
        getCotrn0ai().setOFFILLER113(
                StringUtils.overlay(getCotrn0ai().getOFFILLER113(), source, 1,
                        2));
    }

    public String getTdate10h() {
        return getCotrn0ai().getOFFILLER113().substring(2, 3);
    }

    public void setTdate10h(String source) {
        getCotrn0ai().setOFFILLER113(
                StringUtils.overlay(getCotrn0ai().getOFFILLER113(), source, 2,
                        3));
    }

    public String getTdate10v() {
        return getCotrn0ai().getOFFILLER113().substring(3);
    }

    public void setTdate10v(String source) {
        getCotrn0ai().setOFFILLER113(
                StringUtils.overlay(getCotrn0ai().getOFFILLER113(), source, 3,
                        4));
    }

    public String getTdate10o() {
        return getCotrn0ai().getTdate10i();
    }

    public void setTdate10o(String source) {
        getCotrn0ai().setTdate10i(source);
    }

    public String getOFFILLER58() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTdesc10l());
        tempByteBuffer1.flip();
        String temp57 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp57 + getCotrn0ai().getTdesc10f();
    }

    public void setOFFILLER58(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTdesc10l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTdesc10l(0);
        }
    }

    public String getTdesc10c() {
        return getCotrn0ai().getOFFILLER115().substring(0, 1);
    }

    public void setTdesc10c(String source) {
        getCotrn0ai().setOFFILLER115(
                StringUtils.overlay(getCotrn0ai().getOFFILLER115(), source, 0,
                        1));
    }

    public String getTdesc10p() {
        return getCotrn0ai().getOFFILLER115().substring(1, 2);
    }

    public void setTdesc10p(String source) {
        getCotrn0ai().setOFFILLER115(
                StringUtils.overlay(getCotrn0ai().getOFFILLER115(), source, 1,
                        2));
    }

    public String getTdesc10h() {
        return getCotrn0ai().getOFFILLER115().substring(2, 3);
    }

    public void setTdesc10h(String source) {
        getCotrn0ai().setOFFILLER115(
                StringUtils.overlay(getCotrn0ai().getOFFILLER115(), source, 2,
                        3));
    }

    public String getTdesc10v() {
        return getCotrn0ai().getOFFILLER115().substring(3);
    }

    public void setTdesc10v(String source) {
        getCotrn0ai().setOFFILLER115(
                StringUtils.overlay(getCotrn0ai().getOFFILLER115(), source, 3,
                        4));
    }

    public String getTdesc10o() {
        return getCotrn0ai().getTdesc10i();
    }

    public void setTdesc10o(String source) {
        getCotrn0ai().setTdesc10i(source);
    }

    public String getOFFILLER59() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getTamt010l());
        tempByteBuffer1.flip();
        String temp58 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp58 + getCotrn0ai().getTamt010f();
    }

    public void setOFFILLER59(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setTamt010l(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setTamt010l(0);
        }
    }

    public String getTamt010c() {
        return getCotrn0ai().getOFFILLER117().substring(0, 1);
    }

    public void setTamt010c(String source) {
        getCotrn0ai().setOFFILLER117(
                StringUtils.overlay(getCotrn0ai().getOFFILLER117(), source, 0,
                        1));
    }

    public String getTamt010p() {
        return getCotrn0ai().getOFFILLER117().substring(1, 2);
    }

    public void setTamt010p(String source) {
        getCotrn0ai().setOFFILLER117(
                StringUtils.overlay(getCotrn0ai().getOFFILLER117(), source, 1,
                        2));
    }

    public String getTamt010h() {
        return getCotrn0ai().getOFFILLER117().substring(2, 3);
    }

    public void setTamt010h(String source) {
        getCotrn0ai().setOFFILLER117(
                StringUtils.overlay(getCotrn0ai().getOFFILLER117(), source, 2,
                        3));
    }

    public String getTamt010v() {
        return getCotrn0ai().getOFFILLER117().substring(3);
    }

    public void setTamt010v(String source) {
        getCotrn0ai().setOFFILLER117(
                StringUtils.overlay(getCotrn0ai().getOFFILLER117(), source, 3,
                        4));
    }

    public String getTamt010o() {
        return getCotrn0ai().getTamt010i();
    }

    public void setTamt010o(String source) {
        getCotrn0ai().setTamt010i(source);
    }

    public String getOFFILLER60() {
        ByteBuffer tempByteBuffer1;
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) getCotrn0ai().getErrmsgl());
        tempByteBuffer1.flip();
        String temp59 = StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString();
        return temp59 + getCotrn0ai().getErrmsgf();
    }

    public void setOFFILLER60(String source) {
        ByteBuffer tempByteBuffer1;
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            getCotrn0ai().setErrmsgl(tempByteBuffer1.getShort());
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            getCotrn0ai().setErrmsgl(0);
        }
    }

    public String getErrmsgc() {
        return getCotrn0ai().getOFFILLER119().substring(0, 1);
    }

    public void setErrmsgc(String source) {
        getCotrn0ai().setOFFILLER119(
                StringUtils.overlay(getCotrn0ai().getOFFILLER119(), source, 0,
                        1));
    }

    public String getErrmsgp() {
        return getCotrn0ai().getOFFILLER119().substring(1, 2);
    }

    public void setErrmsgp(String source) {
        getCotrn0ai().setOFFILLER119(
                StringUtils.overlay(getCotrn0ai().getOFFILLER119(), source, 1,
                        2));
    }

    public String getErrmsgh() {
        return getCotrn0ai().getOFFILLER119().substring(2, 3);
    }

    public void setErrmsgh(String source) {
        getCotrn0ai().setOFFILLER119(
                StringUtils.overlay(getCotrn0ai().getOFFILLER119(), source, 2,
                        3));
    }

    public String getErrmsgv() {
        return getCotrn0ai().getOFFILLER119().substring(3);
    }

    public void setErrmsgv(String source) {
        getCotrn0ai().setOFFILLER119(
                StringUtils.overlay(getCotrn0ai().getOFFILLER119(), source, 3,
                        4));
    }

    public String getErrmsgo() {
        return getCotrn0ai().getErrmsgi();
    }

    public void setErrmsgo(String source) {
        getCotrn0ai().setErrmsgi(source);
    }

    //       *COPY COTTL01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/COTTL01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][COTTL01Y.cpy, LINE #18] CCDA-SCREEN-TITLE (level: 1)
    private @Getter @Setter Cotrn00cCcdaScreenTitle ccdaScreenTitle = new Cotrn00cCcdaScreenTitle();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CSDAT01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSDAT01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSDAT01Y.cpy, LINE #18] WS-DATE-TIME (level: 1)
    private @Getter @Setter Cotrn00cWsDateTime wsDateTime = new Cotrn00cWsDateTime();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CSMSG01Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSMSG01Y.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // [T-Up#INFO][CSMSG01Y.cpy, LINE #18] CCDA-COMMON-MESSAGES (level: 1)
    private @Getter @Setter Cotrn00cCcdaCommonMessages ccdaCommonMessages = new Cotrn00cCcdaCommonMessages();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:58 CDT 
    // *                                                                 
    //       *COPY CVTRA05Y.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CVTRA05Y.cpy)
    // ***************************************************************** 
    // *    Data-structure for TRANsaction record (RECLN = 350)          
    // ***************************************************************** 
    // [T-Up#INFO][CVTRA05Y.cpy, LINE #5] TRAN-RECORD (level: 1)
    private @Getter @Setter Cotrn00cTranRecord tranRecord = new Cotrn00cTranRecord();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:16:01 CDT 
    // *                                                                 
    //       *COPY DFHAID.                                                     
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/.default/DFHAID.cpy)  
    // [T-Up#INFO][DFHAID.cpy, LINE #2] DFHAID (level: 1)
    private @Getter @Setter Cotrn00cDfhaid dfhaid = new Cotrn00cDfhaid();
    //       *COPY DFHBMSCA.                                                   
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/.default/DFHBMSCA.cpy)
    // [T-Up#INFO][DFHBMSCA.cpy, LINE #2] DFHBMSCA (level: 1)
    private @Getter @Setter Cotrn00cDfhbmsca dfhbmsca = new Cotrn00cDfhbmsca();
    // *----------------------------------------------------------------*
    // *                        LINKAGE SECTION                          
    // *----------------------------------------------------------------*
    // [T-Up#INFO][COTRN00C.cbl, LINE #87] DFHCOMMAREA (level: 1)
    private @Getter @Setter Cotrn00cDfhcommarea dfhcommarea = new Cotrn00cDfhcommarea();

    public static @Setter(AccessLevel.PRIVATE) @Accessors(chain = true) class Cotrn00cCotrn0ao {
        // [T-Up#INFO][COTRN00.CPY, LINE #375] FILLER (level: 2)
        private @Getter String OFFILLER1 = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #376] FILLER (level: 2)
        private @Getter String OFFILLER2 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #377] TRNNAMEC (level: 2)
        private @Getter String trnnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #378] TRNNAMEP (level: 2)
        private @Getter String trnnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #379] TRNNAMEH (level: 2)
        private @Getter String trnnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #380] TRNNAMEV (level: 2)
        private @Getter String trnnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #381] TRNNAMEO (level: 2)
        private @Getter String trnnameo = StringUtils.repeat(' ', 4);
        // [T-Up#INFO][COTRN00.CPY, LINE #382] FILLER (level: 2)
        private @Getter String OFFILLER3 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #383] TITLE01C (level: 2)
        private @Getter String title01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #384] TITLE01P (level: 2)
        private @Getter String title01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #385] TITLE01H (level: 2)
        private @Getter String title01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #386] TITLE01V (level: 2)
        private @Getter String title01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #387] TITLE01O (level: 2)
        private @Getter String title01o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COTRN00.CPY, LINE #388] FILLER (level: 2)
        private @Getter String OFFILLER4 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #389] CURDATEC (level: 2)
        private @Getter String curdatec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #390] CURDATEP (level: 2)
        private @Getter String curdatep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #391] CURDATEH (level: 2)
        private @Getter String curdateh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #392] CURDATEV (level: 2)
        private @Getter String curdatev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #393] CURDATEO (level: 2)
        private @Getter String curdateo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #394] FILLER (level: 2)
        private @Getter String OFFILLER5 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #395] PGMNAMEC (level: 2)
        private @Getter String pgmnamec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #396] PGMNAMEP (level: 2)
        private @Getter String pgmnamep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #397] PGMNAMEH (level: 2)
        private @Getter String pgmnameh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #398] PGMNAMEV (level: 2)
        private @Getter String pgmnamev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #399] PGMNAMEO (level: 2)
        private @Getter String pgmnameo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #400] FILLER (level: 2)
        private @Getter String OFFILLER6 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #401] TITLE02C (level: 2)
        private @Getter String title02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #402] TITLE02P (level: 2)
        private @Getter String title02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #403] TITLE02H (level: 2)
        private @Getter String title02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #404] TITLE02V (level: 2)
        private @Getter String title02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #405] TITLE02O (level: 2)
        private @Getter String title02o = StringUtils.repeat(' ', 40);
        // [T-Up#INFO][COTRN00.CPY, LINE #406] FILLER (level: 2)
        private @Getter String OFFILLER7 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #407] CURTIMEC (level: 2)
        private @Getter String curtimec = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #408] CURTIMEP (level: 2)
        private @Getter String curtimep = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #409] CURTIMEH (level: 2)
        private @Getter String curtimeh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #410] CURTIMEV (level: 2)
        private @Getter String curtimev = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #411] CURTIMEO (level: 2)
        private @Getter String curtimeo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #412] FILLER (level: 2)
        private @Getter String OFFILLER8 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #413] PAGENUMC (level: 2)
        private @Getter String pagenumc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #414] PAGENUMP (level: 2)
        private @Getter String pagenump = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #415] PAGENUMH (level: 2)
        private @Getter String pagenumh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #416] PAGENUMV (level: 2)
        private @Getter String pagenumv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #417] PAGENUMO (level: 2)
        private @Getter String pagenumo = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #418] FILLER (level: 2)
        private @Getter String OFFILLER9 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #419] TRNIDINC (level: 2)
        private @Getter String trnidinc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #420] TRNIDINP (level: 2)
        private @Getter String trnidinp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #421] TRNIDINH (level: 2)
        private @Getter String trnidinh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #422] TRNIDINV (level: 2)
        private @Getter String trnidinv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #423] TRNIDINO (level: 2)
        private @Getter String trnidino = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #424] FILLER (level: 2)
        private @Getter String OFFILLER10 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #425] SEL0001C (level: 2)
        private @Getter String sel0001c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #426] SEL0001P (level: 2)
        private @Getter String sel0001p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #427] SEL0001H (level: 2)
        private @Getter String sel0001h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #428] SEL0001V (level: 2)
        private @Getter String sel0001v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #429] SEL0001O (level: 2)
        private @Getter String sel0001o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #430] FILLER (level: 2)
        private @Getter String OFFILLER11 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #431] TRNID01C (level: 2)
        private @Getter String trnid01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #432] TRNID01P (level: 2)
        private @Getter String trnid01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #433] TRNID01H (level: 2)
        private @Getter String trnid01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #434] TRNID01V (level: 2)
        private @Getter String trnid01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #435] TRNID01O (level: 2)
        private @Getter String trnid01o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #436] FILLER (level: 2)
        private @Getter String OFFILLER12 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #437] TDATE01C (level: 2)
        private @Getter String tdate01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #438] TDATE01P (level: 2)
        private @Getter String tdate01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #439] TDATE01H (level: 2)
        private @Getter String tdate01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #440] TDATE01V (level: 2)
        private @Getter String tdate01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #441] TDATE01O (level: 2)
        private @Getter String tdate01o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #442] FILLER (level: 2)
        private @Getter String OFFILLER13 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #443] TDESC01C (level: 2)
        private @Getter String tdesc01c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #444] TDESC01P (level: 2)
        private @Getter String tdesc01p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #445] TDESC01H (level: 2)
        private @Getter String tdesc01h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #446] TDESC01V (level: 2)
        private @Getter String tdesc01v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #447] TDESC01O (level: 2)
        private @Getter String tdesc01o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #448] FILLER (level: 2)
        private @Getter String OFFILLER14 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #449] TAMT001C (level: 2)
        private @Getter String tamt001c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #450] TAMT001P (level: 2)
        private @Getter String tamt001p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #451] TAMT001H (level: 2)
        private @Getter String tamt001h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #452] TAMT001V (level: 2)
        private @Getter String tamt001v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #453] TAMT001O (level: 2)
        private @Getter String tamt001o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #454] FILLER (level: 2)
        private @Getter String OFFILLER15 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #455] SEL0002C (level: 2)
        private @Getter String sel0002c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #456] SEL0002P (level: 2)
        private @Getter String sel0002p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #457] SEL0002H (level: 2)
        private @Getter String sel0002h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #458] SEL0002V (level: 2)
        private @Getter String sel0002v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #459] SEL0002O (level: 2)
        private @Getter String sel0002o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #460] FILLER (level: 2)
        private @Getter String OFFILLER16 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #461] TRNID02C (level: 2)
        private @Getter String trnid02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #462] TRNID02P (level: 2)
        private @Getter String trnid02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #463] TRNID02H (level: 2)
        private @Getter String trnid02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #464] TRNID02V (level: 2)
        private @Getter String trnid02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #465] TRNID02O (level: 2)
        private @Getter String trnid02o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #466] FILLER (level: 2)
        private @Getter String OFFILLER17 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #467] TDATE02C (level: 2)
        private @Getter String tdate02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #468] TDATE02P (level: 2)
        private @Getter String tdate02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #469] TDATE02H (level: 2)
        private @Getter String tdate02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #470] TDATE02V (level: 2)
        private @Getter String tdate02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #471] TDATE02O (level: 2)
        private @Getter String tdate02o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #472] FILLER (level: 2)
        private @Getter String OFFILLER18 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #473] TDESC02C (level: 2)
        private @Getter String tdesc02c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #474] TDESC02P (level: 2)
        private @Getter String tdesc02p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #475] TDESC02H (level: 2)
        private @Getter String tdesc02h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #476] TDESC02V (level: 2)
        private @Getter String tdesc02v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #477] TDESC02O (level: 2)
        private @Getter String tdesc02o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #478] FILLER (level: 2)
        private @Getter String OFFILLER19 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #479] TAMT002C (level: 2)
        private @Getter String tamt002c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #480] TAMT002P (level: 2)
        private @Getter String tamt002p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #481] TAMT002H (level: 2)
        private @Getter String tamt002h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #482] TAMT002V (level: 2)
        private @Getter String tamt002v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #483] TAMT002O (level: 2)
        private @Getter String tamt002o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #484] FILLER (level: 2)
        private @Getter String OFFILLER20 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #485] SEL0003C (level: 2)
        private @Getter String sel0003c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #486] SEL0003P (level: 2)
        private @Getter String sel0003p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #487] SEL0003H (level: 2)
        private @Getter String sel0003h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #488] SEL0003V (level: 2)
        private @Getter String sel0003v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #489] SEL0003O (level: 2)
        private @Getter String sel0003o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #490] FILLER (level: 2)
        private @Getter String OFFILLER21 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #491] TRNID03C (level: 2)
        private @Getter String trnid03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #492] TRNID03P (level: 2)
        private @Getter String trnid03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #493] TRNID03H (level: 2)
        private @Getter String trnid03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #494] TRNID03V (level: 2)
        private @Getter String trnid03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #495] TRNID03O (level: 2)
        private @Getter String trnid03o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #496] FILLER (level: 2)
        private @Getter String OFFILLER22 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #497] TDATE03C (level: 2)
        private @Getter String tdate03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #498] TDATE03P (level: 2)
        private @Getter String tdate03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #499] TDATE03H (level: 2)
        private @Getter String tdate03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #500] TDATE03V (level: 2)
        private @Getter String tdate03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #501] TDATE03O (level: 2)
        private @Getter String tdate03o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #502] FILLER (level: 2)
        private @Getter String OFFILLER23 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #503] TDESC03C (level: 2)
        private @Getter String tdesc03c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #504] TDESC03P (level: 2)
        private @Getter String tdesc03p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #505] TDESC03H (level: 2)
        private @Getter String tdesc03h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #506] TDESC03V (level: 2)
        private @Getter String tdesc03v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #507] TDESC03O (level: 2)
        private @Getter String tdesc03o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #508] FILLER (level: 2)
        private @Getter String OFFILLER24 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #509] TAMT003C (level: 2)
        private @Getter String tamt003c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #510] TAMT003P (level: 2)
        private @Getter String tamt003p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #511] TAMT003H (level: 2)
        private @Getter String tamt003h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #512] TAMT003V (level: 2)
        private @Getter String tamt003v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #513] TAMT003O (level: 2)
        private @Getter String tamt003o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #514] FILLER (level: 2)
        private @Getter String OFFILLER25 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #515] SEL0004C (level: 2)
        private @Getter String sel0004c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #516] SEL0004P (level: 2)
        private @Getter String sel0004p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #517] SEL0004H (level: 2)
        private @Getter String sel0004h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #518] SEL0004V (level: 2)
        private @Getter String sel0004v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #519] SEL0004O (level: 2)
        private @Getter String sel0004o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #520] FILLER (level: 2)
        private @Getter String OFFILLER26 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #521] TRNID04C (level: 2)
        private @Getter String trnid04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #522] TRNID04P (level: 2)
        private @Getter String trnid04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #523] TRNID04H (level: 2)
        private @Getter String trnid04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #524] TRNID04V (level: 2)
        private @Getter String trnid04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #525] TRNID04O (level: 2)
        private @Getter String trnid04o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #526] FILLER (level: 2)
        private @Getter String OFFILLER27 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #527] TDATE04C (level: 2)
        private @Getter String tdate04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #528] TDATE04P (level: 2)
        private @Getter String tdate04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #529] TDATE04H (level: 2)
        private @Getter String tdate04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #530] TDATE04V (level: 2)
        private @Getter String tdate04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #531] TDATE04O (level: 2)
        private @Getter String tdate04o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #532] FILLER (level: 2)
        private @Getter String OFFILLER28 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #533] TDESC04C (level: 2)
        private @Getter String tdesc04c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #534] TDESC04P (level: 2)
        private @Getter String tdesc04p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #535] TDESC04H (level: 2)
        private @Getter String tdesc04h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #536] TDESC04V (level: 2)
        private @Getter String tdesc04v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #537] TDESC04O (level: 2)
        private @Getter String tdesc04o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #538] FILLER (level: 2)
        private @Getter String OFFILLER29 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #539] TAMT004C (level: 2)
        private @Getter String tamt004c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #540] TAMT004P (level: 2)
        private @Getter String tamt004p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #541] TAMT004H (level: 2)
        private @Getter String tamt004h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #542] TAMT004V (level: 2)
        private @Getter String tamt004v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #543] TAMT004O (level: 2)
        private @Getter String tamt004o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #544] FILLER (level: 2)
        private @Getter String OFFILLER30 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #545] SEL0005C (level: 2)
        private @Getter String sel0005c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #546] SEL0005P (level: 2)
        private @Getter String sel0005p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #547] SEL0005H (level: 2)
        private @Getter String sel0005h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #548] SEL0005V (level: 2)
        private @Getter String sel0005v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #549] SEL0005O (level: 2)
        private @Getter String sel0005o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #550] FILLER (level: 2)
        private @Getter String OFFILLER31 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #551] TRNID05C (level: 2)
        private @Getter String trnid05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #552] TRNID05P (level: 2)
        private @Getter String trnid05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #553] TRNID05H (level: 2)
        private @Getter String trnid05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #554] TRNID05V (level: 2)
        private @Getter String trnid05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #555] TRNID05O (level: 2)
        private @Getter String trnid05o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #556] FILLER (level: 2)
        private @Getter String OFFILLER32 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #557] TDATE05C (level: 2)
        private @Getter String tdate05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #558] TDATE05P (level: 2)
        private @Getter String tdate05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #559] TDATE05H (level: 2)
        private @Getter String tdate05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #560] TDATE05V (level: 2)
        private @Getter String tdate05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #561] TDATE05O (level: 2)
        private @Getter String tdate05o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #562] FILLER (level: 2)
        private @Getter String OFFILLER33 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #563] TDESC05C (level: 2)
        private @Getter String tdesc05c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #564] TDESC05P (level: 2)
        private @Getter String tdesc05p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #565] TDESC05H (level: 2)
        private @Getter String tdesc05h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #566] TDESC05V (level: 2)
        private @Getter String tdesc05v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #567] TDESC05O (level: 2)
        private @Getter String tdesc05o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #568] FILLER (level: 2)
        private @Getter String OFFILLER34 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #569] TAMT005C (level: 2)
        private @Getter String tamt005c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #570] TAMT005P (level: 2)
        private @Getter String tamt005p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #571] TAMT005H (level: 2)
        private @Getter String tamt005h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #572] TAMT005V (level: 2)
        private @Getter String tamt005v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #573] TAMT005O (level: 2)
        private @Getter String tamt005o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #574] FILLER (level: 2)
        private @Getter String OFFILLER35 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #575] SEL0006C (level: 2)
        private @Getter String sel0006c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #576] SEL0006P (level: 2)
        private @Getter String sel0006p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #577] SEL0006H (level: 2)
        private @Getter String sel0006h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #578] SEL0006V (level: 2)
        private @Getter String sel0006v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #579] SEL0006O (level: 2)
        private @Getter String sel0006o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #580] FILLER (level: 2)
        private @Getter String OFFILLER36 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #581] TRNID06C (level: 2)
        private @Getter String trnid06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #582] TRNID06P (level: 2)
        private @Getter String trnid06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #583] TRNID06H (level: 2)
        private @Getter String trnid06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #584] TRNID06V (level: 2)
        private @Getter String trnid06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #585] TRNID06O (level: 2)
        private @Getter String trnid06o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #586] FILLER (level: 2)
        private @Getter String OFFILLER37 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #587] TDATE06C (level: 2)
        private @Getter String tdate06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #588] TDATE06P (level: 2)
        private @Getter String tdate06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #589] TDATE06H (level: 2)
        private @Getter String tdate06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #590] TDATE06V (level: 2)
        private @Getter String tdate06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #591] TDATE06O (level: 2)
        private @Getter String tdate06o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #592] FILLER (level: 2)
        private @Getter String OFFILLER38 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #593] TDESC06C (level: 2)
        private @Getter String tdesc06c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #594] TDESC06P (level: 2)
        private @Getter String tdesc06p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #595] TDESC06H (level: 2)
        private @Getter String tdesc06h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #596] TDESC06V (level: 2)
        private @Getter String tdesc06v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #597] TDESC06O (level: 2)
        private @Getter String tdesc06o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #598] FILLER (level: 2)
        private @Getter String OFFILLER39 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #599] TAMT006C (level: 2)
        private @Getter String tamt006c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #600] TAMT006P (level: 2)
        private @Getter String tamt006p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #601] TAMT006H (level: 2)
        private @Getter String tamt006h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #602] TAMT006V (level: 2)
        private @Getter String tamt006v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #603] TAMT006O (level: 2)
        private @Getter String tamt006o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #604] FILLER (level: 2)
        private @Getter String OFFILLER40 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #605] SEL0007C (level: 2)
        private @Getter String sel0007c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #606] SEL0007P (level: 2)
        private @Getter String sel0007p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #607] SEL0007H (level: 2)
        private @Getter String sel0007h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #608] SEL0007V (level: 2)
        private @Getter String sel0007v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #609] SEL0007O (level: 2)
        private @Getter String sel0007o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #610] FILLER (level: 2)
        private @Getter String OFFILLER41 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #611] TRNID07C (level: 2)
        private @Getter String trnid07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #612] TRNID07P (level: 2)
        private @Getter String trnid07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #613] TRNID07H (level: 2)
        private @Getter String trnid07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #614] TRNID07V (level: 2)
        private @Getter String trnid07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #615] TRNID07O (level: 2)
        private @Getter String trnid07o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #616] FILLER (level: 2)
        private @Getter String OFFILLER42 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #617] TDATE07C (level: 2)
        private @Getter String tdate07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #618] TDATE07P (level: 2)
        private @Getter String tdate07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #619] TDATE07H (level: 2)
        private @Getter String tdate07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #620] TDATE07V (level: 2)
        private @Getter String tdate07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #621] TDATE07O (level: 2)
        private @Getter String tdate07o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #622] FILLER (level: 2)
        private @Getter String OFFILLER43 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #623] TDESC07C (level: 2)
        private @Getter String tdesc07c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #624] TDESC07P (level: 2)
        private @Getter String tdesc07p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #625] TDESC07H (level: 2)
        private @Getter String tdesc07h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #626] TDESC07V (level: 2)
        private @Getter String tdesc07v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #627] TDESC07O (level: 2)
        private @Getter String tdesc07o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #628] FILLER (level: 2)
        private @Getter String OFFILLER44 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #629] TAMT007C (level: 2)
        private @Getter String tamt007c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #630] TAMT007P (level: 2)
        private @Getter String tamt007p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #631] TAMT007H (level: 2)
        private @Getter String tamt007h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #632] TAMT007V (level: 2)
        private @Getter String tamt007v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #633] TAMT007O (level: 2)
        private @Getter String tamt007o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #634] FILLER (level: 2)
        private @Getter String OFFILLER45 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #635] SEL0008C (level: 2)
        private @Getter String sel0008c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #636] SEL0008P (level: 2)
        private @Getter String sel0008p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #637] SEL0008H (level: 2)
        private @Getter String sel0008h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #638] SEL0008V (level: 2)
        private @Getter String sel0008v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #639] SEL0008O (level: 2)
        private @Getter String sel0008o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #640] FILLER (level: 2)
        private @Getter String OFFILLER46 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #641] TRNID08C (level: 2)
        private @Getter String trnid08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #642] TRNID08P (level: 2)
        private @Getter String trnid08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #643] TRNID08H (level: 2)
        private @Getter String trnid08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #644] TRNID08V (level: 2)
        private @Getter String trnid08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #645] TRNID08O (level: 2)
        private @Getter String trnid08o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #646] FILLER (level: 2)
        private @Getter String OFFILLER47 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #647] TDATE08C (level: 2)
        private @Getter String tdate08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #648] TDATE08P (level: 2)
        private @Getter String tdate08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #649] TDATE08H (level: 2)
        private @Getter String tdate08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #650] TDATE08V (level: 2)
        private @Getter String tdate08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #651] TDATE08O (level: 2)
        private @Getter String tdate08o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #652] FILLER (level: 2)
        private @Getter String OFFILLER48 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #653] TDESC08C (level: 2)
        private @Getter String tdesc08c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #654] TDESC08P (level: 2)
        private @Getter String tdesc08p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #655] TDESC08H (level: 2)
        private @Getter String tdesc08h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #656] TDESC08V (level: 2)
        private @Getter String tdesc08v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #657] TDESC08O (level: 2)
        private @Getter String tdesc08o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #658] FILLER (level: 2)
        private @Getter String OFFILLER49 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #659] TAMT008C (level: 2)
        private @Getter String tamt008c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #660] TAMT008P (level: 2)
        private @Getter String tamt008p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #661] TAMT008H (level: 2)
        private @Getter String tamt008h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #662] TAMT008V (level: 2)
        private @Getter String tamt008v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #663] TAMT008O (level: 2)
        private @Getter String tamt008o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #664] FILLER (level: 2)
        private @Getter String OFFILLER50 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #665] SEL0009C (level: 2)
        private @Getter String sel0009c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #666] SEL0009P (level: 2)
        private @Getter String sel0009p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #667] SEL0009H (level: 2)
        private @Getter String sel0009h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #668] SEL0009V (level: 2)
        private @Getter String sel0009v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #669] SEL0009O (level: 2)
        private @Getter String sel0009o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #670] FILLER (level: 2)
        private @Getter String OFFILLER51 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #671] TRNID09C (level: 2)
        private @Getter String trnid09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #672] TRNID09P (level: 2)
        private @Getter String trnid09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #673] TRNID09H (level: 2)
        private @Getter String trnid09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #674] TRNID09V (level: 2)
        private @Getter String trnid09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #675] TRNID09O (level: 2)
        private @Getter String trnid09o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #676] FILLER (level: 2)
        private @Getter String OFFILLER52 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #677] TDATE09C (level: 2)
        private @Getter String tdate09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #678] TDATE09P (level: 2)
        private @Getter String tdate09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #679] TDATE09H (level: 2)
        private @Getter String tdate09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #680] TDATE09V (level: 2)
        private @Getter String tdate09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #681] TDATE09O (level: 2)
        private @Getter String tdate09o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #682] FILLER (level: 2)
        private @Getter String OFFILLER53 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #683] TDESC09C (level: 2)
        private @Getter String tdesc09c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #684] TDESC09P (level: 2)
        private @Getter String tdesc09p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #685] TDESC09H (level: 2)
        private @Getter String tdesc09h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #686] TDESC09V (level: 2)
        private @Getter String tdesc09v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #687] TDESC09O (level: 2)
        private @Getter String tdesc09o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #688] FILLER (level: 2)
        private @Getter String OFFILLER54 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #689] TAMT009C (level: 2)
        private @Getter String tamt009c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #690] TAMT009P (level: 2)
        private @Getter String tamt009p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #691] TAMT009H (level: 2)
        private @Getter String tamt009h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #692] TAMT009V (level: 2)
        private @Getter String tamt009v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #693] TAMT009O (level: 2)
        private @Getter String tamt009o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #694] FILLER (level: 2)
        private @Getter String OFFILLER55 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #695] SEL0010C (level: 2)
        private @Getter String sel0010c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #696] SEL0010P (level: 2)
        private @Getter String sel0010p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #697] SEL0010H (level: 2)
        private @Getter String sel0010h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #698] SEL0010V (level: 2)
        private @Getter String sel0010v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #699] SEL0010O (level: 2)
        private @Getter String sel0010o = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #700] FILLER (level: 2)
        private @Getter String OFFILLER56 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #701] TRNID10C (level: 2)
        private @Getter String trnid10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #702] TRNID10P (level: 2)
        private @Getter String trnid10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #703] TRNID10H (level: 2)
        private @Getter String trnid10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #704] TRNID10V (level: 2)
        private @Getter String trnid10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #705] TRNID10O (level: 2)
        private @Getter String trnid10o = StringUtils.repeat(' ', 16);
        // [T-Up#INFO][COTRN00.CPY, LINE #706] FILLER (level: 2)
        private @Getter String OFFILLER57 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #707] TDATE10C (level: 2)
        private @Getter String tdate10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #708] TDATE10P (level: 2)
        private @Getter String tdate10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #709] TDATE10H (level: 2)
        private @Getter String tdate10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #710] TDATE10V (level: 2)
        private @Getter String tdate10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #711] TDATE10O (level: 2)
        private @Getter String tdate10o = StringUtils.repeat(' ', 8);
        // [T-Up#INFO][COTRN00.CPY, LINE #712] FILLER (level: 2)
        private @Getter String OFFILLER58 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #713] TDESC10C (level: 2)
        private @Getter String tdesc10c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #714] TDESC10P (level: 2)
        private @Getter String tdesc10p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #715] TDESC10H (level: 2)
        private @Getter String tdesc10h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #716] TDESC10V (level: 2)
        private @Getter String tdesc10v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #717] TDESC10O (level: 2)
        private @Getter String tdesc10o = StringUtils.repeat(' ', 26);
        // [T-Up#INFO][COTRN00.CPY, LINE #718] FILLER (level: 2)
        private @Getter String OFFILLER59 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #719] TAMT010C (level: 2)
        private @Getter String tamt010c = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #720] TAMT010P (level: 2)
        private @Getter String tamt010p = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #721] TAMT010H (level: 2)
        private @Getter String tamt010h = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #722] TAMT010V (level: 2)
        private @Getter String tamt010v = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #723] TAMT010O (level: 2)
        private @Getter String tamt010o = StringUtils.repeat(' ', 12);
        // [T-Up#INFO][COTRN00.CPY, LINE #724] FILLER (level: 2)
        private @Getter String OFFILLER60 = StringUtils.repeat(' ', 3);
        // [T-Up#INFO][COTRN00.CPY, LINE #725] ERRMSGC (level: 2)
        private @Getter String errmsgc = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #726] ERRMSGP (level: 2)
        private @Getter String errmsgp = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #727] ERRMSGH (level: 2)
        private @Getter String errmsgh = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #728] ERRMSGV (level: 2)
        private @Getter String errmsgv = StringUtils.repeat(' ', 1);
        // [T-Up#INFO][COTRN00.CPY, LINE #729] ERRMSGO (level: 2)
        private @Getter String errmsgo = StringUtils.repeat(' ', 78);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(OFFILLER2);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(OFFILLER3);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(OFFILLER4);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(OFFILLER5);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(OFFILLER6);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(OFFILLER7);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(OFFILLER8);
            sb.append(pagenumc);
            sb.append(pagenump);
            sb.append(pagenumh);
            sb.append(pagenumv);
            sb.append(pagenumo);
            sb.append(OFFILLER9);
            sb.append(trnidinc);
            sb.append(trnidinp);
            sb.append(trnidinh);
            sb.append(trnidinv);
            sb.append(trnidino);
            sb.append(OFFILLER10);
            sb.append(sel0001c);
            sb.append(sel0001p);
            sb.append(sel0001h);
            sb.append(sel0001v);
            sb.append(sel0001o);
            sb.append(OFFILLER11);
            sb.append(trnid01c);
            sb.append(trnid01p);
            sb.append(trnid01h);
            sb.append(trnid01v);
            sb.append(trnid01o);
            sb.append(OFFILLER12);
            sb.append(tdate01c);
            sb.append(tdate01p);
            sb.append(tdate01h);
            sb.append(tdate01v);
            sb.append(tdate01o);
            sb.append(OFFILLER13);
            sb.append(tdesc01c);
            sb.append(tdesc01p);
            sb.append(tdesc01h);
            sb.append(tdesc01v);
            sb.append(tdesc01o);
            sb.append(OFFILLER14);
            sb.append(tamt001c);
            sb.append(tamt001p);
            sb.append(tamt001h);
            sb.append(tamt001v);
            sb.append(tamt001o);
            sb.append(OFFILLER15);
            sb.append(sel0002c);
            sb.append(sel0002p);
            sb.append(sel0002h);
            sb.append(sel0002v);
            sb.append(sel0002o);
            sb.append(OFFILLER16);
            sb.append(trnid02c);
            sb.append(trnid02p);
            sb.append(trnid02h);
            sb.append(trnid02v);
            sb.append(trnid02o);
            sb.append(OFFILLER17);
            sb.append(tdate02c);
            sb.append(tdate02p);
            sb.append(tdate02h);
            sb.append(tdate02v);
            sb.append(tdate02o);
            sb.append(OFFILLER18);
            sb.append(tdesc02c);
            sb.append(tdesc02p);
            sb.append(tdesc02h);
            sb.append(tdesc02v);
            sb.append(tdesc02o);
            sb.append(OFFILLER19);
            sb.append(tamt002c);
            sb.append(tamt002p);
            sb.append(tamt002h);
            sb.append(tamt002v);
            sb.append(tamt002o);
            sb.append(OFFILLER20);
            sb.append(sel0003c);
            sb.append(sel0003p);
            sb.append(sel0003h);
            sb.append(sel0003v);
            sb.append(sel0003o);
            sb.append(OFFILLER21);
            sb.append(trnid03c);
            sb.append(trnid03p);
            sb.append(trnid03h);
            sb.append(trnid03v);
            sb.append(trnid03o);
            sb.append(OFFILLER22);
            sb.append(tdate03c);
            sb.append(tdate03p);
            sb.append(tdate03h);
            sb.append(tdate03v);
            sb.append(tdate03o);
            sb.append(OFFILLER23);
            sb.append(tdesc03c);
            sb.append(tdesc03p);
            sb.append(tdesc03h);
            sb.append(tdesc03v);
            sb.append(tdesc03o);
            sb.append(OFFILLER24);
            sb.append(tamt003c);
            sb.append(tamt003p);
            sb.append(tamt003h);
            sb.append(tamt003v);
            sb.append(tamt003o);
            sb.append(OFFILLER25);
            sb.append(sel0004c);
            sb.append(sel0004p);
            sb.append(sel0004h);
            sb.append(sel0004v);
            sb.append(sel0004o);
            sb.append(OFFILLER26);
            sb.append(trnid04c);
            sb.append(trnid04p);
            sb.append(trnid04h);
            sb.append(trnid04v);
            sb.append(trnid04o);
            sb.append(OFFILLER27);
            sb.append(tdate04c);
            sb.append(tdate04p);
            sb.append(tdate04h);
            sb.append(tdate04v);
            sb.append(tdate04o);
            sb.append(OFFILLER28);
            sb.append(tdesc04c);
            sb.append(tdesc04p);
            sb.append(tdesc04h);
            sb.append(tdesc04v);
            sb.append(tdesc04o);
            sb.append(OFFILLER29);
            sb.append(tamt004c);
            sb.append(tamt004p);
            sb.append(tamt004h);
            sb.append(tamt004v);
            sb.append(tamt004o);
            sb.append(OFFILLER30);
            sb.append(sel0005c);
            sb.append(sel0005p);
            sb.append(sel0005h);
            sb.append(sel0005v);
            sb.append(sel0005o);
            sb.append(OFFILLER31);
            sb.append(trnid05c);
            sb.append(trnid05p);
            sb.append(trnid05h);
            sb.append(trnid05v);
            sb.append(trnid05o);
            sb.append(OFFILLER32);
            sb.append(tdate05c);
            sb.append(tdate05p);
            sb.append(tdate05h);
            sb.append(tdate05v);
            sb.append(tdate05o);
            sb.append(OFFILLER33);
            sb.append(tdesc05c);
            sb.append(tdesc05p);
            sb.append(tdesc05h);
            sb.append(tdesc05v);
            sb.append(tdesc05o);
            sb.append(OFFILLER34);
            sb.append(tamt005c);
            sb.append(tamt005p);
            sb.append(tamt005h);
            sb.append(tamt005v);
            sb.append(tamt005o);
            sb.append(OFFILLER35);
            sb.append(sel0006c);
            sb.append(sel0006p);
            sb.append(sel0006h);
            sb.append(sel0006v);
            sb.append(sel0006o);
            sb.append(OFFILLER36);
            sb.append(trnid06c);
            sb.append(trnid06p);
            sb.append(trnid06h);
            sb.append(trnid06v);
            sb.append(trnid06o);
            sb.append(OFFILLER37);
            sb.append(tdate06c);
            sb.append(tdate06p);
            sb.append(tdate06h);
            sb.append(tdate06v);
            sb.append(tdate06o);
            sb.append(OFFILLER38);
            sb.append(tdesc06c);
            sb.append(tdesc06p);
            sb.append(tdesc06h);
            sb.append(tdesc06v);
            sb.append(tdesc06o);
            sb.append(OFFILLER39);
            sb.append(tamt006c);
            sb.append(tamt006p);
            sb.append(tamt006h);
            sb.append(tamt006v);
            sb.append(tamt006o);
            sb.append(OFFILLER40);
            sb.append(sel0007c);
            sb.append(sel0007p);
            sb.append(sel0007h);
            sb.append(sel0007v);
            sb.append(sel0007o);
            sb.append(OFFILLER41);
            sb.append(trnid07c);
            sb.append(trnid07p);
            sb.append(trnid07h);
            sb.append(trnid07v);
            sb.append(trnid07o);
            sb.append(OFFILLER42);
            sb.append(tdate07c);
            sb.append(tdate07p);
            sb.append(tdate07h);
            sb.append(tdate07v);
            sb.append(tdate07o);
            sb.append(OFFILLER43);
            sb.append(tdesc07c);
            sb.append(tdesc07p);
            sb.append(tdesc07h);
            sb.append(tdesc07v);
            sb.append(tdesc07o);
            sb.append(OFFILLER44);
            sb.append(tamt007c);
            sb.append(tamt007p);
            sb.append(tamt007h);
            sb.append(tamt007v);
            sb.append(tamt007o);
            sb.append(OFFILLER45);
            sb.append(sel0008c);
            sb.append(sel0008p);
            sb.append(sel0008h);
            sb.append(sel0008v);
            sb.append(sel0008o);
            sb.append(OFFILLER46);
            sb.append(trnid08c);
            sb.append(trnid08p);
            sb.append(trnid08h);
            sb.append(trnid08v);
            sb.append(trnid08o);
            sb.append(OFFILLER47);
            sb.append(tdate08c);
            sb.append(tdate08p);
            sb.append(tdate08h);
            sb.append(tdate08v);
            sb.append(tdate08o);
            sb.append(OFFILLER48);
            sb.append(tdesc08c);
            sb.append(tdesc08p);
            sb.append(tdesc08h);
            sb.append(tdesc08v);
            sb.append(tdesc08o);
            sb.append(OFFILLER49);
            sb.append(tamt008c);
            sb.append(tamt008p);
            sb.append(tamt008h);
            sb.append(tamt008v);
            sb.append(tamt008o);
            sb.append(OFFILLER50);
            sb.append(sel0009c);
            sb.append(sel0009p);
            sb.append(sel0009h);
            sb.append(sel0009v);
            sb.append(sel0009o);
            sb.append(OFFILLER51);
            sb.append(trnid09c);
            sb.append(trnid09p);
            sb.append(trnid09h);
            sb.append(trnid09v);
            sb.append(trnid09o);
            sb.append(OFFILLER52);
            sb.append(tdate09c);
            sb.append(tdate09p);
            sb.append(tdate09h);
            sb.append(tdate09v);
            sb.append(tdate09o);
            sb.append(OFFILLER53);
            sb.append(tdesc09c);
            sb.append(tdesc09p);
            sb.append(tdesc09h);
            sb.append(tdesc09v);
            sb.append(tdesc09o);
            sb.append(OFFILLER54);
            sb.append(tamt009c);
            sb.append(tamt009p);
            sb.append(tamt009h);
            sb.append(tamt009v);
            sb.append(tamt009o);
            sb.append(OFFILLER55);
            sb.append(sel0010c);
            sb.append(sel0010p);
            sb.append(sel0010h);
            sb.append(sel0010v);
            sb.append(sel0010o);
            sb.append(OFFILLER56);
            sb.append(trnid10c);
            sb.append(trnid10p);
            sb.append(trnid10h);
            sb.append(trnid10v);
            sb.append(trnid10o);
            sb.append(OFFILLER57);
            sb.append(tdate10c);
            sb.append(tdate10p);
            sb.append(tdate10h);
            sb.append(tdate10v);
            sb.append(tdate10o);
            sb.append(OFFILLER58);
            sb.append(tdesc10c);
            sb.append(tdesc10p);
            sb.append(tdesc10h);
            sb.append(tdesc10v);
            sb.append(tdesc10o);
            sb.append(OFFILLER59);
            sb.append(tamt010c);
            sb.append(tamt010p);
            sb.append(tamt010h);
            sb.append(tamt010v);
            sb.append(tamt010o);
            sb.append(OFFILLER60);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER1);
            sb.append(OFFILLER2);
            sb.append(trnnamec);
            sb.append(trnnamep);
            sb.append(trnnameh);
            sb.append(trnnamev);
            sb.append(trnnameo);
            sb.append(OFFILLER3);
            sb.append(title01c);
            sb.append(title01p);
            sb.append(title01h);
            sb.append(title01v);
            sb.append(title01o);
            sb.append(OFFILLER4);
            sb.append(curdatec);
            sb.append(curdatep);
            sb.append(curdateh);
            sb.append(curdatev);
            sb.append(curdateo);
            sb.append(OFFILLER5);
            sb.append(pgmnamec);
            sb.append(pgmnamep);
            sb.append(pgmnameh);
            sb.append(pgmnamev);
            sb.append(pgmnameo);
            sb.append(OFFILLER6);
            sb.append(title02c);
            sb.append(title02p);
            sb.append(title02h);
            sb.append(title02v);
            sb.append(title02o);
            sb.append(OFFILLER7);
            sb.append(curtimec);
            sb.append(curtimep);
            sb.append(curtimeh);
            sb.append(curtimev);
            sb.append(curtimeo);
            sb.append(OFFILLER8);
            sb.append(pagenumc);
            sb.append(pagenump);
            sb.append(pagenumh);
            sb.append(pagenumv);
            sb.append(pagenumo);
            sb.append(OFFILLER9);
            sb.append(trnidinc);
            sb.append(trnidinp);
            sb.append(trnidinh);
            sb.append(trnidinv);
            sb.append(trnidino);
            sb.append(OFFILLER10);
            sb.append(sel0001c);
            sb.append(sel0001p);
            sb.append(sel0001h);
            sb.append(sel0001v);
            sb.append(sel0001o);
            sb.append(OFFILLER11);
            sb.append(trnid01c);
            sb.append(trnid01p);
            sb.append(trnid01h);
            sb.append(trnid01v);
            sb.append(trnid01o);
            sb.append(OFFILLER12);
            sb.append(tdate01c);
            sb.append(tdate01p);
            sb.append(tdate01h);
            sb.append(tdate01v);
            sb.append(tdate01o);
            sb.append(OFFILLER13);
            sb.append(tdesc01c);
            sb.append(tdesc01p);
            sb.append(tdesc01h);
            sb.append(tdesc01v);
            sb.append(tdesc01o);
            sb.append(OFFILLER14);
            sb.append(tamt001c);
            sb.append(tamt001p);
            sb.append(tamt001h);
            sb.append(tamt001v);
            sb.append(tamt001o);
            sb.append(OFFILLER15);
            sb.append(sel0002c);
            sb.append(sel0002p);
            sb.append(sel0002h);
            sb.append(sel0002v);
            sb.append(sel0002o);
            sb.append(OFFILLER16);
            sb.append(trnid02c);
            sb.append(trnid02p);
            sb.append(trnid02h);
            sb.append(trnid02v);
            sb.append(trnid02o);
            sb.append(OFFILLER17);
            sb.append(tdate02c);
            sb.append(tdate02p);
            sb.append(tdate02h);
            sb.append(tdate02v);
            sb.append(tdate02o);
            sb.append(OFFILLER18);
            sb.append(tdesc02c);
            sb.append(tdesc02p);
            sb.append(tdesc02h);
            sb.append(tdesc02v);
            sb.append(tdesc02o);
            sb.append(OFFILLER19);
            sb.append(tamt002c);
            sb.append(tamt002p);
            sb.append(tamt002h);
            sb.append(tamt002v);
            sb.append(tamt002o);
            sb.append(OFFILLER20);
            sb.append(sel0003c);
            sb.append(sel0003p);
            sb.append(sel0003h);
            sb.append(sel0003v);
            sb.append(sel0003o);
            sb.append(OFFILLER21);
            sb.append(trnid03c);
            sb.append(trnid03p);
            sb.append(trnid03h);
            sb.append(trnid03v);
            sb.append(trnid03o);
            sb.append(OFFILLER22);
            sb.append(tdate03c);
            sb.append(tdate03p);
            sb.append(tdate03h);
            sb.append(tdate03v);
            sb.append(tdate03o);
            sb.append(OFFILLER23);
            sb.append(tdesc03c);
            sb.append(tdesc03p);
            sb.append(tdesc03h);
            sb.append(tdesc03v);
            sb.append(tdesc03o);
            sb.append(OFFILLER24);
            sb.append(tamt003c);
            sb.append(tamt003p);
            sb.append(tamt003h);
            sb.append(tamt003v);
            sb.append(tamt003o);
            sb.append(OFFILLER25);
            sb.append(sel0004c);
            sb.append(sel0004p);
            sb.append(sel0004h);
            sb.append(sel0004v);
            sb.append(sel0004o);
            sb.append(OFFILLER26);
            sb.append(trnid04c);
            sb.append(trnid04p);
            sb.append(trnid04h);
            sb.append(trnid04v);
            sb.append(trnid04o);
            sb.append(OFFILLER27);
            sb.append(tdate04c);
            sb.append(tdate04p);
            sb.append(tdate04h);
            sb.append(tdate04v);
            sb.append(tdate04o);
            sb.append(OFFILLER28);
            sb.append(tdesc04c);
            sb.append(tdesc04p);
            sb.append(tdesc04h);
            sb.append(tdesc04v);
            sb.append(tdesc04o);
            sb.append(OFFILLER29);
            sb.append(tamt004c);
            sb.append(tamt004p);
            sb.append(tamt004h);
            sb.append(tamt004v);
            sb.append(tamt004o);
            sb.append(OFFILLER30);
            sb.append(sel0005c);
            sb.append(sel0005p);
            sb.append(sel0005h);
            sb.append(sel0005v);
            sb.append(sel0005o);
            sb.append(OFFILLER31);
            sb.append(trnid05c);
            sb.append(trnid05p);
            sb.append(trnid05h);
            sb.append(trnid05v);
            sb.append(trnid05o);
            sb.append(OFFILLER32);
            sb.append(tdate05c);
            sb.append(tdate05p);
            sb.append(tdate05h);
            sb.append(tdate05v);
            sb.append(tdate05o);
            sb.append(OFFILLER33);
            sb.append(tdesc05c);
            sb.append(tdesc05p);
            sb.append(tdesc05h);
            sb.append(tdesc05v);
            sb.append(tdesc05o);
            sb.append(OFFILLER34);
            sb.append(tamt005c);
            sb.append(tamt005p);
            sb.append(tamt005h);
            sb.append(tamt005v);
            sb.append(tamt005o);
            sb.append(OFFILLER35);
            sb.append(sel0006c);
            sb.append(sel0006p);
            sb.append(sel0006h);
            sb.append(sel0006v);
            sb.append(sel0006o);
            sb.append(OFFILLER36);
            sb.append(trnid06c);
            sb.append(trnid06p);
            sb.append(trnid06h);
            sb.append(trnid06v);
            sb.append(trnid06o);
            sb.append(OFFILLER37);
            sb.append(tdate06c);
            sb.append(tdate06p);
            sb.append(tdate06h);
            sb.append(tdate06v);
            sb.append(tdate06o);
            sb.append(OFFILLER38);
            sb.append(tdesc06c);
            sb.append(tdesc06p);
            sb.append(tdesc06h);
            sb.append(tdesc06v);
            sb.append(tdesc06o);
            sb.append(OFFILLER39);
            sb.append(tamt006c);
            sb.append(tamt006p);
            sb.append(tamt006h);
            sb.append(tamt006v);
            sb.append(tamt006o);
            sb.append(OFFILLER40);
            sb.append(sel0007c);
            sb.append(sel0007p);
            sb.append(sel0007h);
            sb.append(sel0007v);
            sb.append(sel0007o);
            sb.append(OFFILLER41);
            sb.append(trnid07c);
            sb.append(trnid07p);
            sb.append(trnid07h);
            sb.append(trnid07v);
            sb.append(trnid07o);
            sb.append(OFFILLER42);
            sb.append(tdate07c);
            sb.append(tdate07p);
            sb.append(tdate07h);
            sb.append(tdate07v);
            sb.append(tdate07o);
            sb.append(OFFILLER43);
            sb.append(tdesc07c);
            sb.append(tdesc07p);
            sb.append(tdesc07h);
            sb.append(tdesc07v);
            sb.append(tdesc07o);
            sb.append(OFFILLER44);
            sb.append(tamt007c);
            sb.append(tamt007p);
            sb.append(tamt007h);
            sb.append(tamt007v);
            sb.append(tamt007o);
            sb.append(OFFILLER45);
            sb.append(sel0008c);
            sb.append(sel0008p);
            sb.append(sel0008h);
            sb.append(sel0008v);
            sb.append(sel0008o);
            sb.append(OFFILLER46);
            sb.append(trnid08c);
            sb.append(trnid08p);
            sb.append(trnid08h);
            sb.append(trnid08v);
            sb.append(trnid08o);
            sb.append(OFFILLER47);
            sb.append(tdate08c);
            sb.append(tdate08p);
            sb.append(tdate08h);
            sb.append(tdate08v);
            sb.append(tdate08o);
            sb.append(OFFILLER48);
            sb.append(tdesc08c);
            sb.append(tdesc08p);
            sb.append(tdesc08h);
            sb.append(tdesc08v);
            sb.append(tdesc08o);
            sb.append(OFFILLER49);
            sb.append(tamt008c);
            sb.append(tamt008p);
            sb.append(tamt008h);
            sb.append(tamt008v);
            sb.append(tamt008o);
            sb.append(OFFILLER50);
            sb.append(sel0009c);
            sb.append(sel0009p);
            sb.append(sel0009h);
            sb.append(sel0009v);
            sb.append(sel0009o);
            sb.append(OFFILLER51);
            sb.append(trnid09c);
            sb.append(trnid09p);
            sb.append(trnid09h);
            sb.append(trnid09v);
            sb.append(trnid09o);
            sb.append(OFFILLER52);
            sb.append(tdate09c);
            sb.append(tdate09p);
            sb.append(tdate09h);
            sb.append(tdate09v);
            sb.append(tdate09o);
            sb.append(OFFILLER53);
            sb.append(tdesc09c);
            sb.append(tdesc09p);
            sb.append(tdesc09h);
            sb.append(tdesc09v);
            sb.append(tdesc09o);
            sb.append(OFFILLER54);
            sb.append(tamt009c);
            sb.append(tamt009p);
            sb.append(tamt009h);
            sb.append(tamt009v);
            sb.append(tamt009o);
            sb.append(OFFILLER55);
            sb.append(sel0010c);
            sb.append(sel0010p);
            sb.append(sel0010h);
            sb.append(sel0010v);
            sb.append(sel0010o);
            sb.append(OFFILLER56);
            sb.append(trnid10c);
            sb.append(trnid10p);
            sb.append(trnid10h);
            sb.append(trnid10v);
            sb.append(trnid10o);
            sb.append(OFFILLER57);
            sb.append(tdate10c);
            sb.append(tdate10p);
            sb.append(tdate10h);
            sb.append(tdate10v);
            sb.append(tdate10o);
            sb.append(OFFILLER58);
            sb.append(tdesc10c);
            sb.append(tdesc10p);
            sb.append(tdesc10h);
            sb.append(tdesc10v);
            sb.append(tdesc10o);
            sb.append(OFFILLER59);
            sb.append(tamt010c);
            sb.append(tamt010p);
            sb.append(tamt010h);
            sb.append(tamt010v);
            sb.append(tamt010o);
            sb.append(OFFILLER60);
            sb.append(errmsgc);
            sb.append(errmsgp);
            sb.append(errmsgh);
            sb.append(errmsgv);
            sb.append(errmsgo);
            return sb.toString();
        }
    }
}
