package aws.carddemo.variable.group;

import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:49 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class Cotrn02cCotrn2ai {
    // [T-Up#INFO][COTRN02.CPY, LINE #19] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER1 = StringUtils.repeat(' ',
            12);
    // [T-Up#INFO][COTRN02.CPY, LINE #20] TRNNAMEL (level: 2)
    private @Getter @Setter int trnnamel;
    // [T-Up#INFO][COTRN02.CPY, LINE #21] TRNNAMEF (level: 2)
    private @Getter @Builder.Default String trnnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER2 getOFFILLER2() {
        return _OFFILLER2.builder().trnnamea(getTrnnamea()).build();
    }

    public void setOFFILLER2(String source) {
        setTrnnamea(source.substring(0, 1));
    }

    public void setOFFILLER2(_OFFILLER2 source) {
        setOFFILLER2(source.toString());
    }

    public String getTrnnamea() {
        return getTrnnamef();
    }

    public void setTrnnamea(String source) {
        setTrnnamef(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #24] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER3 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COTRN02.CPY, LINE #25] TRNNAMEI (level: 2)
    private @Getter @Builder.Default String trnnamei = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COTRN02.CPY, LINE #26] TITLE01L (level: 2)
    private @Getter @Setter int title01l;
    // [T-Up#INFO][COTRN02.CPY, LINE #27] TITLE01F (level: 2)
    private @Getter @Builder.Default String title01f = StringUtils.repeat(' ',
            1);

    public _OFFILLER4 getOFFILLER4() {
        return _OFFILLER4.builder().title01a(getTitle01a()).build();
    }

    public void setOFFILLER4(String source) {
        setTitle01a(source.substring(0, 1));
    }

    public void setOFFILLER4(_OFFILLER4 source) {
        setOFFILLER4(source.toString());
    }

    public String getTitle01a() {
        return getTitle01f();
    }

    public void setTitle01a(String source) {
        setTitle01f(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #30] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER5 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COTRN02.CPY, LINE #31] TITLE01I (level: 2)
    private @Getter @Builder.Default String title01i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COTRN02.CPY, LINE #32] CURDATEL (level: 2)
    private @Getter @Setter int curdatel;
    // [T-Up#INFO][COTRN02.CPY, LINE #33] CURDATEF (level: 2)
    private @Getter @Builder.Default String curdatef = StringUtils.repeat(' ',
            1);

    public _OFFILLER6 getOFFILLER6() {
        return _OFFILLER6.builder().curdatea(getCurdatea()).build();
    }

    public void setOFFILLER6(String source) {
        setCurdatea(source.substring(0, 1));
    }

    public void setOFFILLER6(_OFFILLER6 source) {
        setOFFILLER6(source.toString());
    }

    public String getCurdatea() {
        return getCurdatef();
    }

    public void setCurdatea(String source) {
        setCurdatef(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #36] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER7 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COTRN02.CPY, LINE #37] CURDATEI (level: 2)
    private @Getter @Builder.Default String curdatei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COTRN02.CPY, LINE #38] PGMNAMEL (level: 2)
    private @Getter @Setter int pgmnamel;
    // [T-Up#INFO][COTRN02.CPY, LINE #39] PGMNAMEF (level: 2)
    private @Getter @Builder.Default String pgmnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER8 getOFFILLER8() {
        return _OFFILLER8.builder().pgmnamea(getPgmnamea()).build();
    }

    public void setOFFILLER8(String source) {
        setPgmnamea(source.substring(0, 1));
    }

    public void setOFFILLER8(_OFFILLER8 source) {
        setOFFILLER8(source.toString());
    }

    public String getPgmnamea() {
        return getPgmnamef();
    }

    public void setPgmnamea(String source) {
        setPgmnamef(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #42] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER9 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COTRN02.CPY, LINE #43] PGMNAMEI (level: 2)
    private @Getter @Builder.Default String pgmnamei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COTRN02.CPY, LINE #44] TITLE02L (level: 2)
    private @Getter @Setter int title02l;
    // [T-Up#INFO][COTRN02.CPY, LINE #45] TITLE02F (level: 2)
    private @Getter @Builder.Default String title02f = StringUtils.repeat(' ',
            1);

    public _OFFILLER10 getOFFILLER10() {
        return _OFFILLER10.builder().title02a(getTitle02a()).build();
    }

    public void setOFFILLER10(String source) {
        setTitle02a(source.substring(0, 1));
    }

    public void setOFFILLER10(_OFFILLER10 source) {
        setOFFILLER10(source.toString());
    }

    public String getTitle02a() {
        return getTitle02f();
    }

    public void setTitle02a(String source) {
        setTitle02f(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #48] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER11 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #49] TITLE02I (level: 2)
    private @Getter @Builder.Default String title02i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COTRN02.CPY, LINE #50] CURTIMEL (level: 2)
    private @Getter @Setter int curtimel;
    // [T-Up#INFO][COTRN02.CPY, LINE #51] CURTIMEF (level: 2)
    private @Getter @Builder.Default String curtimef = StringUtils.repeat(' ',
            1);

    public _OFFILLER12 getOFFILLER12() {
        return _OFFILLER12.builder().curtimea(getCurtimea()).build();
    }

    public void setOFFILLER12(String source) {
        setCurtimea(source.substring(0, 1));
    }

    public void setOFFILLER12(_OFFILLER12 source) {
        setOFFILLER12(source.toString());
    }

    public String getCurtimea() {
        return getCurtimef();
    }

    public void setCurtimea(String source) {
        setCurtimef(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #54] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER13 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #55] CURTIMEI (level: 2)
    private @Getter @Builder.Default String curtimei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COTRN02.CPY, LINE #56] ACTIDINL (level: 2)
    private @Getter @Setter int actidinl;
    // [T-Up#INFO][COTRN02.CPY, LINE #57] ACTIDINF (level: 2)
    private @Getter @Builder.Default String actidinf = StringUtils.repeat(' ',
            1);

    public _OFFILLER14 getOFFILLER14() {
        return _OFFILLER14.builder().actidina(getActidina()).build();
    }

    public void setOFFILLER14(String source) {
        setActidina(source.substring(0, 1));
    }

    public void setOFFILLER14(_OFFILLER14 source) {
        setOFFILLER14(source.toString());
    }

    public String getActidina() {
        return getActidinf();
    }

    public void setActidina(String source) {
        setActidinf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #60] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER15 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #61] ACTIDINI (level: 2)
    private @Getter @Builder.Default String actidini = StringUtils.repeat(' ',
            11);
    // [T-Up#INFO][COTRN02.CPY, LINE #62] CARDNINL (level: 2)
    private @Getter @Setter int cardninl;
    // [T-Up#INFO][COTRN02.CPY, LINE #63] CARDNINF (level: 2)
    private @Getter @Builder.Default String cardninf = StringUtils.repeat(' ',
            1);

    public _OFFILLER16 getOFFILLER16() {
        return _OFFILLER16.builder().cardnina(getCardnina()).build();
    }

    public void setOFFILLER16(String source) {
        setCardnina(source.substring(0, 1));
    }

    public void setOFFILLER16(_OFFILLER16 source) {
        setOFFILLER16(source.toString());
    }

    public String getCardnina() {
        return getCardninf();
    }

    public void setCardnina(String source) {
        setCardninf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #66] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER17 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #67] CARDNINI (level: 2)
    private @Getter @Builder.Default String cardnini = StringUtils.repeat(' ',
            16);
    // [T-Up#INFO][COTRN02.CPY, LINE #68] TTYPCDL (level: 2)
    private @Getter @Setter int ttypcdl;
    // [T-Up#INFO][COTRN02.CPY, LINE #69] TTYPCDF (level: 2)
    private @Getter @Builder.Default String ttypcdf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER18 getOFFILLER18() {
        return _OFFILLER18.builder().ttypcda(getTtypcda()).build();
    }

    public void setOFFILLER18(String source) {
        setTtypcda(source.substring(0, 1));
    }

    public void setOFFILLER18(_OFFILLER18 source) {
        setOFFILLER18(source.toString());
    }

    public String getTtypcda() {
        return getTtypcdf();
    }

    public void setTtypcda(String source) {
        setTtypcdf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #72] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER19 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #73] TTYPCDI (level: 2)
    private @Getter @Builder.Default String ttypcdi = StringUtils
            .repeat(' ', 2);
    // [T-Up#INFO][COTRN02.CPY, LINE #74] TCATCDL (level: 2)
    private @Getter @Setter int tcatcdl;
    // [T-Up#INFO][COTRN02.CPY, LINE #75] TCATCDF (level: 2)
    private @Getter @Builder.Default String tcatcdf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER20 getOFFILLER20() {
        return _OFFILLER20.builder().tcatcda(getTcatcda()).build();
    }

    public void setOFFILLER20(String source) {
        setTcatcda(source.substring(0, 1));
    }

    public void setOFFILLER20(_OFFILLER20 source) {
        setOFFILLER20(source.toString());
    }

    public String getTcatcda() {
        return getTcatcdf();
    }

    public void setTcatcda(String source) {
        setTcatcdf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #78] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER21 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #79] TCATCDI (level: 2)
    private @Getter @Builder.Default String tcatcdi = StringUtils
            .repeat(' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #80] TRNSRCL (level: 2)
    private @Getter @Setter int trnsrcl;
    // [T-Up#INFO][COTRN02.CPY, LINE #81] TRNSRCF (level: 2)
    private @Getter @Builder.Default String trnsrcf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER22 getOFFILLER22() {
        return _OFFILLER22.builder().trnsrca(getTrnsrca()).build();
    }

    public void setOFFILLER22(String source) {
        setTrnsrca(source.substring(0, 1));
    }

    public void setOFFILLER22(_OFFILLER22 source) {
        setOFFILLER22(source.toString());
    }

    public String getTrnsrca() {
        return getTrnsrcf();
    }

    public void setTrnsrca(String source) {
        setTrnsrcf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #84] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER23 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #85] TRNSRCI (level: 2)
    private @Getter @Builder.Default String trnsrci = StringUtils.repeat(' ',
            10);
    // [T-Up#INFO][COTRN02.CPY, LINE #86] TDESCL (level: 2)
    private @Getter @Setter int tdescl;
    // [T-Up#INFO][COTRN02.CPY, LINE #87] TDESCF (level: 2)
    private @Getter @Builder.Default String tdescf = StringUtils.repeat(' ', 1);

    public _OFFILLER24 getOFFILLER24() {
        return _OFFILLER24.builder().tdesca(getTdesca()).build();
    }

    public void setOFFILLER24(String source) {
        setTdesca(source.substring(0, 1));
    }

    public void setOFFILLER24(_OFFILLER24 source) {
        setOFFILLER24(source.toString());
    }

    public String getTdesca() {
        return getTdescf();
    }

    public void setTdesca(String source) {
        setTdescf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #90] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER25 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #91] TDESCI (level: 2)
    private @Getter @Builder.Default String tdesci = StringUtils
            .repeat(' ', 60);
    // [T-Up#INFO][COTRN02.CPY, LINE #92] TRNAMTL (level: 2)
    private @Getter @Setter int trnamtl;
    // [T-Up#INFO][COTRN02.CPY, LINE #93] TRNAMTF (level: 2)
    private @Getter @Builder.Default String trnamtf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER26 getOFFILLER26() {
        return _OFFILLER26.builder().trnamta(getTrnamta()).build();
    }

    public void setOFFILLER26(String source) {
        setTrnamta(source.substring(0, 1));
    }

    public void setOFFILLER26(_OFFILLER26 source) {
        setOFFILLER26(source.toString());
    }

    public String getTrnamta() {
        return getTrnamtf();
    }

    public void setTrnamta(String source) {
        setTrnamtf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #96] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER27 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #97] TRNAMTI (level: 2)
    private @Getter @Builder.Default String trnamti = StringUtils.repeat(' ',
            12);
    // [T-Up#INFO][COTRN02.CPY, LINE #98] TORIGDTL (level: 2)
    private @Getter @Setter int torigdtl;
    // [T-Up#INFO][COTRN02.CPY, LINE #99] TORIGDTF (level: 2)
    private @Getter @Builder.Default String torigdtf = StringUtils.repeat(' ',
            1);

    public _OFFILLER28 getOFFILLER28() {
        return _OFFILLER28.builder().torigdta(getTorigdta()).build();
    }

    public void setOFFILLER28(String source) {
        setTorigdta(source.substring(0, 1));
    }

    public void setOFFILLER28(_OFFILLER28 source) {
        setOFFILLER28(source.toString());
    }

    public String getTorigdta() {
        return getTorigdtf();
    }

    public void setTorigdta(String source) {
        setTorigdtf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #102] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER29 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #103] TORIGDTI (level: 2)
    private @Getter @Builder.Default String torigdti = StringUtils.repeat(' ',
            10);
    // [T-Up#INFO][COTRN02.CPY, LINE #104] TPROCDTL (level: 2)
    private @Getter @Setter int tprocdtl;
    // [T-Up#INFO][COTRN02.CPY, LINE #105] TPROCDTF (level: 2)
    private @Getter @Builder.Default String tprocdtf = StringUtils.repeat(' ',
            1);

    public _OFFILLER30 getOFFILLER30() {
        return _OFFILLER30.builder().tprocdta(getTprocdta()).build();
    }

    public void setOFFILLER30(String source) {
        setTprocdta(source.substring(0, 1));
    }

    public void setOFFILLER30(_OFFILLER30 source) {
        setOFFILLER30(source.toString());
    }

    public String getTprocdta() {
        return getTprocdtf();
    }

    public void setTprocdta(String source) {
        setTprocdtf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #108] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER31 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #109] TPROCDTI (level: 2)
    private @Getter @Builder.Default String tprocdti = StringUtils.repeat(' ',
            10);
    // [T-Up#INFO][COTRN02.CPY, LINE #110] MIDL (level: 2)
    private @Getter @Setter int midl;
    // [T-Up#INFO][COTRN02.CPY, LINE #111] MIDF (level: 2)
    private @Getter @Builder.Default String midf = StringUtils.repeat(' ', 1);

    public _OFFILLER32 getOFFILLER32() {
        return _OFFILLER32.builder().mida(getMida()).build();
    }

    public void setOFFILLER32(String source) {
        setMida(source.substring(0, 1));
    }

    public void setOFFILLER32(_OFFILLER32 source) {
        setOFFILLER32(source.toString());
    }

    public String getMida() {
        return getMidf();
    }

    public void setMida(String source) {
        setMidf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #114] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER33 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #115] MIDI (level: 2)
    private @Getter @Builder.Default String midi = StringUtils.repeat(' ', 9);
    // [T-Up#INFO][COTRN02.CPY, LINE #116] MNAMEL (level: 2)
    private @Getter @Setter int mnamel;
    // [T-Up#INFO][COTRN02.CPY, LINE #117] MNAMEF (level: 2)
    private @Getter @Builder.Default String mnamef = StringUtils.repeat(' ', 1);

    public _OFFILLER34 getOFFILLER34() {
        return _OFFILLER34.builder().mnamea(getMnamea()).build();
    }

    public void setOFFILLER34(String source) {
        setMnamea(source.substring(0, 1));
    }

    public void setOFFILLER34(_OFFILLER34 source) {
        setOFFILLER34(source.toString());
    }

    public String getMnamea() {
        return getMnamef();
    }

    public void setMnamea(String source) {
        setMnamef(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #120] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER35 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #121] MNAMEI (level: 2)
    private @Getter @Builder.Default String mnamei = StringUtils
            .repeat(' ', 30);
    // [T-Up#INFO][COTRN02.CPY, LINE #122] MCITYL (level: 2)
    private @Getter @Setter int mcityl;
    // [T-Up#INFO][COTRN02.CPY, LINE #123] MCITYF (level: 2)
    private @Getter @Builder.Default String mcityf = StringUtils.repeat(' ', 1);

    public _OFFILLER36 getOFFILLER36() {
        return _OFFILLER36.builder().mcitya(getMcitya()).build();
    }

    public void setOFFILLER36(String source) {
        setMcitya(source.substring(0, 1));
    }

    public void setOFFILLER36(_OFFILLER36 source) {
        setOFFILLER36(source.toString());
    }

    public String getMcitya() {
        return getMcityf();
    }

    public void setMcitya(String source) {
        setMcityf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #126] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER37 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #127] MCITYI (level: 2)
    private @Getter @Builder.Default String mcityi = StringUtils
            .repeat(' ', 25);
    // [T-Up#INFO][COTRN02.CPY, LINE #128] MZIPL (level: 2)
    private @Getter @Setter int mzipl;
    // [T-Up#INFO][COTRN02.CPY, LINE #129] MZIPF (level: 2)
    private @Getter @Builder.Default String mzipf = StringUtils.repeat(' ', 1);

    public _OFFILLER38 getOFFILLER38() {
        return _OFFILLER38.builder().mzipa(getMzipa()).build();
    }

    public void setOFFILLER38(String source) {
        setMzipa(source.substring(0, 1));
    }

    public void setOFFILLER38(_OFFILLER38 source) {
        setOFFILLER38(source.toString());
    }

    public String getMzipa() {
        return getMzipf();
    }

    public void setMzipa(String source) {
        setMzipf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #132] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER39 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #133] MZIPI (level: 2)
    private @Getter @Builder.Default String mzipi = StringUtils.repeat(' ', 10);
    // [T-Up#INFO][COTRN02.CPY, LINE #134] CONFIRML (level: 2)
    private @Getter @Setter int confirml;
    // [T-Up#INFO][COTRN02.CPY, LINE #135] CONFIRMF (level: 2)
    private @Getter @Builder.Default String confirmf = StringUtils.repeat(' ',
            1);

    public _OFFILLER40 getOFFILLER40() {
        return _OFFILLER40.builder().confirma(getConfirma()).build();
    }

    public void setOFFILLER40(String source) {
        setConfirma(source.substring(0, 1));
    }

    public void setOFFILLER40(_OFFILLER40 source) {
        setOFFILLER40(source.toString());
    }

    public String getConfirma() {
        return getConfirmf();
    }

    public void setConfirma(String source) {
        setConfirmf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #138] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER41 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #139] CONFIRMI (level: 2)
    private @Getter @Builder.Default String confirmi = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][COTRN02.CPY, LINE #140] ERRMSGL (level: 2)
    private @Getter @Setter int errmsgl;
    // [T-Up#INFO][COTRN02.CPY, LINE #141] ERRMSGF (level: 2)
    private @Getter @Builder.Default String errmsgf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER42 getOFFILLER42() {
        return _OFFILLER42.builder().errmsga(getErrmsga()).build();
    }

    public void setOFFILLER42(String source) {
        setErrmsga(source.substring(0, 1));
    }

    public void setOFFILLER42(_OFFILLER42 source) {
        setOFFILLER42(source.toString());
    }

    public String getErrmsga() {
        return getErrmsgf();
    }

    public void setErrmsga(String source) {
        setErrmsgf(source);
    }

    // [T-Up#INFO][COTRN02.CPY, LINE #144] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER43 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COTRN02.CPY, LINE #145] ERRMSGI (level: 2)
    private @Getter @Builder.Default String errmsgi = StringUtils.repeat(' ',
            78);

    public void setOFFILLER1(String source) {
        OFFILLER1 = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
    }

    public void setTrnnamef(String source) {
        trnnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER3(String source) {
        OFFILLER3 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnnamei(String source) {
        trnnamei = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01f(String source) {
        title01f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER5(String source) {
        OFFILLER5 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01i(String source) {
        title01i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurdatef(String source) {
        curdatef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER7(String source) {
        OFFILLER7 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurdatei(String source) {
        curdatei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setPgmnamef(String source) {
        pgmnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER9(String source) {
        OFFILLER9 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setPgmnamei(String source) {
        pgmnamei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setTitle02f(String source) {
        title02f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER11(String source) {
        OFFILLER11 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle02i(String source) {
        title02i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurtimef(String source) {
        curtimef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER13(String source) {
        OFFILLER13 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurtimei(String source) {
        curtimei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setActidinf(String source) {
        actidinf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER15(String source) {
        OFFILLER15 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setActidini(String source) {
        actidini = StringUtils.truncate(StringUtils.rightPad(source, 11), 11);
    }

    public void setCardninf(String source) {
        cardninf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER17(String source) {
        OFFILLER17 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCardnini(String source) {
        cardnini = StringUtils.truncate(StringUtils.rightPad(source, 16), 16);
    }

    public void setTtypcdf(String source) {
        ttypcdf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER19(String source) {
        OFFILLER19 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTtypcdi(String source) {
        ttypcdi = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
    }

    public void setTcatcdf(String source) {
        tcatcdf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER21(String source) {
        OFFILLER21 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTcatcdi(String source) {
        tcatcdi = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnsrcf(String source) {
        trnsrcf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER23(String source) {
        OFFILLER23 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnsrci(String source) {
        trnsrci = StringUtils.truncate(StringUtils.rightPad(source, 10), 10);
    }

    public void setTdescf(String source) {
        tdescf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER25(String source) {
        OFFILLER25 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTdesci(String source) {
        tdesci = StringUtils.truncate(StringUtils.rightPad(source, 60), 60);
    }

    public void setTrnamtf(String source) {
        trnamtf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER27(String source) {
        OFFILLER27 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnamti(String source) {
        trnamti = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
    }

    public void setTorigdtf(String source) {
        torigdtf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER29(String source) {
        OFFILLER29 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTorigdti(String source) {
        torigdti = StringUtils.truncate(StringUtils.rightPad(source, 10), 10);
    }

    public void setTprocdtf(String source) {
        tprocdtf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER31(String source) {
        OFFILLER31 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTprocdti(String source) {
        tprocdti = StringUtils.truncate(StringUtils.rightPad(source, 10), 10);
    }

    public void setMidf(String source) {
        midf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER33(String source) {
        OFFILLER33 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setMidi(String source) {
        midi = StringUtils.truncate(StringUtils.rightPad(source, 9), 9);
    }

    public void setMnamef(String source) {
        mnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER35(String source) {
        OFFILLER35 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setMnamei(String source) {
        mnamei = StringUtils.truncate(StringUtils.rightPad(source, 30), 30);
    }

    public void setMcityf(String source) {
        mcityf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER37(String source) {
        OFFILLER37 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setMcityi(String source) {
        mcityi = StringUtils.truncate(StringUtils.rightPad(source, 25), 25);
    }

    public void setMzipf(String source) {
        mzipf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER39(String source) {
        OFFILLER39 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setMzipi(String source) {
        mzipi = StringUtils.truncate(StringUtils.rightPad(source, 10), 10);
    }

    public void setConfirmf(String source) {
        confirmf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER41(String source) {
        OFFILLER41 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setConfirmi(String source) {
        confirmi = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setErrmsgf(String source) {
        errmsgf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER43(String source) {
        OFFILLER43 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setErrmsgi(String source) {
        errmsgi = StringUtils.truncate(StringUtils.rightPad(source, 78), 78);
    }

    public static Cotrn02cCotrn2ai createDefaultValueInstance() {
        return new Cotrn02cCotrn2ai.builder().build();
    }

    public void set(String source) {
        ByteBuffer tempByteBuffer1;
        source = StringUtils.truncate(StringUtils.rightPad(source, 555), 555);
        OFFILLER1 = source.substring(0, 12);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(12, 14).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            trnnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            trnnamel = 0;
        }
        trnnamef = source.substring(14, 15);
        OFFILLER3 = source.substring(15, 19);
        trnnamei = source.substring(19, 23);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(23, 25).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title01l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title01l = 0;
        }
        title01f = source.substring(25, 26);
        OFFILLER5 = source.substring(26, 30);
        title01i = source.substring(30, 70);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(70, 72).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curdatel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curdatel = 0;
        }
        curdatef = source.substring(72, 73);
        OFFILLER7 = source.substring(73, 77);
        curdatei = source.substring(77, 85);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(85, 87).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            pgmnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            pgmnamel = 0;
        }
        pgmnamef = source.substring(87, 88);
        OFFILLER9 = source.substring(88, 92);
        pgmnamei = source.substring(92, 100);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(100, 102).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title02l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title02l = 0;
        }
        title02f = source.substring(102, 103);
        OFFILLER11 = source.substring(103, 107);
        title02i = source.substring(107, 147);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(147, 149).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curtimel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curtimel = 0;
        }
        curtimef = source.substring(149, 150);
        OFFILLER13 = source.substring(150, 154);
        curtimei = source.substring(154, 162);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(162, 164).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            actidinl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            actidinl = 0;
        }
        actidinf = source.substring(164, 165);
        OFFILLER15 = source.substring(165, 169);
        actidini = source.substring(169, 180);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(180, 182).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            cardninl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            cardninl = 0;
        }
        cardninf = source.substring(182, 183);
        OFFILLER17 = source.substring(183, 187);
        cardnini = source.substring(187, 203);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(203, 205).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            ttypcdl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            ttypcdl = 0;
        }
        ttypcdf = source.substring(205, 206);
        OFFILLER19 = source.substring(206, 210);
        ttypcdi = source.substring(210, 212);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(212, 214).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            tcatcdl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            tcatcdl = 0;
        }
        tcatcdf = source.substring(214, 215);
        OFFILLER21 = source.substring(215, 219);
        tcatcdi = source.substring(219, 223);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(223, 225).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            trnsrcl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            trnsrcl = 0;
        }
        trnsrcf = source.substring(225, 226);
        OFFILLER23 = source.substring(226, 230);
        trnsrci = source.substring(230, 240);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(240, 242).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            tdescl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            tdescl = 0;
        }
        tdescf = source.substring(242, 243);
        OFFILLER25 = source.substring(243, 247);
        tdesci = source.substring(247, 307);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(307, 309).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            trnamtl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            trnamtl = 0;
        }
        trnamtf = source.substring(309, 310);
        OFFILLER27 = source.substring(310, 314);
        trnamti = source.substring(314, 326);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(326, 328).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            torigdtl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            torigdtl = 0;
        }
        torigdtf = source.substring(328, 329);
        OFFILLER29 = source.substring(329, 333);
        torigdti = source.substring(333, 343);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(343, 345).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            tprocdtl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            tprocdtl = 0;
        }
        tprocdtf = source.substring(345, 346);
        OFFILLER31 = source.substring(346, 350);
        tprocdti = source.substring(350, 360);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(360, 362).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            midl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            midl = 0;
        }
        midf = source.substring(362, 363);
        OFFILLER33 = source.substring(363, 367);
        midi = source.substring(367, 376);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(376, 378).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            mnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            mnamel = 0;
        }
        mnamef = source.substring(378, 379);
        OFFILLER35 = source.substring(379, 383);
        mnamei = source.substring(383, 413);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(413, 415).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            mcityl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            mcityl = 0;
        }
        mcityf = source.substring(415, 416);
        OFFILLER37 = source.substring(416, 420);
        mcityi = source.substring(420, 445);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(445, 447).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            mzipl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            mzipl = 0;
        }
        mzipf = source.substring(447, 448);
        OFFILLER39 = source.substring(448, 452);
        mzipi = source.substring(452, 462);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(462, 464).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            confirml = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            confirml = 0;
        }
        confirmf = source.substring(464, 465);
        OFFILLER41 = source.substring(465, 469);
        confirmi = source.substring(469, 470);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(470, 472).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            errmsgl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            errmsgl = 0;
        }
        errmsgf = source.substring(472, 473);
        OFFILLER43 = source.substring(473, 477);
        errmsgi = source.substring(477, 555);
    }

    public String get() {
        ByteBuffer tempByteBuffer1;
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) trnnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(trnnamef);
        sb.append(OFFILLER3);
        sb.append(trnnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title01l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title01f);
        sb.append(OFFILLER5);
        sb.append(title01i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curdatel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curdatef);
        sb.append(OFFILLER7);
        sb.append(curdatei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) pgmnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(pgmnamef);
        sb.append(OFFILLER9);
        sb.append(pgmnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title02l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title02f);
        sb.append(OFFILLER11);
        sb.append(title02i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curtimel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curtimef);
        sb.append(OFFILLER13);
        sb.append(curtimei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) actidinl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(actidinf);
        sb.append(OFFILLER15);
        sb.append(actidini);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) cardninl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(cardninf);
        sb.append(OFFILLER17);
        sb.append(cardnini);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) ttypcdl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(ttypcdf);
        sb.append(OFFILLER19);
        sb.append(ttypcdi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) tcatcdl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(tcatcdf);
        sb.append(OFFILLER21);
        sb.append(tcatcdi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) trnsrcl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(trnsrcf);
        sb.append(OFFILLER23);
        sb.append(trnsrci);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) tdescl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(tdescf);
        sb.append(OFFILLER25);
        sb.append(tdesci);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) trnamtl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(trnamtf);
        sb.append(OFFILLER27);
        sb.append(trnamti);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) torigdtl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(torigdtf);
        sb.append(OFFILLER29);
        sb.append(torigdti);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) tprocdtl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(tprocdtf);
        sb.append(OFFILLER31);
        sb.append(tprocdti);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) midl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(midf);
        sb.append(OFFILLER33);
        sb.append(midi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) mnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(mnamef);
        sb.append(OFFILLER35);
        sb.append(mnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) mcityl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(mcityf);
        sb.append(OFFILLER37);
        sb.append(mcityi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) mzipl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(mzipf);
        sb.append(OFFILLER39);
        sb.append(mzipi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) confirml);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(confirmf);
        sb.append(OFFILLER41);
        sb.append(confirmi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) errmsgl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(errmsgf);
        sb.append(OFFILLER43);
        sb.append(errmsgi);
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        sb.append(String.valueOf(getTrnnamel()));
        sb.append(getTrnnamef());
        sb.append(OFFILLER3);
        sb.append(getTrnnamei());
        sb.append(String.valueOf(getTitle01l()));
        sb.append(getTitle01f());
        sb.append(OFFILLER5);
        sb.append(getTitle01i());
        sb.append(String.valueOf(getCurdatel()));
        sb.append(getCurdatef());
        sb.append(OFFILLER7);
        sb.append(getCurdatei());
        sb.append(String.valueOf(getPgmnamel()));
        sb.append(getPgmnamef());
        sb.append(OFFILLER9);
        sb.append(getPgmnamei());
        sb.append(String.valueOf(getTitle02l()));
        sb.append(getTitle02f());
        sb.append(OFFILLER11);
        sb.append(getTitle02i());
        sb.append(String.valueOf(getCurtimel()));
        sb.append(getCurtimef());
        sb.append(OFFILLER13);
        sb.append(getCurtimei());
        sb.append(String.valueOf(getActidinl()));
        sb.append(getActidinf());
        sb.append(OFFILLER15);
        sb.append(getActidini());
        sb.append(String.valueOf(getCardninl()));
        sb.append(getCardninf());
        sb.append(OFFILLER17);
        sb.append(getCardnini());
        sb.append(String.valueOf(getTtypcdl()));
        sb.append(getTtypcdf());
        sb.append(OFFILLER19);
        sb.append(getTtypcdi());
        sb.append(String.valueOf(getTcatcdl()));
        sb.append(getTcatcdf());
        sb.append(OFFILLER21);
        sb.append(getTcatcdi());
        sb.append(String.valueOf(getTrnsrcl()));
        sb.append(getTrnsrcf());
        sb.append(OFFILLER23);
        sb.append(getTrnsrci());
        sb.append(String.valueOf(getTdescl()));
        sb.append(getTdescf());
        sb.append(OFFILLER25);
        sb.append(getTdesci());
        sb.append(String.valueOf(getTrnamtl()));
        sb.append(getTrnamtf());
        sb.append(OFFILLER27);
        sb.append(getTrnamti());
        sb.append(String.valueOf(getTorigdtl()));
        sb.append(getTorigdtf());
        sb.append(OFFILLER29);
        sb.append(getTorigdti());
        sb.append(String.valueOf(getTprocdtl()));
        sb.append(getTprocdtf());
        sb.append(OFFILLER31);
        sb.append(getTprocdti());
        sb.append(String.valueOf(getMidl()));
        sb.append(getMidf());
        sb.append(OFFILLER33);
        sb.append(getMidi());
        sb.append(String.valueOf(getMnamel()));
        sb.append(getMnamef());
        sb.append(OFFILLER35);
        sb.append(getMnamei());
        sb.append(String.valueOf(getMcityl()));
        sb.append(getMcityf());
        sb.append(OFFILLER37);
        sb.append(getMcityi());
        sb.append(String.valueOf(getMzipl()));
        sb.append(getMzipf());
        sb.append(OFFILLER39);
        sb.append(getMzipi());
        sb.append(String.valueOf(getConfirml()));
        sb.append(getConfirmf());
        sb.append(OFFILLER41);
        sb.append(getConfirmi());
        sb.append(String.valueOf(getErrmsgl()));
        sb.append(getErrmsgf());
        sb.append(OFFILLER43);
        sb.append(getErrmsgi());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER2 {
        // [T-Up#INFO][COTRN02.CPY, LINE #23] TRNNAMEA (level: 3)
        private @Getter String trnnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER4 {
        // [T-Up#INFO][COTRN02.CPY, LINE #29] TITLE01A (level: 3)
        private @Getter String title01a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER6 {
        // [T-Up#INFO][COTRN02.CPY, LINE #35] CURDATEA (level: 3)
        private @Getter String curdatea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER8 {
        // [T-Up#INFO][COTRN02.CPY, LINE #41] PGMNAMEA (level: 3)
        private @Getter String pgmnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER10 {
        // [T-Up#INFO][COTRN02.CPY, LINE #47] TITLE02A (level: 3)
        private @Getter String title02a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER12 {
        // [T-Up#INFO][COTRN02.CPY, LINE #53] CURTIMEA (level: 3)
        private @Getter String curtimea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER14 {
        // [T-Up#INFO][COTRN02.CPY, LINE #59] ACTIDINA (level: 3)
        private @Getter String actidina = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(actidina);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(actidina);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER16 {
        // [T-Up#INFO][COTRN02.CPY, LINE #65] CARDNINA (level: 3)
        private @Getter String cardnina = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(cardnina);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(cardnina);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER18 {
        // [T-Up#INFO][COTRN02.CPY, LINE #71] TTYPCDA (level: 3)
        private @Getter String ttypcda = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(ttypcda);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(ttypcda);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER20 {
        // [T-Up#INFO][COTRN02.CPY, LINE #77] TCATCDA (level: 3)
        private @Getter String tcatcda = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(tcatcda);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(tcatcda);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER22 {
        // [T-Up#INFO][COTRN02.CPY, LINE #83] TRNSRCA (level: 3)
        private @Getter String trnsrca = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnsrca);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnsrca);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER24 {
        // [T-Up#INFO][COTRN02.CPY, LINE #89] TDESCA (level: 3)
        private @Getter String tdesca = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(tdesca);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(tdesca);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER26 {
        // [T-Up#INFO][COTRN02.CPY, LINE #95] TRNAMTA (level: 3)
        private @Getter String trnamta = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnamta);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnamta);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER28 {
        // [T-Up#INFO][COTRN02.CPY, LINE #101] TORIGDTA (level: 3)
        private @Getter String torigdta = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(torigdta);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(torigdta);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER30 {
        // [T-Up#INFO][COTRN02.CPY, LINE #107] TPROCDTA (level: 3)
        private @Getter String tprocdta = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(tprocdta);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(tprocdta);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER32 {
        // [T-Up#INFO][COTRN02.CPY, LINE #113] MIDA (level: 3)
        private @Getter String mida = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(mida);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(mida);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER34 {
        // [T-Up#INFO][COTRN02.CPY, LINE #119] MNAMEA (level: 3)
        private @Getter String mnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(mnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(mnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER36 {
        // [T-Up#INFO][COTRN02.CPY, LINE #125] MCITYA (level: 3)
        private @Getter String mcitya = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(mcitya);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(mcitya);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER38 {
        // [T-Up#INFO][COTRN02.CPY, LINE #131] MZIPA (level: 3)
        private @Getter String mzipa = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(mzipa);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(mzipa);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER40 {
        // [T-Up#INFO][COTRN02.CPY, LINE #137] CONFIRMA (level: 3)
        private @Getter String confirma = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(confirma);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(confirma);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER42 {
        // [T-Up#INFO][COTRN02.CPY, LINE #143] ERRMSGA (level: 3)
        private @Getter String errmsga = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }
    }
}
