package aws.carddemo.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import aws.carddemo.variable.group.Cobil00cAccountRecord;
import aws.carddemo.dto.AwsM2CarddemoAcctdataVsamKsdsDto;
import aws.carddemo.variable.group.Cobil00cCardXrefRecord;
import aws.carddemo.dto.AwsM2CarddemoCardxrefVsamKsdsDto;
import aws.carddemo.variable.group.Cobil00cCarddemoCommarea;
import aws.carddemo.variable.group.Cosgn00cDfhcommarea;
import aws.carddemo.variable.group.Cobil00cDfhcommarea;
import aws.carddemo.variable.group.Comen01cDfhcommarea;
import aws.carddemo.variable.group.Cobil00cTranRecord;
import aws.carddemo.dto.AwsM2CarddemoTransactVsamKsdsDto;
import lombok.*;
import java.math.*;
import java.util.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:47 UTC</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface Cobil00cMapperInterface {
    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cAccountRecord}</li>
     * <li>target class: {@link AwsM2CarddemoAcctdataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cAccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto {
        Cobil00cAccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cobil00cAccountRecordToAwsM2CarddemoAcctdataVsamKsdsDto.class);

        @Mapping(source = "acctId", target = "acctId")
        @Mapping(source = "acctActiveStatus", target = "acctActiveStatus")
        @Mapping(source = "acctCurrBal", target = "acctCurrBal")
        @Mapping(source = "acctCreditLimit", target = "acctCreditLimit")
        @Mapping(source = "acctCashCreditLimit", target = "acctCashCreditLimit")
        @Mapping(source = "acctOpenDate", target = "acctOpenDate")
        @Mapping(source = "acctExpiraionDate", target = "acctExpiraionDate")
        @Mapping(source = "acctReissueDate", target = "acctReissueDate")
        @Mapping(source = "acctCurrCycCredit", target = "acctCurrCycCredit")
        @Mapping(source = "acctCurrCycDebit", target = "acctCurrCycDebit")
        @Mapping(source = "acctAddrZip", target = "acctAddrZip")
        @Mapping(source = "acctGroupId", target = "acctGroupId")
        @Mapping(source = "OFFILLER1", target = "filler")
        AwsM2CarddemoAcctdataVsamKsdsDto toTarget(Cobil00cAccountRecord source);

        @Mapping(source = "acctId", target = "acctId")
        @Mapping(source = "acctActiveStatus", target = "acctActiveStatus")
        @Mapping(source = "acctCurrBal", target = "acctCurrBal")
        @Mapping(source = "acctCreditLimit", target = "acctCreditLimit")
        @Mapping(source = "acctCashCreditLimit", target = "acctCashCreditLimit")
        @Mapping(source = "acctOpenDate", target = "acctOpenDate")
        @Mapping(source = "acctExpiraionDate", target = "acctExpiraionDate")
        @Mapping(source = "acctReissueDate", target = "acctReissueDate")
        @Mapping(source = "acctCurrCycCredit", target = "acctCurrCycCredit")
        @Mapping(source = "acctCurrCycDebit", target = "acctCurrCycDebit")
        @Mapping(source = "acctAddrZip", target = "acctAddrZip")
        @Mapping(source = "acctGroupId", target = "acctGroupId")
        @Mapping(source = "filler", target = "OFFILLER1")
        Cobil00cAccountRecord toSource(AwsM2CarddemoAcctdataVsamKsdsDto source);
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cCardXrefRecord}</li>
     * <li>target class: {@link AwsM2CarddemoCardxrefVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cCardXrefRecordToAwsM2CarddemoCardxrefVsamKsdsDto {
        Cobil00cCardXrefRecordToAwsM2CarddemoCardxrefVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cobil00cCardXrefRecordToAwsM2CarddemoCardxrefVsamKsdsDto.class);

        @Mapping(source = "xrefCardNum", target = "xrefCardNum")
        @Mapping(source = "xrefCustId", target = "xrefCustId")
        @Mapping(source = "xrefAcctId", target = "xrefAcctId")
        @Mapping(source = "OFFILLER1", target = "filler")
        AwsM2CarddemoCardxrefVsamKsdsDto toTarget(Cobil00cCardXrefRecord source);

        @Mapping(source = "xrefCardNum", target = "xrefCardNum")
        @Mapping(source = "xrefCustId", target = "xrefCustId")
        @Mapping(source = "xrefAcctId", target = "xrefAcctId")
        @Mapping(source = "filler", target = "OFFILLER1")
        Cobil00cCardXrefRecord toSource(AwsM2CarddemoCardxrefVsamKsdsDto source);
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cCarddemoCommarea}</li>
     * <li>target class: {@link Cosgn00cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cCarddemoCommareaToCosgn00cDfhcommarea {
        Cobil00cCarddemoCommareaToCosgn00cDfhcommarea INSTANCE = Mappers
                .getMapper(Cobil00cCarddemoCommareaToCosgn00cDfhcommarea.class);

        Cosgn00cDfhcommarea toTarget(Cobil00cCarddemoCommarea source);

        Cobil00cCarddemoCommarea toSource(Cosgn00cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cobil00cCarddemoCommarea source,
                @MappingTarget Cosgn00cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidFirst()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCb00Info().getCdemoCb00PageNum(), 8)
                    + source.getCdemoCb00Info().getCdemoCb00NextPageFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelected());
        }

        @AfterMapping
        default void makeSource(Cosgn00cDfhcommarea source,
                @MappingTarget Cobil00cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    source.getLkCommarea().substring(0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    source.getLkCommarea().substring(4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    source.getLkCommarea().substring(12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    source.getLkCommarea().substring(16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    source.getLkCommarea().substring(24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    source.getLkCommarea().substring(32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    source.getLkCommarea().substring(43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    source.getLkCommarea().substring(68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    source.getLkCommarea().substring(93, 118));
            target.getCdemoAccountInfo().setCdemoAcctId(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(118, 129), 11));
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    source.getLkCommarea().substring(129, 130));
            target.getCdemoCardInfo().setCdemoCardNum(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(130, 146), 16));
            target.getCdemoMoreInfo().setCdemoLastMap(
                    source.getLkCommarea().substring(146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    source.getLkCommarea().substring(153, 160));
            target.getCdemoCb00Info().setCdemoCb00TrnidFirst(
                    source.getLkCommarea().substring(160, 176));
            target.getCdemoCb00Info().setCdemoCb00TrnidLast(
                    source.getLkCommarea().substring(176, 192));
            target.getCdemoCb00Info().setCdemoCb00PageNum(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(192, 200), 8)));
            target.getCdemoCb00Info().setCdemoCb00NextPageFlg(
                    source.getLkCommarea().substring(200, 201));
            target.getCdemoCb00Info().setCdemoCb00TrnSelFlg(
                    source.getLkCommarea().substring(201, 202));
            target.getCdemoCb00Info().setCdemoCb00TrnSelected(
                    source.getLkCommarea().substring(202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cCarddemoCommarea}</li>
     * <li>target class: {@link Cobil00cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cCarddemoCommareaToCobil00cDfhcommarea {
        Cobil00cCarddemoCommareaToCobil00cDfhcommarea INSTANCE = Mappers
                .getMapper(Cobil00cCarddemoCommareaToCobil00cDfhcommarea.class);

        Cobil00cDfhcommarea toTarget(Cobil00cCarddemoCommarea source);

        Cobil00cCarddemoCommarea toSource(Cobil00cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cobil00cCarddemoCommarea source,
                @MappingTarget Cobil00cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidFirst()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCb00Info().getCdemoCb00PageNum(), 8)
                    + source.getCdemoCb00Info().getCdemoCb00NextPageFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelected());
        }

        @AfterMapping
        default void makeSource(Cobil00cDfhcommarea source,
                @MappingTarget Cobil00cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    source.getLkCommarea().substring(0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    source.getLkCommarea().substring(4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    source.getLkCommarea().substring(12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    source.getLkCommarea().substring(16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    source.getLkCommarea().substring(24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    source.getLkCommarea().substring(32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    source.getLkCommarea().substring(43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    source.getLkCommarea().substring(68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    source.getLkCommarea().substring(93, 118));
            target.getCdemoAccountInfo().setCdemoAcctId(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(118, 129), 11));
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    source.getLkCommarea().substring(129, 130));
            target.getCdemoCardInfo().setCdemoCardNum(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(130, 146), 16));
            target.getCdemoMoreInfo().setCdemoLastMap(
                    source.getLkCommarea().substring(146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    source.getLkCommarea().substring(153, 160));
            target.getCdemoCb00Info().setCdemoCb00TrnidFirst(
                    source.getLkCommarea().substring(160, 176));
            target.getCdemoCb00Info().setCdemoCb00TrnidLast(
                    source.getLkCommarea().substring(176, 192));
            target.getCdemoCb00Info().setCdemoCb00PageNum(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(192, 200), 8)));
            target.getCdemoCb00Info().setCdemoCb00NextPageFlg(
                    source.getLkCommarea().substring(200, 201));
            target.getCdemoCb00Info().setCdemoCb00TrnSelFlg(
                    source.getLkCommarea().substring(201, 202));
            target.getCdemoCb00Info().setCdemoCb00TrnSelected(
                    source.getLkCommarea().substring(202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cCarddemoCommarea}</li>
     * <li>target class: {@link Comen01cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cCarddemoCommareaToComen01cDfhcommarea {
        Cobil00cCarddemoCommareaToComen01cDfhcommarea INSTANCE = Mappers
                .getMapper(Cobil00cCarddemoCommareaToComen01cDfhcommarea.class);

        Comen01cDfhcommarea toTarget(Cobil00cCarddemoCommarea source);

        Cobil00cCarddemoCommarea toSource(Comen01cDfhcommarea source);

        @AfterMapping
        default void makeTarget(Cobil00cCarddemoCommarea source,
                @MappingTarget Comen01cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidFirst()
                    + source.getCdemoCb00Info().getCdemoCb00TrnidLast()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCb00Info().getCdemoCb00PageNum(), 8)
                    + source.getCdemoCb00Info().getCdemoCb00NextPageFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelFlg()
                    + source.getCdemoCb00Info().getCdemoCb00TrnSelected());
        }

        @AfterMapping
        default void makeSource(Comen01cDfhcommarea source,
                @MappingTarget Cobil00cCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    source.getLkCommarea().substring(0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    source.getLkCommarea().substring(4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    source.getLkCommarea().substring(12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    source.getLkCommarea().substring(16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    source.getLkCommarea().substring(24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    source.getLkCommarea().substring(32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    source.getLkCommarea().substring(43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    source.getLkCommarea().substring(68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    source.getLkCommarea().substring(93, 118));
            target.getCdemoAccountInfo().setCdemoAcctId(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(118, 129), 11));
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    source.getLkCommarea().substring(129, 130));
            target.getCdemoCardInfo().setCdemoCardNum(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(130, 146), 16));
            target.getCdemoMoreInfo().setCdemoLastMap(
                    source.getLkCommarea().substring(146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    source.getLkCommarea().substring(153, 160));
            target.getCdemoCb00Info().setCdemoCb00TrnidFirst(
                    source.getLkCommarea().substring(160, 176));
            target.getCdemoCb00Info().setCdemoCb00TrnidLast(
                    source.getLkCommarea().substring(176, 192));
            target.getCdemoCb00Info().setCdemoCb00PageNum(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(192, 200), 8)));
            target.getCdemoCb00Info().setCdemoCb00NextPageFlg(
                    source.getLkCommarea().substring(200, 201));
            target.getCdemoCb00Info().setCdemoCb00TrnSelFlg(
                    source.getLkCommarea().substring(201, 202));
            target.getCdemoCb00Info().setCdemoCb00TrnSelected(
                    source.getLkCommarea().substring(202, 218));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link Cobil00cTranRecord}</li>
     * <li>target class: {@link AwsM2CarddemoTransactVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cobil00cTranRecordToAwsM2CarddemoTransactVsamKsdsDto {
        Cobil00cTranRecordToAwsM2CarddemoTransactVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cobil00cTranRecordToAwsM2CarddemoTransactVsamKsdsDto.class);

        @Mapping(source = "tranId", target = "tranId")
        @Mapping(source = "tranTypeCd", target = "tranTypeCd")
        @Mapping(source = "tranCatCd", target = "tranCatCd")
        @Mapping(source = "tranSource", target = "tranSource")
        @Mapping(source = "tranDesc", target = "tranDesc")
        @Mapping(source = "tranAmt", target = "tranAmt")
        @Mapping(source = "tranMerchantId", target = "tranMerchantId")
        @Mapping(source = "tranMerchantName", target = "tranMerchantName")
        @Mapping(source = "tranMerchantCity", target = "tranMerchantCity")
        @Mapping(source = "tranMerchantZip", target = "tranMerchantZip")
        @Mapping(source = "tranCardNum", target = "tranCardNum")
        @Mapping(source = "tranOrigTs", target = "tranOrigTs")
        @Mapping(source = "tranProcTs", target = "tranProcTs")
        @Mapping(source = "OFFILLER1", target = "filler")
        AwsM2CarddemoTransactVsamKsdsDto toTarget(Cobil00cTranRecord source);

        @Mapping(source = "tranId", target = "tranId")
        @Mapping(source = "tranTypeCd", target = "tranTypeCd")
        @Mapping(source = "tranCatCd", target = "tranCatCd")
        @Mapping(source = "tranSource", target = "tranSource")
        @Mapping(source = "tranDesc", target = "tranDesc")
        @Mapping(source = "tranAmt", target = "tranAmt")
        @Mapping(source = "tranMerchantId", target = "tranMerchantId")
        @Mapping(source = "tranMerchantName", target = "tranMerchantName")
        @Mapping(source = "tranMerchantCity", target = "tranMerchantCity")
        @Mapping(source = "tranMerchantZip", target = "tranMerchantZip")
        @Mapping(source = "tranCardNum", target = "tranCardNum")
        @Mapping(source = "tranOrigTs", target = "tranOrigTs")
        @Mapping(source = "tranProcTs", target = "tranProcTs")
        @Mapping(source = "filler", target = "OFFILLER1")
        Cobil00cTranRecord toSource(AwsM2CarddemoTransactVsamKsdsDto source);
    }
}
