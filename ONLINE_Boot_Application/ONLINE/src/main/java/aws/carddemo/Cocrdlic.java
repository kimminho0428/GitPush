package aws.carddemo;

import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.Comen01cInputDto;
import aws.carddemo.mapper.CocrdlicMapperInterface.*;
import aws.carddemo.dto.CocrdslcInputDto;
import aws.carddemo.dto.CocrdupcInputDto;
import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.CocrdlicOutputDto;
import com.tmax.openframe.online.service.exception.ConditionException;
import aws.carddemo.dto.CocrdlicInputDto;
import aws.carddemo.dao.AwsM2CarddemoCarddataVsamKsdsDao;
import aws.carddemo.dto.AwsM2CarddemoCarddataVsamKsdsDto;
import com.tmax.openframe.online.service.api.ReadPointManager;
import com.tmax.openframe.online.service.dto.ReadPoint;
import com.tmax.openframe.online.service.api.ReadPointAccessor;
import static aws.carddemo.variable.group.CocrdlicCarddemoCommarea.CocrdlicCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.CocrdlicCcWorkAreas.CocrdlicCcWorkArea.*;
import static aws.carddemo.variable.group.CocrdlicWsMiscStorage.*;
import static aws.carddemo.variable.group.CocrdlicWsMiscStorage.CocrdlicCicsOutputEditVars.*;
import static aws.carddemo.variable.group.CocrdlicWsMiscStorage.CocrdlicWsEditSelectArray.*;
import static aws.carddemo.variable.group.CocrdlicWsThisProgcommarea.*;
import aws.carddemo.variable.CocrdlicVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:51 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: COCRDLIC.cbl</li>
 * <li>Variable container class: {@link CocrdlicVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cocrdlic {
    private final ReadPointAccessor readPointAccessor;
    private final ReadPointManager readPointManager;
    private final Task task;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> _0000Main = this::_0000Main;
    Consumer<OpenFrameContext> commonReturn = this::commonReturn;
    Consumer<OpenFrameContext> _0000MainExit = this::_0000MainExit;
    Consumer<OpenFrameContext> _1000SendMap = this::_1000SendMap;
    Consumer<OpenFrameContext> _1000SendMapExit = this::_1000SendMapExit;
    Consumer<OpenFrameContext> _1100ScreenInit = this::_1100ScreenInit;
    Consumer<OpenFrameContext> _1100ScreenInitExit = this::_1100ScreenInitExit;
    Consumer<OpenFrameContext> _1200ScreenArrayInit = this::_1200ScreenArrayInit;
    Consumer<OpenFrameContext> _1200ScreenArrayInitExit = this::_1200ScreenArrayInitExit;
    Consumer<OpenFrameContext> _1250SetupArrayAttribs = this::_1250SetupArrayAttribs;
    Consumer<OpenFrameContext> _1250SetupArrayAttribsExit = this::_1250SetupArrayAttribsExit;
    Consumer<OpenFrameContext> _1300SetupScreenAttrs = this::_1300SetupScreenAttrs;
    Consumer<OpenFrameContext> _1300SetupScreenAttrsExit = this::_1300SetupScreenAttrsExit;
    Consumer<OpenFrameContext> _1400SetupMessage = this::_1400SetupMessage;
    Consumer<OpenFrameContext> _1400SetupMessageExit = this::_1400SetupMessageExit;
    Consumer<OpenFrameContext> _1500SendScreen = this::_1500SendScreen;
    Consumer<OpenFrameContext> _1500SendScreenExit = this::_1500SendScreenExit;
    Consumer<OpenFrameContext> _2000ReceiveMap = this::_2000ReceiveMap;
    Consumer<OpenFrameContext> _2000ReceiveMapExit = this::_2000ReceiveMapExit;
    Consumer<OpenFrameContext> _2100ReceiveScreen = this::_2100ReceiveScreen;
    Consumer<OpenFrameContext> _2100ReceiveScreenExit = this::_2100ReceiveScreenExit;
    Consumer<OpenFrameContext> _2200EditInputs = this::_2200EditInputs;
    Consumer<OpenFrameContext> _2200EditInputsExit = this::_2200EditInputsExit;
    Consumer<OpenFrameContext> _2210EditAccount = this::_2210EditAccount;
    Consumer<OpenFrameContext> _2210EditAccountExit = this::_2210EditAccountExit;
    Consumer<OpenFrameContext> _2220EditCard = this::_2220EditCard;
    Consumer<OpenFrameContext> _2220EditCardExit = this::_2220EditCardExit;
    Consumer<OpenFrameContext> _2250EditArray = this::_2250EditArray;
    Consumer<OpenFrameContext> _2250EditArrayExit = this::_2250EditArrayExit;
    Consumer<OpenFrameContext> _9000ReadForward = this::_9000ReadForward;
    Consumer<OpenFrameContext> _9000ReadForwardExit = this::_9000ReadForwardExit;
    Consumer<OpenFrameContext> _9100ReadBackwards = this::_9100ReadBackwards;
    Consumer<OpenFrameContext> _9100ReadBackwardsExit = this::_9100ReadBackwardsExit;
    Consumer<OpenFrameContext> _9500FilterRecords = this::_9500FilterRecords;
    Consumer<OpenFrameContext> _9500FilterRecordsExit = this::_9500FilterRecordsExit;
    Consumer<OpenFrameContext> yyyyStorePfkey = this::yyyyStorePfkey;
    Consumer<OpenFrameContext> yyyyStorePfkeyExit = this::yyyyStorePfkeyExit;
    Consumer<OpenFrameContext> sendPlainText = this::sendPlainText;
    Consumer<OpenFrameContext> sendPlainTextExit = this::sendPlainTextExit;
    Consumer<OpenFrameContext> sendLongText = this::sendLongText;
    Consumer<OpenFrameContext> sendLongTextExit = this::sendLongTextExit;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(_0000Main);
        methodList.add(commonReturn);
        methodList.add(_0000MainExit);
        methodList.add(_1000SendMap);
        methodList.add(_1000SendMapExit);
        methodList.add(_1100ScreenInit);
        methodList.add(_1100ScreenInitExit);
        methodList.add(_1200ScreenArrayInit);
        methodList.add(_1200ScreenArrayInitExit);
        methodList.add(_1250SetupArrayAttribs);
        methodList.add(_1250SetupArrayAttribsExit);
        methodList.add(_1300SetupScreenAttrs);
        methodList.add(_1300SetupScreenAttrsExit);
        methodList.add(_1400SetupMessage);
        methodList.add(_1400SetupMessageExit);
        methodList.add(_1500SendScreen);
        methodList.add(_1500SendScreenExit);
        methodList.add(_2000ReceiveMap);
        methodList.add(_2000ReceiveMapExit);
        methodList.add(_2100ReceiveScreen);
        methodList.add(_2100ReceiveScreenExit);
        methodList.add(_2200EditInputs);
        methodList.add(_2200EditInputsExit);
        methodList.add(_2210EditAccount);
        methodList.add(_2210EditAccountExit);
        methodList.add(_2220EditCard);
        methodList.add(_2220EditCardExit);
        methodList.add(_2250EditArray);
        methodList.add(_2250EditArrayExit);
        methodList.add(_9000ReadForward);
        methodList.add(_9000ReadForwardExit);
        methodList.add(_9100ReadBackwards);
        methodList.add(_9100ReadBackwardsExit);
        methodList.add(_9500FilterRecords);
        methodList.add(_9500FilterRecordsExit);
        methodList.add(yyyyStorePfkey);
        methodList.add(yyyyStorePfkeyExit);
        methodList.add(sendPlainText);
        methodList.add(sendPlainTextExit);
        methodList.add(sendLongText);
        methodList.add(sendLongTextExit);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cocrdlic") == null) {
            CocrdlicVariableContainer container = new CocrdlicVariableContainer();
            context.setProgramVariableContainer("Cocrdlic", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ***************************************************************** 
    // * Program:     COCRDLIC.CBL                                     * 
    // * Layer:       Business logic                                   * 
    // * Function:    List Credit Cards                                  
    // *              a) All cards if no context passed and admin user   
    // *              b) Only the ones associated with ACCT in COMMAREA  
    // *                 if user is not admin                            
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             

    void _0000Main(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #297] INITIALIZE statement
        container.getCcWorkAreas().setCcWorkArea(
                CocrdlicCcWorkAreas.CocrdlicCcWorkArea
                        .createDefaultValueInstance());
        container.setWsMiscStorage(CocrdlicWsMiscStorage
                .createDefaultValueInstance());
        container.setWsCommarea(StringUtils.repeat(' ', 2000));
        // ***************************************************************** 
        // * Store our context                                               
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #304] MOVE statement
        container.getWsMiscStorage().getWsCicsProcessngVars()
                .setWsTranid(container.getWsConstants().getLitThistranid());
        // ***************************************************************** 
        // * Ensure error message is cleared                               * 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #308] SET statement
        container.getWsMiscStorage().setWsErrorMsg(WS_ERROR_MSG_OFF);
        // ***************************************************************** 
        // * Retrived passed data if  any. Initialize them if first run.     
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #312] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #313] INITIALIZE statement
            container.setCarddemoCommarea(CocrdlicCarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CocrdlicWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #315] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsConstants().getLitThistranid());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #316] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #317] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #318] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #319] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #320] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #321] SET statement
            container.getWsThisProgcommarea().setWsCaScreenNum(CA_FIRST_PAGE);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #322] SET statement
            container.getWsThisProgcommarea().setWsCaLastPageDisplayed(
                    CA_LAST_PAGE_NOT_SHOWN);
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #324] MOVE statement
            container.getCarddemoCommarea().set(
                    container.getDfhcommarea().get().substring(0, 160));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #326] MOVE statement
            container.getWsThisProgcommarea().set(
                    container.getDfhcommarea().get().substring(160, 414));
        }
        // ***************************************************************** 
        // * If coming in from menu. Lets forget the past and start afresh * 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #333] IF statement
        if (container.getCarddemoCommarea().getCdemoGeneralInfo()
                .getCdemoPgmContext() == CDEMO_PGM_ENTER
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitThispgm()) != 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #335] INITIALIZE statement
            container.setWsThisProgcommarea(CocrdlicWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #336] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #337] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #338] SET statement
            container.getWsThisProgcommarea().setWsCaScreenNum(CA_FIRST_PAGE);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #339] SET statement
            container.getWsThisProgcommarea().setWsCaLastPageDisplayed(
                    CA_LAST_PAGE_NOT_SHOWN);
        }
        // ******************************************************************
        // * Remap PFkeys as needed.                                         
        // * Store the Mapped PF Key                                         
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #346] PERFORM statement
        controlManager.run(context, yyyyStorePfkey, yyyyStorePfkeyExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // ******************************************************************
        // * If something is present in commarea                             
        // * and the from program is this program itself,                    
        // * read and edit the inputs given                                  
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #354] IF statement
        if (task.hasCommarea() > 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitThispgm()) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #356] PERFORM statement
            controlManager.run(context, _2000ReceiveMap, _2000ReceiveMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // ***************************************************************** 
        // * Check the mapped key  to see if its valid at this point       * 
        // * F3    - Exit                                                    
        // * Enter - List of cards for current start key                     
        // * F8    - Page down                                               
        // * F7    - Page up                                                 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #367] SET statement
        container.getWsMiscStorage().setWsPfkFlag(PFK_INVALID);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #368] IF statement
        if (((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_ENTER) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcardAid(), CCARD_AID_PFK03) == 0) || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcardAid(), CCARD_AID_PFK07) == 0)
                || CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK08) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #372] SET statement
            container.getWsMiscStorage().setWsPfkFlag(PFK_VALID);
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #375] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage().getWsPfkFlag(),
                PFK_INVALID) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #376] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        }
        // ***************************************************************** 
        // * If the user pressed PF3 go back to main menu                    
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #381] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK03) == 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitThispgm()) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #383] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsConstants().getLitThistranid());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #384] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #385] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #386] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #387] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #388] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #389] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoToProgram(
                            container.getWsConstants().getLitMenupgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #391] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMapset(
                            container.getWsConstants().getLitMenumapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #392] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #393] SET statement
            container.getWsMiscStorage().setWsErrorMsg(WS_EXIT_MESSAGE);
            // *       CALL MENU PROGRAM                                         
            // *                                                                 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #397] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // *                                                                 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #399] EXEC_CICS statement
            /*
                              EXEC CICS XCTL                                            
                                        PROGRAM ('COMEN01C')                            
                                        COMMAREA(CARDDEMO-COMMAREA)                     
                              END-EXEC
             */
            Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
            comen01cInputDto
                    .setDfhcommarea(CocrdlicCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CM00", comen01cInputDto);
            context.setReturnFlag(true);
        }
        // ***************************************************************** 
        // * If the user did not press PF8, lets reset the last page flag    
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #407] IF statement
        if (CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcardAid(), CCARD_AID_PFK08) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #408] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #410] SET statement
            container.getWsThisProgcommarea().setWsCaLastPageDisplayed(
                    CA_LAST_PAGE_NOT_SHOWN);
        }
        // ***************************************************************** 
        // * Now we decide what to do                                        
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #415] EVALUATE statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // ***************************************************************** 
            // *        ASK FOR CORRECTIONS TO INPUTS                            
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #420] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardErrorMsg(
                            container.getWsMiscStorage().getWsErrorMsg());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #421] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #422] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #423] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #425] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextProg(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #426] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #427] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #428] IF statement
            if (!(CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                    && !(CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0)) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #430] PERFORM statement
                controlManager.run(context, _9000ReadForward,
                        _9000ReadForwardExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #433] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMap);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #435] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if ((CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK07) == 0 && container
                .getWsThisProgcommarea().getWsCaScreenNum() == CA_FIRST_PAGE)
                || (CobStringUtils.compare(container.getCcWorkAreas()
                        .getCcWorkArea().getCcardAid(), CCARD_AID_PFK07) == 0 && container
                        .getWsThisProgcommarea().getWsCaScreenNum() == CA_FIRST_PAGE)) {
            // ***************************************************************** 
            // *        PAGE UP - PF7 - BUT ALREADY ON FIRST PAGE                
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #443] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            container.getWsThisProgcommarea()
                                    .getWsCaFirstCardkey()
                                    .getWsCaFirstCardNum());
            // *             MOVE WS-CA-FIRST-CARD-ACCT-ID                       
            // *                           TO WS-CARD-RID-ACCT-ID                
            // [T-Up#INFO][COCRDLIC.cbl, LINE #447] PERFORM statement
            controlManager.run(context, _9000ReadForward, _9000ReadForwardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #449] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMap);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #451] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if ((CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK03) == 0)
                || (container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_REENTER && CobStringUtils
                        .compare(container.getCarddemoCommarea()
                                .getCdemoGeneralInfo().getCdemoFromProgram(),
                                container.getWsConstants().getLitThispgm()) != 0)) {
            // ***************************************************************** 
            // *        BACK - PF3 IF WE CAME FROM SOME OTHER PROGRAM            
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #459] INITIALIZE statement
            container.setCarddemoCommarea(CocrdlicCarddemoCommarea
                    .createDefaultValueInstance());
            container.setWsThisProgcommarea(CocrdlicWsThisProgcommarea
                    .createDefaultValueInstance());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #461] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsConstants().getLitThistranid());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #462] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #463] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #464] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #465] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #466] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #467] SET statement
            container.getWsThisProgcommarea().setWsCaScreenNum(CA_FIRST_PAGE);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #468] SET statement
            container.getWsThisProgcommarea().setWsCaLastPageDisplayed(
                    CA_LAST_PAGE_NOT_SHOWN);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #470] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            container.getWsThisProgcommarea()
                                    .getWsCaFirstCardkey()
                                    .getWsCaFirstCardNum());
            // *             MOVE WS-CA-FIRST-CARD-ACCT-ID                       
            // *                           TO WS-CARD-RID-ACCT-ID                
            // [T-Up#INFO][COCRDLIC.cbl, LINE #475] PERFORM statement
            controlManager.run(context, _9000ReadForward, _9000ReadForwardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #477] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMap);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #479] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK08) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getWsCaNextPageInd(), CA_NEXT_PAGE_EXISTS) == 0) {
            // ***************************************************************** 
            // *        PAGE DOWN                                                
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #485] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            container.getWsThisProgcommarea()
                                    .getWsCaLastCardkey().getWsCaLastCardNum());
            // *             MOVE WS-CA-LAST-CARD-ACCT-ID                        
            // *                           TO WS-CARD-RID-ACCT-ID                
            // [T-Up#INFO][COCRDLIC.cbl, LINE #489] ADD statement
            container.getWsThisProgcommarea().setWsCaScreenNum(
                    container.getWsThisProgcommarea().getWsCaScreenNum() + 1);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #490] PERFORM statement
            controlManager.run(context, _9000ReadForward, _9000ReadForwardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #492] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #494] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK07) == 0
                && !(container.getWsThisProgcommarea().getWsCaScreenNum() == CA_FIRST_PAGE)) {
            // ***************************************************************** 
            // *        PAGE UP                                                  
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #501] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            container.getWsThisProgcommarea()
                                    .getWsCaFirstCardkey()
                                    .getWsCaFirstCardNum());
            // *             MOVE WS-CA-FIRST-CARD-ACCT-ID                       
            // *                           TO WS-CARD-RID-ACCT-ID                
            // [T-Up#INFO][COCRDLIC.cbl, LINE #505] SUBTRACT statement
            container.getWsThisProgcommarea().setWsCaScreenNum(
                    container.getWsThisProgcommarea().getWsCaScreenNum() - 1);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #506] PERFORM statement
            controlManager.run(context, _9100ReadBackwards,
                    _9100ReadBackwardsExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #508] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMapExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #510] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_ENTER) == 0
                && !(container.getWsMiscStorage().getWsSubscriptVars()
                        .getISelected() == 0)
                && CobStringUtils.compare(
                        container.getWsMiscStorage()
                                .getWsEditSelect(
                                        container.getWsMiscStorage()
                                                .getWsSubscriptVars()
                                                .getISelected() - 1),
                        VIEW_REQUESTED_ON) == 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitThispgm()) == 0) {
            // ***************************************************************** 
            // *        TRANSFER TO CARD DETAIL VIEW                             
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #518] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsConstants().getLitThistranid());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #519] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #520] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #521] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #522] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #523] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #524] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextProg(
                            container.getWsConstants().getLitCarddtlpgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #526] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMapset(
                            container.getWsConstants().getLitCarddtlmapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #527] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMap(
                            container.getWsConstants().getLitCarddtlmap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #529] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container
                                    .getWsThisProgcommarea()
                                    .getWsScreenData()
                                    .getWsScreenRows(
                                            container.getWsMiscStorage()
                                                    .getWsSubscriptVars()
                                                    .getISelected() - 1)
                                    .getWsEachRow().getWsEachCard()
                                    .getWsRowAcctno().trim()));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #531] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            Long.parseLong(container
                                    .getWsThisProgcommarea()
                                    .getWsScreenData()
                                    .getWsScreenRows(
                                            container.getWsMiscStorage()
                                                    .getWsSubscriptVars()
                                                    .getISelected() - 1)
                                    .getWsEachRow().getWsEachCard()
                                    .getWsRowCardNum().trim()));
            // *            CALL CARD DETAIL PROGRAM                             
            // *                                                                 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #536] EXEC_CICS statement
            /*
                                   EXEC CICS XCTL                                       
                                        PROGRAM ('COCRDSLC')                            
                                        COMMAREA(CARDDEMO-COMMAREA)                     
                                   END-EXEC
             */
            CocrdslcInputDto cocrdslcInputDto = new CocrdslcInputDto();
            cocrdslcInputDto
                    .setDfhcommarea(CocrdlicCarddemoCommareaToCocrdslcDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CCDL", cocrdslcInputDto);
            context.setReturnFlag(true);
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_ENTER) == 0
                && !(container.getWsMiscStorage().getWsSubscriptVars()
                        .getISelected() == 0)
                && CobStringUtils.compare(
                        container.getWsMiscStorage()
                                .getWsEditSelect(
                                        container.getWsMiscStorage()
                                                .getWsSubscriptVars()
                                                .getISelected() - 1),
                        UPDATE_REQUESTED_ON) == 0
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitThispgm()) == 0) {
            // ***************************************************************** 
            // *        TRANSFER TO CARD UPDATED PROGRAM                         
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #547] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsConstants().getLitThistranid());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #548] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #549] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoUserType(CDEMO_USRTYP_USER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #550] SET statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(CDEMO_PGM_ENTER);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #551] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #552] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #553] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextProg(
                            container.getWsConstants().getLitCardupdpgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #555] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMapset(
                            container.getWsConstants().getLitCardupdmapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #556] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMap(
                            container.getWsConstants().getLitCardupdmap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #558] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container
                                    .getWsThisProgcommarea()
                                    .getWsScreenData()
                                    .getWsScreenRows(
                                            container.getWsMiscStorage()
                                                    .getWsSubscriptVars()
                                                    .getISelected() - 1)
                                    .getWsEachRow().getWsEachCard()
                                    .getWsRowAcctno().trim()));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #560] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            Long.parseLong(container
                                    .getWsThisProgcommarea()
                                    .getWsScreenData()
                                    .getWsScreenRows(
                                            container.getWsMiscStorage()
                                                    .getWsSubscriptVars()
                                                    .getISelected() - 1)
                                    .getWsEachRow().getWsEachCard()
                                    .getWsRowCardNum().trim()));
            // *            CALL CARD UPDATE PROGRAM                             
            // *                                                                 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #565] EXEC_CICS statement
            /*
                                   EXEC CICS XCTL                                       
                                        PROGRAM ('COCRDUPC')                            
                                        COMMAREA(CARDDEMO-COMMAREA)                     
                                   END-EXEC
             */
            CocrdupcInputDto cocrdupcInputDto = new CocrdupcInputDto();
            cocrdupcInputDto
                    .setDfhcommarea(CocrdlicCarddemoCommareaToCocrdupcDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CCUP", cocrdupcInputDto);
            context.setReturnFlag(true);
        } else {
            // ***************************************************************** 
            // ***************************************************************** 
            // [T-Up#INFO][COCRDLIC.cbl, LINE #573] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            container.getWsThisProgcommarea()
                                    .getWsCaFirstCardkey()
                                    .getWsCaFirstCardNum());
            // *             MOVE WS-CA-FIRST-CARD-ACCT-ID                       
            // *                           TO WS-CARD-RID-ACCT-ID                
            // [T-Up#INFO][COCRDLIC.cbl, LINE #577] PERFORM statement
            controlManager.run(context, _9000ReadForward, _9000ReadForwardExit);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #579] PERFORM statement
            controlManager.run(context, _1000SendMap, _1000SendMap);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #581] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        }
        // * If we had an error setup error message to display and return    
        // [T-Up#INFO][COCRDLIC.cbl, LINE #585] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #586] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardErrorMsg(
                            container.getWsMiscStorage().getWsErrorMsg());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #587] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #588] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #589] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoMoreInfo()
                    .setCdemoLastMap(container.getWsConstants().getLitThismap());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #591] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextProg(
                            container.getWsConstants().getLitThispgm());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #592] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMapset(
                            container.getWsConstants().getLitThismapset());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #593] MOVE statement
            container
                    .getCcWorkAreas()
                    .getCcWorkArea()
                    .setCcardNextMap(container.getWsConstants().getLitThismap());
            // *       PERFORM 1000-SEND-MAP                                     
            // *          THRU 1000-SEND-MAP                                     
            // [T-Up#INFO][COCRDLIC.cbl, LINE #596] GOTO statement
            context.setGotoTarget(commonReturn);
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #599] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcardNextProg(container.getWsConstants().getLitThispgm());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #600] GOTO statement
        context.setGotoTarget(commonReturn);
        return;
    }

    void commonReturn(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #604] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoGeneralInfo()
                .setCdemoFromTranid(
                        container.getWsConstants().getLitThistranid());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #605] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoGeneralInfo()
                .setCdemoFromProgram(container.getWsConstants().getLitThispgm());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #606] MOVE statement
        container
                .getCarddemoCommarea()
                .getCdemoMoreInfo()
                .setCdemoLastMapset(
                        container.getWsConstants().getLitThismapset());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #607] MOVE statement
        container.getCarddemoCommarea().getCdemoMoreInfo()
                .setCdemoLastMap(container.getWsConstants().getLitThismap());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #608] MOVE statement
        container.setWsCommarea(container.getCarddemoCommarea().get());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #609] MOVE statement
        container.setWsCommarea(StringUtils.overlay(container.getWsCommarea(),
                container.getWsThisProgcommarea().get(), 160, 414));
        // [T-Up#INFO][COCRDLIC.cbl, LINE #614] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                            TRANSID (LIT-THISTRANID)                                
                            COMMAREA (WS-COMMAREA)                                  
                            LENGTH(LENGTH OF WS-COMMAREA)                           
                       END-EXEC
         */
        TaskDto taskDto = TaskDto.builder()
                .destination(container.getWsConstants().getLitThistranid())
                .data(Data.session(container.getWsCommarea())).build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    void _0000MainExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #621] EXIT statement
    }

    void _1000SendMap(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #624] PERFORM statement
        controlManager.run(context, _1100ScreenInit, _1100ScreenInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #626] PERFORM statement
        controlManager.run(context, _1200ScreenArrayInit,
                _1200ScreenArrayInitExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #628] PERFORM statement
        controlManager.run(context, _1250SetupArrayAttribs,
                _1250SetupArrayAttribsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #630] PERFORM statement
        controlManager.run(context, _1300SetupScreenAttrs,
                _1300SetupScreenAttrsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #632] PERFORM statement
        controlManager.run(context, _1400SetupMessage, _1400SetupMessageExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #634] PERFORM statement
        controlManager.run(context, _1500SendScreen, _1500SendScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    void _1000SendMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #639] EXIT statement
    }

    void _1100ScreenInit(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #642] MOVE statement
        container.setCcrdliao(CocrdlicCcrdliai.createDefaultValueInstance()
                .get());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #644] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #646] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #647] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #648] MOVE statement
        container.setTrnnameo(container.getWsConstants().getLitThistranid());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #649] MOVE statement
        container.setPgmnameo(container.getWsConstants().getLitThispgm());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #651] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #653] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #654] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #655] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][COCRDLIC.cbl, LINE #657] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #659] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #660] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #661] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #663] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
        // *    PAGE NUMBER                                                  
        // *                                                                 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #666] MOVE statement
        container.setPagenoo(StringUtils.leftPad(String.valueOf(Math
                .abs(container.getWsThisProgcommarea().getWsCaScreenNum())), 1,
                '0'));
        // [T-Up#INFO][COCRDLIC.cbl, LINE #668] SET statement
        container.getWsMiscStorage().setWsInfoMsg(WS_NO_INFO_MESSAGE_1);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #669] MOVE statement
        container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #670] MOVE statement
        container.setInfomsgc(container.getDfhbmsca().getDfhbmdar());
    }

    void _1100ScreenInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #674] EXIT statement
    }

    void _1200ScreenArrayInit(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // *    USE REDEFINES AND CLEAN UP REPETITIVE CODE !!                
        // [T-Up#INFO][COCRDLIC.cbl, LINE #679] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(0).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #680] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #682] MOVE statement
            container.setCrdsel1o(container.getWsMiscStorage().getWsEditSelect(
                    0));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #683] MOVE statement
            container.setAcctno1o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(0).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #684] MOVE statement
            container.setCrdnum1o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(0).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #685] MOVE statement
            container.setCrdsts1o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(0).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #688] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(1).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #689] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #691] MOVE statement
            container.setCrdsel2o(container.getWsMiscStorage().getWsEditSelect(
                    1));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #692] MOVE statement
            container.setAcctno2o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(1).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #693] MOVE statement
            container.setCrdnum2o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(1).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #694] MOVE statement
            container.setCrdsts2o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(1).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #697] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(2).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #698] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #700] MOVE statement
            container.setCrdsel3o(container.getWsMiscStorage().getWsEditSelect(
                    2));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #701] MOVE statement
            container.setAcctno3o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(2).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #702] MOVE statement
            container.setCrdnum3o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(2).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #703] MOVE statement
            container.setCrdsts3o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(2).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #706] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(3).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #707] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #709] MOVE statement
            container.setCrdsel4o(container.getWsMiscStorage().getWsEditSelect(
                    3));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #710] MOVE statement
            container.setAcctno4o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(3).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #711] MOVE statement
            container.setCrdnum4o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(3).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #712] MOVE statement
            container.setCrdsts4o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(3).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #715] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(4).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #716] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #718] MOVE statement
            container.setCrdsel5o(container.getWsMiscStorage().getWsEditSelect(
                    4));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #719] MOVE statement
            container.setAcctno5o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(4).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #720] MOVE statement
            container.setCrdnum5o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(4).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #721] MOVE statement
            container.setCrdsts5o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(4).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #725] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(5).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #726] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #728] MOVE statement
            container.setCrdsel6o(container.getWsMiscStorage().getWsEditSelect(
                    5));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #729] MOVE statement
            container.setAcctno6o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(5).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #730] MOVE statement
            container.setCrdnum6o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(5).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #731] MOVE statement
            container.setCrdsts6o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(5).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #734] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(6).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #735] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #737] MOVE statement
            container.setCrdsel7o(container.getWsMiscStorage().getWsEditSelect(
                    6));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #738] MOVE statement
            container.setAcctno7o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(6).getWsEachRow()
                    .getWsEachCard().getWsRowAcctno());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #739] MOVE statement
            container.setCrdnum7o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(6).getWsEachRow()
                    .getWsEachCard().getWsRowCardNum());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #740] MOVE statement
            container.setCrdsts7o(container.getWsThisProgcommarea()
                    .getWsScreenData().getWsScreenRows(6).getWsEachRow()
                    .getWsEachCard().getWsRowCardStatus());
        }
    }

    void _1200ScreenArrayInitExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #745] EXIT statement
    }

    void _1250SetupArrayAttribs(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // *    USE REDEFINES AND CLEAN UP REPETITIVE CODE !!                
        // [T-Up#INFO][COCRDLIC.cbl, LINE #750] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(0).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #752] MOVE statement
            container.getCcrdliai().setCrdsel1a(
                    container.getDfhbmsca().getDfhbmprf());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #754] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(0), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #755] MOVE statement
                container.setCrdsel1c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #756] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditSelect(0), " ") == 0
                        || CobStringUtils.compare(container.getWsMiscStorage()
                                .getWsEditSelect(0), StringUtils.repeat(
                                (char) 0x00, 1)) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #757] MOVE statement
                    container.setCrdsel1o("*");
                }
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #760] MOVE statement
            container.getCcrdliai().setCrdsel1a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #763] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(1).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #765] MOVE statement
            container.getCcrdliai().setCrdsel2a(
                    container.getDfhbmsca().getDfhbmpro());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #767] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(1), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #768] MOVE statement
                container.setCrdsel2c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #769] MOVE statement
                container.getCcrdliai().setCrdsel2l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #771] MOVE statement
            container.getCcrdliai().setCrdsel2a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #774] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(2).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #776] MOVE statement
            container.getCcrdliai().setCrdsel3a(
                    container.getDfhbmsca().getDfhbmpro());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #779] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(2), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #780] MOVE statement
                container.setCrdsel3c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #781] MOVE statement
                container.getCcrdliai().setCrdsel3l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #783] MOVE statement
            container.getCcrdliai().setCrdsel3a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #786] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(3).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #788] MOVE statement
            container.getCcrdliai().setCrdsel4a(
                    container.getDfhbmsca().getDfhbmpro());
            container
                    .getWsMiscStorage()
                    .getWsSubscriptVars()
                    .setI(Integer.parseInt(container.getDfhbmsca()
                            .getDfhbmpro()));
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #791] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(3), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #792] MOVE statement
                container.setCrdsel4c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #793] MOVE statement
                container.getCcrdliai().setCrdsel4l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #795] MOVE statement
            container.getCcrdliai().setCrdsel4a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #798] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(4).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #800] MOVE statement
            container.getCcrdliai().setCrdsel5a(
                    container.getDfhbmsca().getDfhbmpro());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #802] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(4), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #803] MOVE statement
                container.setCrdsel5c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #804] MOVE statement
                container.getCcrdliai().setCrdsel5l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #806] MOVE statement
            container.getCcrdliai().setCrdsel5a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #809] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(5).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #811] MOVE statement
            container.getCcrdliai().setCrdsel6a(
                    container.getDfhbmsca().getDfhbmpro());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #814] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(5), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #815] MOVE statement
                container.setCrdsel6c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #816] MOVE statement
                container.getCcrdliai().setCrdsel6l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #818] MOVE statement
            container.getCcrdliai().setCrdsel6a(
                    container.getDfhbmsca().getDfhbmfse());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #821] IF statement
        if (CobStringUtils.compare(container.getWsThisProgcommarea()
                .getWsScreenData().getWsScreenRows(6).getWsEachRow()
                .getWsEachCard().get(), StringUtils.repeat((char) 0x00, 28)) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getCicsOutputEditVars().getFlgProtectSelectRows(),
                        FLG_PROTECT_SELECT_ROWS_YES) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #823] MOVE statement
            container.getCcrdliai().setCrdsel7a(
                    container.getDfhbmsca().getDfhbmpro());
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #825] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsRowCrdselectError(6), "1") == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #826] MOVE statement
                container.setCrdsel7c(container.getDfhbmsca().getDfhred());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #827] MOVE statement
                container.getCcrdliai().setCrdsel7l(-1);
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #829] MOVE statement
            container.getCcrdliai().setCrdsel7a(
                    container.getDfhbmsca().getDfhbmfse());
        }
    }

    void _1250SetupArrayAttribsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #834] EXIT statement
    }

    void _1300SetupScreenAttrs(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // *    INITIALIZE SEARCH CRITERIA                                   
        // [T-Up#INFO][COCRDLIC.cbl, LINE #838] IF statement
        if (task.hasCommarea() == 0
                || container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .getCdemoPgmContext() == CDEMO_PGM_ENTER
                && CobStringUtils.compare(container.getCarddemoCommarea()
                        .getCdemoGeneralInfo().getCdemoFromProgram(), container
                        .getWsConstants().getLitMenupgm()) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #841] CONTINUE statement
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #843] EVALUATE statement
            if ((CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0)
                    || (CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #846] MOVE statement
                container.setAcctsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcAcctId());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #847] MOVE statement
                container.getCcrdliai().setAcctsida(
                        container.getDfhbmsca().getDfhbmfse());
            } else if (container.getCarddemoCommarea().getCdemoAccountInfo()
                    .getCdemoAcctId() == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #849] MOVE statement
                container.setAcctsido(StringUtils.repeat((char) 0x00, 11));
            } else {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #851] MOVE statement
                container.setAcctsido(StringUtils.leftPad(
                        String.valueOf(Math.abs(container.getCarddemoCommarea()
                                .getCdemoAccountInfo().getCdemoAcctId())), 11,
                        '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #852] MOVE statement
                container.getCcrdliai().setAcctsida(
                        container.getDfhbmsca().getDfhbmfse());
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #855] EVALUATE statement
            if ((CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsEditCardFlag(), FLG_CARDFILTER_ISVALID) == 0)
                    || (CobStringUtils.compare(container.getWsMiscStorage()
                            .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0)) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #858] MOVE statement
                container.setCardsido(container.getCcWorkAreas()
                        .getCcWorkArea().getCcCardNum());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #859] MOVE statement
                container.getCcrdliai().setCardsida(
                        container.getDfhbmsca().getDfhbmfse());
            } else if (container.getCarddemoCommarea().getCdemoCardInfo()
                    .getCdemoCardNum() == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #861] MOVE statement
                container.setCardsido(StringUtils.repeat((char) 0x00, 16));
            } else {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #863] MOVE statement
                container.setCardsido(StringUtils.leftPad(
                        String.valueOf(Math.abs(container.getCarddemoCommarea()
                                .getCdemoCardInfo().getCdemoCardNum())), 16,
                        '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #865] MOVE statement
                container.getCcrdliai().setCardsida(
                        container.getDfhbmsca().getDfhbmfse());
            }
        }
        // *    POSITION CURSOR                                              
        // [T-Up#INFO][COCRDLIC.cbl, LINE #871] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #872] MOVE statement
            container.setAcctsidc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #873] MOVE statement
            container.getCcrdliai().setAcctsidl(-1);
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #876] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #877] MOVE statement
            container.setCardsidc(container.getDfhbmsca().getDfhred());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #878] MOVE statement
            container.getCcrdliai().setCardsidl(-1);
        }
        // *    IF NO ERRORS POSITION CURSOR AT ACCTID                       
        // [T-Up#INFO][COCRDLIC.cbl, LINE #883] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_OK_1) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInputFlag(), INPUT_OK_2) == 0
                || CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsInputFlag(), INPUT_OK_3) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #884] MOVE statement
            container.getCcrdliai().setAcctsidl(-1);
        }
    }

    void _1300SetupScreenAttrsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #890] EXIT statement
    }

    void _1400SetupMessage(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // *    SETUP MESSAGE                                                
        // [T-Up#INFO][COCRDLIC.cbl, LINE #896] EVALUATE statement
        if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_NOT_OK) == 0)
                || (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsEditCardFlag(), FLG_CARDFILTER_NOT_OK) == 0)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #899] CONTINUE statement
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK07) == 0
                && container.getWsThisProgcommarea().getWsCaScreenNum() == CA_FIRST_PAGE) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #902] MOVE statement
            container.getWsMiscStorage().setWsErrorMsg(
                    "NO PREVIOUS PAGES TO DISPLAY");
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK08) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getWsCaNextPageInd(), CA_NEXT_PAGE_NOT_EXISTS) == 0
                && container.getWsThisProgcommarea().getWsCaLastPageDisplayed() == CA_LAST_PAGE_SHOWN) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #907] MOVE statement
            container.getWsMiscStorage().setWsErrorMsg(
                    "NO MORE PAGES TO DISPLAY");
        } else if (CobStringUtils.compare(container.getCcWorkAreas()
                .getCcWorkArea().getCcardAid(), CCARD_AID_PFK08) == 0
                && CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getWsCaNextPageInd(), CA_NEXT_PAGE_NOT_EXISTS) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #911] SET statement
            container.getWsMiscStorage().setWsInfoMsg(WS_INFORM_REC_ACTIONS);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #912] IF statement
            if (container.getWsThisProgcommarea().getWsCaLastPageDisplayed() == CA_LAST_PAGE_NOT_SHOWN
                    && CobStringUtils.compare(container.getWsThisProgcommarea()
                            .getWsCaNextPageInd(), CA_NEXT_PAGE_NOT_EXISTS) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #914] SET statement
                container.getWsThisProgcommarea().setWsCaLastPageDisplayed(
                        CA_LAST_PAGE_SHOWN);
            }
        } else if ((CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInfoMsg(), WS_NO_INFO_MESSAGE_1) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsInfoMsg(),
                        WS_NO_INFO_MESSAGE_2) == 0)
                || (CobStringUtils.compare(container.getWsThisProgcommarea()
                        .getWsCaNextPageInd(), CA_NEXT_PAGE_EXISTS) == 0)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #918] SET statement
            container.getWsMiscStorage().setWsInfoMsg(WS_INFORM_REC_ACTIONS);
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #920] SET statement
            container.getWsMiscStorage().setWsInfoMsg(WS_NO_INFO_MESSAGE_1);
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #923] MOVE statement
        container.setErrmsgo(container.getWsMiscStorage().getWsErrorMsg());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #925] IF statement
        if (!(CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInfoMsg(), WS_NO_INFO_MESSAGE_1) == 0 || CobStringUtils
                .compare(container.getWsMiscStorage().getWsInfoMsg(),
                        WS_NO_INFO_MESSAGE_2) == 0)
                && !(CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsErrorMsg(), WS_NO_RECORDS_FOUND) == 0)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #927] MOVE statement
            container.setInfomsgo(container.getWsMiscStorage().getWsInfoMsg());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #928] MOVE statement
            container.setInfomsgc(container.getDfhbmsca().getDfhneutr());
        }
    }

    void _1400SetupMessageExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #933] EXIT statement
    }

    void _1500SendScreen(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #938] EXEC_CICS statement
        /*
                       EXEC CICS SEND MAP('CCRDLIA')                                
                                      MAPSET('COCRDLI')                             
                                      FROM(CCRDLIAO)                                
                                      CURSOR                                        
                                      ERASE                                         
                                      RESP(WS-RESP-CD)                              
                                      FREEKB                                        
                       END-EXEC
         */
        try {
            ((CocrdlicOutputDto) task.getOutputDto())
                    .setPageName("COCRDLI_CCRDLIA");
            ((CocrdlicOutputDto) task.getOutputDto()).setCcrdliao(container
                    .getCcrdliao());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
    }

    void _1500SendScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #948] EXIT statement
    }

    void _2000ReceiveMap(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #951] PERFORM statement
        controlManager.run(context, _2100ReceiveScreen, _2100ReceiveScreenExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #954] PERFORM statement
        controlManager.run(context, _2200EditInputs, _2200EditInputsExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    void _2000ReceiveMapExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #959] EXIT statement
    }

    void _2100ReceiveScreen(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #962] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE MAP('CCRDLIA')                             
                                      MAPSET('COCRDLI')                             
                                      INTO(CCRDLIAI)                                
                                      RESP(WS-RESP-CD)                              
                       END-EXEC
         */
        try {
            container.setCcrdliai(((CocrdlicInputDto) task.getInputDto())
                    .getCcrdliai());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #968] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcAcctId(container.getCcrdliai().getAcctsidi());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #969] MOVE statement
        container.getCcWorkAreas().getCcWorkArea()
                .setCcCardNum(container.getCcrdliai().getCardsidi());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #971] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(0,
                container.getCcrdliai().getCrdsel1i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #972] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(1,
                container.getCcrdliai().getCrdsel2i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #973] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(2,
                container.getCcrdliai().getCrdsel3i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #974] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(3,
                container.getCcrdliai().getCrdsel4i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #975] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(4,
                container.getCcrdliai().getCrdsel5i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #976] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(5,
                container.getCcrdliai().getCrdsel6i());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #977] MOVE statement
        container.getWsMiscStorage().setWsEditSelect(6,
                container.getCcrdliai().getCrdsel7i());
    }

    void _2100ReceiveScreenExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #981] EXIT statement
    }

    void _2200EditInputs(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #985] SET statement
        container.getWsMiscStorage().setWsInputFlag(INPUT_OK_1);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #986] SET statement
        container.getWsMiscStorage().getCicsOutputEditVars()
                .setFlgProtectSelectRows(FLG_PROTECT_SELECT_ROWS_NO);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #988] PERFORM statement
        controlManager.run(context, _2210EditAccount, _2210EditAccountExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #991] PERFORM statement
        controlManager.run(context, _2220EditCard, _2220EditCardExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #994] PERFORM statement
        controlManager.run(context, _2250EditArray, _2250EditArrayExit);
        if (controlManager.isTerminate(context)) {
            return;
        }
    }

    void _2200EditInputsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #999] EXIT statement
    }

    void _2210EditAccount(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1003] SET statement
        container.getWsMiscStorage().setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1006] IF statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId(), StringUtils.repeat((char) 0x00, 11)) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcAcctId(), StringUtils.repeat(' ', 11)) == 0)
                || container.getCcWorkAreas().getCcWorkArea().getCcAcctIdN() == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1009] SET statement
            container.getWsMiscStorage()
                    .setWsEditAcctFlag(FLG_ACCTFILTER_BLANK);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1010] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1011] GOTO statement
            context.setGotoTarget(_2210EditAccountExit);
            return;
        }
        // *                                                                 
        // *    Not numeric                                                  
        // *    Not 11 characters                                            
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1016] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcAcctId())) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1017] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1018] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_NOT_OK);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1019] SET statement
            container.getWsMiscStorage().getCicsOutputEditVars()
                    .setFlgProtectSelectRows(FLG_PROTECT_SELECT_ROWS_YES);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1020] MOVE statement
            container.getWsMiscStorage().setWsErrorMsg(
                    "ACCOUNT FILTER,IF SUPPLIED MUST BE A 11 DIGIT NUMBER");
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1023] MOVE statement
            container.getCarddemoCommarea().getCdemoAccountInfo()
                    .setCdemoAcctId((long) 0);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1024] GOTO statement
            context.setGotoTarget(_2210EditAccountExit);
            return;
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1026] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoAccountInfo()
                    .setCdemoAcctId(
                            Long.parseLong(container.getCcWorkAreas()
                                    .getCcWorkArea().getCcAcctId().trim()));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1027] SET statement
            container.getWsMiscStorage().setWsEditAcctFlag(
                    FLG_ACCTFILTER_ISVALID);
        }
    }

    void _2210EditAccountExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1032] EXIT statement
    }

    void _2220EditCard(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // *    Not numeric                                                  
        // *    Not 16 characters                                            
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1038] SET statement
        container.getWsMiscStorage().setWsEditCardFlag(FLG_CARDFILTER_BLANK);
        // *    Not supplied                                                 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1041] IF statement
        if ((CobStringUtils.compare(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum(), StringUtils.repeat((char) 0x00, 16)) == 0 || CobStringUtils
                .compare(container.getCcWorkAreas().getCcWorkArea()
                        .getCcCardNum(), StringUtils.repeat(' ', 16)) == 0)
                || container.getCcWorkAreas().getCcWorkArea().getCcCardNumN() == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1044] SET statement
            container.getWsMiscStorage()
                    .setWsEditCardFlag(FLG_CARDFILTER_BLANK);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1045] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1046] GOTO statement
            context.setGotoTarget(_2220EditCardExit);
            return;
        }
        // *                                                                 
        // *    Not numeric                                                  
        // *    Not 16 characters                                            
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1051] IF statement
        if (!StringUtils.isNumeric(container.getCcWorkAreas().getCcWorkArea()
                .getCcCardNum())) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1052] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1053] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_NOT_OK);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1054] SET statement
            container.getWsMiscStorage().getCicsOutputEditVars()
                    .setFlgProtectSelectRows(FLG_PROTECT_SELECT_ROWS_YES);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1055] IF statement
            if (CobStringUtils.compare(container.getWsMiscStorage()
                    .getWsErrorMsg(), WS_ERROR_MSG_OFF) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1056] MOVE statement
                container.getWsMiscStorage().setWsErrorMsg(
                        "CARD ID FILTER,IF SUPPLIED MUST BE A 16 DIGIT NUMBER");
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1060] MOVE statement
            container.getCarddemoCommarea().getCdemoCardInfo()
                    .setCdemoCardNum((long) 0);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1061] GOTO statement
            context.setGotoTarget(_2220EditCardExit);
            return;
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1063] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoCardInfo()
                    .setCdemoCardNum(
                            container.getCcWorkAreas().getCcWorkArea()
                                    .getCcCardNumN());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1064] SET statement
            container.getWsMiscStorage().setWsEditCardFlag(
                    FLG_CARDFILTER_ISVALID);
        }
    }

    void _2220EditCardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1069] EXIT statement
    }

    void _2250EditArray(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1074] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsInputFlag(), INPUT_ERROR) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1075] GOTO statement
            context.setGotoTarget(_2250EditArrayExit);
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1078] INSPECT statement
        container.getWsMiscStorage().getWsSubscriptVars().setI(0);
        container
                .getWsMiscStorage()
                .getWsSubscriptVars()
                .setI(container.getWsMiscStorage().getWsSubscriptVars().getI()
                        + StringUtils.countMatches(container.getWsMiscStorage()
                                .getWsEditSelectFlags(), "S"));
        container
                .getWsMiscStorage()
                .getWsSubscriptVars()
                .setI(container.getWsMiscStorage().getWsSubscriptVars().getI()
                        + StringUtils.countMatches(container.getWsMiscStorage()
                                .getWsEditSelectFlags(), "U"));
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1083] IF statement
        if (container.getWsMiscStorage().getWsSubscriptVars().getI() > 1) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1084] SET statement
            container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1085] SET statement
            container.getWsMiscStorage().setWsErrorMsg(WS_MORE_THAN_1_ACTION);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1087] MOVE statement
            container.getWsMiscStorage().setWsEditSelectErrorFlags(
                    container.getWsMiscStorage().getWsEditSelectFlags());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1089] INSPECT statement
            tempStringBuilder1 = new StringBuilder();
            for (char ch : container.getWsMiscStorage()
                    .getWsEditSelectErrorFlags().toCharArray()) {
                if (ch == "S".charAt(0)) {
                    tempStringBuilder1.append("1".charAt(0));
                } else {
                    tempStringBuilder1.append("0".charAt(0));
                }
            }
            container.getWsMiscStorage().setWsEditSelectErrorFlags(
                    tempStringBuilder1.toString());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1096] MOVE statement
        container.getWsMiscStorage().getWsSubscriptVars().setISelected(0);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1098] PERFORM statement
        container.getWsMiscStorage().getWsSubscriptVars().setI(1);
        while (!(container.getWsMiscStorage().getWsSubscriptVars().getI() > 7)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1099] EVALUATE statement
            if (CobStringUtils.compare(
                    container.getWsMiscStorage().getWsEditSelect(
                            container.getWsMiscStorage().getWsSubscriptVars()
                                    .getI() - 1), SELECT_OK_1) == 0
                    || CobStringUtils.compare(
                            container.getWsMiscStorage().getWsEditSelect(
                                    container.getWsMiscStorage()
                                            .getWsSubscriptVars().getI() - 1),
                            SELECT_OK_2) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1101] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsSubscriptVars()
                        .setISelected(
                                container.getWsMiscStorage()
                                        .getWsSubscriptVars().getI());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1102] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsErrorMsg(), WS_MORE_THAN_1_ACTION) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1103] MOVE statement
                    container.getWsMiscStorage().setWsRowCrdselectError(
                            container.getWsMiscStorage().getWsSubscriptVars()
                                    .getI() - 1, "1");
                }
            } else if (CobStringUtils.compare(
                    container.getWsMiscStorage().getWsEditSelect(
                            container.getWsMiscStorage().getWsSubscriptVars()
                                    .getI() - 1), SELECT_BLANK_1) == 0
                    || CobStringUtils.compare(
                            container.getWsMiscStorage().getWsEditSelect(
                                    container.getWsMiscStorage()
                                            .getWsSubscriptVars().getI() - 1),
                            SELECT_BLANK_2) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1106] CONTINUE statement
            } else {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1108] SET statement
                container.getWsMiscStorage().setWsInputFlag(INPUT_ERROR);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1109] MOVE statement
                container.getWsMiscStorage().setWsRowCrdselectError(
                        container.getWsMiscStorage().getWsSubscriptVars()
                                .getI() - 1, "1");
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1110] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsErrorMsg(), WS_ERROR_MSG_OFF) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1111] SET statement
                    container.getWsMiscStorage().setWsErrorMsg(
                            WS_INVALID_ACTION_CODE);
                }
            }
            container
                    .getWsMiscStorage()
                    .getWsSubscriptVars()
                    .setI(container.getWsMiscStorage().getWsSubscriptVars()
                            .getI() + 1);
        }
    }

    void _2250EditArrayExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1119] EXIT statement
    }

    void _9000ReadForward(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1123] MOVE statement
        container.getWsThisProgcommarea().setWsScreenData(
                CocrdlicWsThisProgcommarea.CocrdlicWsScreenData
                        .createDefaultValueInstance());
        // ***************************************************************** 
        // *    Start Browse                                                 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1128] EXEC_CICS statement
        /*
                       EXEC CICS STARTBR                                            
                            DATASET(LIT-CARD-FILE)                                  
                            RIDFLD(WS-CARD-RID-CARDNUM)                             
                            KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)                
                            GTEQ                                                    
                            RESP(WS-RESP-CD)                                        
                            RESP2(WS-REAS-CD)                                       
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager
                    .declare(
                            "awsM2CarddemoCarddataVsamKsdsDao",
                            0,
                            (AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto) -> {
                                return awsM2CarddemoCarddataVsamKsdsDto
                                        .getCardNum();
                            });
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                    .open(readPoint, container.getWsMiscStorage()
                            .getWsFileHandlingVars().getWsCardRid()
                            .getWsCardRidCardnum());
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            awsM2CarddemoCarddataVsamKsdsDto.getCardNum());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // ***************************************************************** 
        // *    Loop through records and fetch max screen records            
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1139] MOVE statement
        container.getWsMiscStorage().setWsScrnCounter(0);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1140] SET statement
        container.getWsThisProgcommarea().setWsCaNextPageInd(
                CA_NEXT_PAGE_EXISTS);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1141] SET statement
        container.getWsMiscStorage().setWsRecordsToProcessFlag(
                MORE_RECORDS_TO_READ);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1143] PERFORM statement
        while (!(CobStringUtils.compare(container.getWsMiscStorage()
                .getWsRecordsToProcessFlag(), READ_LOOP_EXIT) == 0)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1145] EXEC_CICS statement
            /*
                           EXEC CICS READNEXT                                           
                                DATASET(LIT-CARD-FILE)                                  
                                INTO (CARD-RECORD)                                      
                                LENGTH(LENGTH OF CARD-RECORD)                           
                                RIDFLD(WS-CARD-RID-CARDNUM)                             
                                KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)                
                                RESP(WS-RESP-CD)                                        
                                RESP2(WS-REAS-CD)                                       
                           END-EXEC
             */
            try {
                ReadPoint readPoint = readPointManager.find(0);
                AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                        .readNext(readPoint, container.getWsMiscStorage()
                                .getWsFileHandlingVars().getWsCardRid()
                                .getWsCardRidCardnum());
                container
                        .getWsMiscStorage()
                        .getWsFileHandlingVars()
                        .getWsCardRid()
                        .setWsCardRidCardnum(
                                awsM2CarddemoCarddataVsamKsdsDto.getCardNum());
                container
                        .setCardRecord(CocrdlicCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                                .toSource(awsM2CarddemoCarddataVsamKsdsDto));
            } catch (ConditionException e) {
            } finally {
                container.getWsMiscStorage().getWsCicsProcessngVars()
                        .setWsRespCd(task.getLastResp());
                container.getWsMiscStorage().getWsCicsProcessngVars()
                        .setWsReasCd(task.getLastResp2());
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1155] EVALUATE statement
            if ((container.getWsMiscStorage().getWsCicsProcessngVars()
                    .getWsRespCd() == 0)
                    || (container.getWsMiscStorage().getWsCicsProcessngVars()
                            .getWsRespCd() == 14)) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1158] PERFORM statement
                controlManager.run(context, _9500FilterRecords,
                        _9500FilterRecordsExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1161] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsFilterRecordFlag(), WS_DONOT_EXCLUDE_THIS_RECORD) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1162] ADD statement
                    container.getWsMiscStorage()
                            .setWsScrnCounter(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() + 1);
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1164] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowCardNum(
                                    container.getCardRecord().getCardNum());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1166] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowAcctno(
                                    StringUtils.leftPad(String.valueOf(Math
                                            .abs(container.getCardRecord()
                                                    .getCardAcctId())), 11, '0'));
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1168] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowCardStatus(
                                    container.getCardRecord()
                                            .getCardActiveStatus());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1172] IF statement
                    if (container.getWsMiscStorage().getWsScrnCounter() == 1) {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1173] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaFirstCardkey()
                                .setWsCaFirstCardAcctId(
                                        container.getCardRecord()
                                                .getCardAcctId());
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1175] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaFirstCardkey()
                                .setWsCaFirstCardNum(
                                        container.getCardRecord().getCardNum());
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1176] IF statement
                        if (container.getWsThisProgcommarea()
                                .getWsCaScreenNum() == 0) {
                            // [T-Up#INFO][COCRDLIC.cbl, LINE #1177] ADD statement
                            container.getWsThisProgcommarea().setWsCaScreenNum(
                                    container.getWsThisProgcommarea()
                                            .getWsCaScreenNum() + 1);
                        } else {
                            // [T-Up#INFO][COCRDLIC.cbl, LINE #1179] CONTINUE statement
                        }
                    } else {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1182] CONTINUE statement
                    }
                } else {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1185] CONTINUE statement
                }
                // ******************************************************************
                // *            Max Screen size                                      
                // ******************************************************************
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1190] IF statement
                if (container.getWsMiscStorage().getWsScrnCounter() == container
                        .getWsConstants().getWsMaxScreenLines()) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1191] SET statement
                    container.getWsMiscStorage().setWsRecordsToProcessFlag(
                            READ_LOOP_EXIT);
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1193] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsCaLastCardkey()
                            .setWsCaLastCardAcctId(
                                    container.getCardRecord().getCardAcctId());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1194] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsCaLastCardkey()
                            .setWsCaLastCardNum(
                                    container.getCardRecord().getCardNum());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1196] EXEC_CICS statement
                    /*
                                              EXEC CICS READNEXT                                
                                                DATASET(LIT-CARD-FILE)                          
                                                INTO (CARD-RECORD)                              
                                                LENGTH(LENGTH OF CARD-RECORD)                   
                                                RIDFLD(WS-CARD-RID-CARDNUM)                     
                                                KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)        
                                                RESP(WS-RESP-CD)                                
                                                RESP2(WS-REAS-CD)                               
                                              END-EXEC
                     */
                    try {
                        ReadPoint readPoint = readPointManager.find(0);
                        AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                                .readNext(readPoint, container
                                        .getWsMiscStorage()
                                        .getWsFileHandlingVars().getWsCardRid()
                                        .getWsCardRidCardnum());
                        container
                                .getWsMiscStorage()
                                .getWsFileHandlingVars()
                                .getWsCardRid()
                                .setWsCardRidCardnum(
                                        awsM2CarddemoCarddataVsamKsdsDto
                                                .getCardNum());
                        container
                                .setCardRecord(CocrdlicCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                                        .toSource(awsM2CarddemoCarddataVsamKsdsDto));
                    } catch (ConditionException e) {
                    } finally {
                        container.getWsMiscStorage().getWsCicsProcessngVars()
                                .setWsRespCd(task.getLastResp());
                        container.getWsMiscStorage().getWsCicsProcessngVars()
                                .setWsReasCd(task.getLastResp2());
                    }
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1206] EVALUATE statement
                    if ((container.getWsMiscStorage().getWsCicsProcessngVars()
                            .getWsRespCd() == 0)
                            || (container.getWsMiscStorage()
                                    .getWsCicsProcessngVars().getWsRespCd() == 14)) {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1209] SET statement
                        container.getWsThisProgcommarea().setWsCaNextPageInd(
                                CA_NEXT_PAGE_EXISTS);
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1211] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaLastCardkey()
                                .setWsCaLastCardAcctId(
                                        container.getCardRecord()
                                                .getCardAcctId());
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1213] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaLastCardkey()
                                .setWsCaLastCardNum(
                                        container.getCardRecord().getCardNum());
                    } else if (container.getWsMiscStorage()
                            .getWsCicsProcessngVars().getWsRespCd() == 20) {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1215] SET statement
                        container.getWsThisProgcommarea().setWsCaNextPageInd(
                                CA_NEXT_PAGE_NOT_EXISTS);
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1217] IF statement
                        if (CobStringUtils.compare(container.getWsMiscStorage()
                                .getWsErrorMsg(), WS_ERROR_MSG_OFF) == 0) {
                            // [T-Up#INFO][COCRDLIC.cbl, LINE #1218] MOVE statement
                            container.getWsMiscStorage().setWsErrorMsg(
                                    "NO MORE RECORDS TO SHOW");
                        }
                    } else {
                        // *                     This is some kind of error. Change to END BR
                        // *                     And exit                                    
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1224] SET statement
                        container.getWsMiscStorage().setWsRecordsToProcessFlag(
                                READ_LOOP_EXIT);
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1225] MOVE statement
                        container.getWsMiscStorage().getWsFileErrorMessage()
                                .setErrorOpname("READ");
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1226] MOVE statement
                        container
                                .getWsMiscStorage()
                                .getWsFileErrorMessage()
                                .setErrorFile(
                                        container.getWsConstants()
                                                .getLitCardFile());
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1227] MOVE statement
                        container
                                .getWsMiscStorage()
                                .getWsFileErrorMessage()
                                .setErrorResp(
                                        StringUtils.leftPad(
                                                String.valueOf(Math
                                                        .abs(container
                                                                .getWsMiscStorage()
                                                                .getWsCicsProcessngVars()
                                                                .getWsRespCd())),
                                                9, '0'));
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1228] MOVE statement
                        container
                                .getWsMiscStorage()
                                .getWsFileErrorMessage()
                                .setErrorResp2(
                                        StringUtils.leftPad(
                                                String.valueOf(Math
                                                        .abs(container
                                                                .getWsMiscStorage()
                                                                .getWsCicsProcessngVars()
                                                                .getWsReasCd())),
                                                9, '0'));
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1229] MOVE statement
                        container.getWsMiscStorage().setWsErrorMsg(
                                container.getWsMiscStorage()
                                        .getWsFileErrorMessage().get());
                    }
                }
            } else if (container.getWsMiscStorage().getWsCicsProcessngVars()
                    .getWsRespCd() == 20) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1233] SET statement
                container.getWsMiscStorage().setWsRecordsToProcessFlag(
                        READ_LOOP_EXIT);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1234] SET statement
                container.getWsThisProgcommarea().setWsCaNextPageInd(
                        CA_NEXT_PAGE_NOT_EXISTS);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1235] MOVE statement
                container
                        .getWsThisProgcommarea()
                        .getWsCaLastCardkey()
                        .setWsCaLastCardAcctId(
                                container.getCardRecord().getCardAcctId());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1236] MOVE statement
                container
                        .getWsThisProgcommarea()
                        .getWsCaLastCardkey()
                        .setWsCaLastCardNum(
                                container.getCardRecord().getCardNum());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1237] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsErrorMsg(), WS_ERROR_MSG_OFF) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1238] MOVE statement
                    container.getWsMiscStorage().setWsErrorMsg(
                            "NO MORE RECORDS TO SHOW");
                }
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1240] IF statement
                if (container.getWsThisProgcommarea().getWsCaScreenNum() == 1
                        && container.getWsMiscStorage().getWsScrnCounter() == 0) {
                    // *               MOVE 'NO RECORDS TO SHOW'  TO WS-ERROR-MSG        
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1243] SET statement
                    container.getWsMiscStorage().setWsErrorMsg(
                            WS_NO_RECORDS_FOUND);
                }
            } else {
                // *           This is some kind of error. Change to END BR          
                // *           And exit                                              
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1248] SET statement
                container.getWsMiscStorage().setWsRecordsToProcessFlag(
                        READ_LOOP_EXIT);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1249] MOVE statement
                container.getWsMiscStorage().getWsFileErrorMessage()
                        .setErrorOpname("READ");
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1250] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorFile(
                                container.getWsConstants().getLitCardFile());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1251] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1252] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1253] MOVE statement
                container.getWsMiscStorage().setWsErrorMsg(
                        container.getWsMiscStorage().getWsFileErrorMessage()
                                .get());
            }
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1257] EXEC_CICS statement
        /*
                       EXEC CICS ENDBR FILE(LIT-CARD-FILE)                          
                       END-EXEC
         */
        ReadPoint readPoint = readPointManager.find(0);
        readPointAccessor.close(readPoint);
    }

    void _9000ReadForwardExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1261] EXIT statement
    }

    void _9100ReadBackwards(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1265] MOVE statement
        container.getWsThisProgcommarea().setWsScreenData(
                CocrdlicWsThisProgcommarea.CocrdlicWsScreenData
                        .createDefaultValueInstance());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1267] MOVE statement
        container.getWsThisProgcommarea().getWsCaLastCardkey()
                .set(container.getWsThisProgcommarea().getWsCaFirstCardkey());
        // ***************************************************************** 
        // *    Start Browse                                                 
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1272] EXEC_CICS statement
        /*
                       EXEC CICS STARTBR                                            
                            DATASET(LIT-CARD-FILE)                                  
                            RIDFLD(WS-CARD-RID-CARDNUM)                             
                            KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)                
                            GTEQ                                                    
                            RESP(WS-RESP-CD)                                        
                            RESP2(WS-REAS-CD)                                       
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager
                    .declare(
                            "awsM2CarddemoCarddataVsamKsdsDao",
                            0,
                            (AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto) -> {
                                return awsM2CarddemoCarddataVsamKsdsDto
                                        .getCardNum();
                            });
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                    .open(readPoint, container.getWsMiscStorage()
                            .getWsFileHandlingVars().getWsCardRid()
                            .getWsCardRidCardnum());
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            awsM2CarddemoCarddataVsamKsdsDto.getCardNum());
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // ***************************************************************** 
        // *    Loop through records and fetch max screen records            
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1283] COMPUTE statement
        container.getWsMiscStorage().setWsScrnCounter(
                container.getWsConstants().getWsMaxScreenLines() + 1);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1286] SET statement
        container.getWsThisProgcommarea().setWsCaNextPageInd(
                CA_NEXT_PAGE_EXISTS);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1287] SET statement
        container.getWsMiscStorage().setWsRecordsToProcessFlag(
                MORE_RECORDS_TO_READ);
        // ***************************************************************** 
        // *    Now we show the records from previous set.                   
        // ***************************************************************** 
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1293] EXEC_CICS statement
        /*
                       EXEC CICS READPREV                                           
                            DATASET(LIT-CARD-FILE)                                  
                            INTO (CARD-RECORD)                                      
                            LENGTH(LENGTH OF CARD-RECORD)                           
                            RIDFLD(WS-CARD-RID-CARDNUM)                             
                            KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)                
                            RESP(WS-RESP-CD)                                        
                            RESP2(WS-REAS-CD)                                       
                       END-EXEC
         */
        try {
            ReadPoint readPoint = readPointManager.find(0);
            AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                    .readPrev(readPoint, container.getWsMiscStorage()
                            .getWsFileHandlingVars().getWsCardRid()
                            .getWsCardRidCardnum());
            container
                    .getWsMiscStorage()
                    .getWsFileHandlingVars()
                    .getWsCardRid()
                    .setWsCardRidCardnum(
                            awsM2CarddemoCarddataVsamKsdsDto.getCardNum());
            container
                    .setCardRecord(CocrdlicCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                            .toSource(awsM2CarddemoCarddataVsamKsdsDto));
        } catch (ConditionException e) {
        } finally {
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsRespCd(task.getLastResp());
            container.getWsMiscStorage().getWsCicsProcessngVars()
                    .setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1303] EVALUATE statement
        if ((container.getWsMiscStorage().getWsCicsProcessngVars()
                .getWsRespCd() == 0)
                || (container.getWsMiscStorage().getWsCicsProcessngVars()
                        .getWsRespCd() == 14)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1306] SUBTRACT statement
            container.getWsMiscStorage().setWsScrnCounter(
                    container.getWsMiscStorage().getWsScrnCounter() - 1);
        } else {
            // *           This is some kind of error. Change to END BR          
            // *           And exit                                              
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1310] SET statement
            container.getWsMiscStorage().setWsRecordsToProcessFlag(
                    READ_LOOP_EXIT);
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1311] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorOpname("READ");
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1312] MOVE statement
            container.getWsMiscStorage().getWsFileErrorMessage()
                    .setErrorFile(container.getWsConstants().getLitCardFile());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1313] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsRespCd())), 9, '0'));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1314] MOVE statement
            container
                    .getWsMiscStorage()
                    .getWsFileErrorMessage()
                    .setErrorResp2(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsMiscStorage()
                                            .getWsCicsProcessngVars()
                                            .getWsReasCd())), 9, '0'));
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1315] MOVE statement
            container.getWsMiscStorage().setWsErrorMsg(
                    container.getWsMiscStorage().getWsFileErrorMessage().get());
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1316] GOTO statement
            context.setGotoTarget(_9100ReadBackwardsExit);
            return;
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1319] PERFORM statement
        while (!(CobStringUtils.compare(container.getWsMiscStorage()
                .getWsRecordsToProcessFlag(), READ_LOOP_EXIT) == 0)) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1321] EXEC_CICS statement
            /*
                           EXEC CICS READPREV                                           
                                DATASET(LIT-CARD-FILE)                                  
                                INTO (CARD-RECORD)                                      
                                LENGTH(LENGTH OF CARD-RECORD)                           
                                RIDFLD(WS-CARD-RID-CARDNUM)                             
                                KEYLENGTH(LENGTH OF WS-CARD-RID-CARDNUM)                
                                RESP(WS-RESP-CD)                                        
                                RESP2(WS-REAS-CD)                                       
                           END-EXEC
             */
            try {
                ReadPoint readPoint = readPointManager.find(0);
                AwsM2CarddemoCarddataVsamKsdsDto awsM2CarddemoCarddataVsamKsdsDto = readPointAccessor
                        .readPrev(readPoint, container.getWsMiscStorage()
                                .getWsFileHandlingVars().getWsCardRid()
                                .getWsCardRidCardnum());
                container
                        .getWsMiscStorage()
                        .getWsFileHandlingVars()
                        .getWsCardRid()
                        .setWsCardRidCardnum(
                                awsM2CarddemoCarddataVsamKsdsDto.getCardNum());
                container
                        .setCardRecord(CocrdlicCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.INSTANCE
                                .toSource(awsM2CarddemoCarddataVsamKsdsDto));
            } catch (ConditionException e) {
            } finally {
                container.getWsMiscStorage().getWsCicsProcessngVars()
                        .setWsRespCd(task.getLastResp());
                container.getWsMiscStorage().getWsCicsProcessngVars()
                        .setWsReasCd(task.getLastResp2());
            }
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1331] EVALUATE statement
            if ((container.getWsMiscStorage().getWsCicsProcessngVars()
                    .getWsRespCd() == 0)
                    || (container.getWsMiscStorage().getWsCicsProcessngVars()
                            .getWsRespCd() == 14)) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1334] PERFORM statement
                controlManager.run(context, _9500FilterRecords,
                        _9500FilterRecordsExit);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1336] IF statement
                if (CobStringUtils.compare(container.getWsMiscStorage()
                        .getWsFilterRecordFlag(), WS_DONOT_EXCLUDE_THIS_RECORD) == 0) {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1337] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowCardNum(
                                    container.getCardRecord().getCardNum());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1339] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowAcctno(
                                    StringUtils.leftPad(String.valueOf(Math
                                            .abs(container.getCardRecord()
                                                    .getCardAcctId())), 11, '0'));
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1341] MOVE statement
                    container
                            .getWsThisProgcommarea()
                            .getWsScreenData()
                            .getWsScreenRows(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1)
                            .getWsEachRow()
                            .getWsEachCard()
                            .setWsRowCardStatus(
                                    container.getCardRecord()
                                            .getCardActiveStatus());
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1345] SUBTRACT statement
                    container.getWsMiscStorage()
                            .setWsScrnCounter(
                                    container.getWsMiscStorage()
                                            .getWsScrnCounter() - 1);
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1346] IF statement
                    if (container.getWsMiscStorage().getWsScrnCounter() == 0) {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1347] SET statement
                        container.getWsMiscStorage().setWsRecordsToProcessFlag(
                                READ_LOOP_EXIT);
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1349] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaFirstCardkey()
                                .setWsCaFirstCardAcctId(
                                        container.getCardRecord()
                                                .getCardAcctId());
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1351] MOVE statement
                        container
                                .getWsThisProgcommarea()
                                .getWsCaFirstCardkey()
                                .setWsCaFirstCardNum(
                                        container.getCardRecord().getCardNum());
                    } else {
                        // [T-Up#INFO][COCRDLIC.cbl, LINE #1354] CONTINUE statement
                    }
                } else {
                    // [T-Up#INFO][COCRDLIC.cbl, LINE #1357] CONTINUE statement
                }
            } else {
                // *           This is some kind of error. Change to END BR          
                // *           And exit                                              
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1363] SET statement
                container.getWsMiscStorage().setWsRecordsToProcessFlag(
                        READ_LOOP_EXIT);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1364] MOVE statement
                container.getWsMiscStorage().getWsFileErrorMessage()
                        .setErrorOpname("READ");
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1365] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorFile(
                                container.getWsConstants().getLitCardFile());
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1366] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsRespCd())), 9, '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1367] MOVE statement
                container
                        .getWsMiscStorage()
                        .getWsFileErrorMessage()
                        .setErrorResp2(
                                StringUtils.leftPad(
                                        String.valueOf(Math.abs(container
                                                .getWsMiscStorage()
                                                .getWsCicsProcessngVars()
                                                .getWsReasCd())), 9, '0'));
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1368] MOVE statement
                container.getWsMiscStorage().setWsErrorMsg(
                        container.getWsMiscStorage().getWsFileErrorMessage()
                                .get());
            }
        }
    }

    void _9100ReadBackwardsExit(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1374] EXEC_CICS statement
        /*
                       EXEC CICS                                                    
                            ENDBR FILE(LIT-CARD-FILE)                               
                       END-EXEC
         */
        ReadPoint readPoint = readPointManager.find(0);
        readPointAccessor.close(readPoint);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1378] EXIT statement
    }

    void _9500FilterRecords(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1382] SET statement
        container.getWsMiscStorage().setWsFilterRecordFlag(
                WS_DONOT_EXCLUDE_THIS_RECORD);
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1384] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditAcctFlag(), FLG_ACCTFILTER_ISVALID) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1385] IF statement
            if (CobStringUtils.compare(PictureFormatter.intFormatWithoutSign(
                    container.getCardRecord().getCardAcctId(), "00000000000"),
                    container.getCcWorkAreas().getCcWorkArea().getCcAcctId()) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1386] CONTINUE statement
            } else {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1388] SET statement
                container.getWsMiscStorage().setWsFilterRecordFlag(
                        WS_EXCLUDE_THIS_RECORD);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1389] GOTO statement
                context.setGotoTarget(_9500FilterRecordsExit);
                return;
            }
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1392] CONTINUE statement
        }
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1395] IF statement
        if (CobStringUtils.compare(container.getWsMiscStorage()
                .getWsEditCardFlag(), FLG_CARDFILTER_ISVALID) == 0) {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1396] IF statement
            if (CobStringUtils.compare(container.getCardRecord().getCardNum(),
                    PictureFormatter.intFormatWithoutSign(container
                            .getCcWorkAreas().getCcWorkArea().getCcCardNumN(),
                            "0000000000000000")) == 0) {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1397] CONTINUE statement
            } else {
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1399] SET statement
                container.getWsMiscStorage().setWsFilterRecordFlag(
                        WS_EXCLUDE_THIS_RECORD);
                // [T-Up#INFO][COCRDLIC.cbl, LINE #1400] GOTO statement
                context.setGotoTarget(_9500FilterRecordsExit);
                return;
            }
        } else {
            // [T-Up#INFO][COCRDLIC.cbl, LINE #1403] CONTINUE statement
        }
    }

    void _9500FilterRecordsExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1409] EXIT statement
    }

    // ***************************************************************** 
    // *Common code to store PFKey                                       
    // ***************************************************************** 
    //       *COPY 'CSSTRPFY'                                                  
    //       *    .                                                            
    // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSSTRPFY.cpy)
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************

    void yyyyStorePfkey(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // ***************************************************************** 
        // * Map AID to PFKey in COMMON Area                                 
        // ***************************************************************** 
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #22] EVALUATE statement
        if (CobStringUtils.compare(task.getPressedKey(), container.getDfhaid()
                .getDfhenter()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #24] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_ENTER);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhclear()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #26] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_CLEAR);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #28] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA1);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpa2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #30] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PA2);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf1()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #32] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf2()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #34] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf3()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #36] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf4()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #38] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf5()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #40] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf6()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #42] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf7()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #44] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf8()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #46] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf9()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #48] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf10()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #50] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf11()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #52] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf12()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #54] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf13()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #56] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK01);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf14()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #58] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK02);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf15()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #60] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK03);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf16()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #62] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK04);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf17()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #64] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK05);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf18()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #66] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK06);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf19()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #68] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK07);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf20()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #70] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK08);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf21()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #72] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK09);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf22()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #74] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK10);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf23()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #76] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK11);
        } else if (CobStringUtils.compare(task.getPressedKey(), container
                .getDfhaid().getDfhpf24()) == 0) {
            // [T-Up#INFO][CSSTRPFY.cpy, LINE #78] SET statement
            container.getCcWorkAreas().getCcWorkArea()
                    .setCcardAid(CCARD_AID_PFK12);
        }
    }

    void yyyyStorePfkeyExit(OpenFrameContext context) {
        // [T-Up#INFO][CSSTRPFY.cpy, LINE #82] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT 
    // *                                                                 
    // ***************************************************************** 
    // * Plain text exit - Dont use in production                      * 
    // ***************************************************************** 

    void sendPlainText(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1422] EXEC_CICS statement
        /*
                       EXEC CICS SEND TEXT                                          
                                 FROM(WS-ERROR-MSG)                                 
                                 LENGTH(LENGTH OF WS-ERROR-MSG)                     
                                 ERASE                                              
                                 FREEKB                                             
                       END-EXEC
         */
        task.getOutputDto().getSystemDto()
                .setNotification(container.getWsMiscStorage().getWsErrorMsg());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1429] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                       END-EXEC
         */
        context.setReturnFlag(true);
    }

    void sendPlainTextExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1433] EXIT statement
    }

    // ***************************************************************** 
    // * Display Long text and exit                                    * 
    // * This is primarily for debugging and should not be used in     * 
    // * regular course                                                * 
    // ***************************************************************** 

    void sendLongText(OpenFrameContext context) {
        CocrdlicVariableContainer container = (CocrdlicVariableContainer) context
                .getProgramVariableContainer("Cocrdlic");
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1441] EXEC_CICS statement
        /*
                       EXEC CICS SEND TEXT                                          
                                 FROM(WS-LONG-MSG)                                  
                                 LENGTH(LENGTH OF WS-LONG-MSG)                      
                                 ERASE                                              
                                 FREEKB                                             
                       END-EXEC
         */
        task.getOutputDto().getSystemDto()
                .setNotification(container.getWsMiscStorage().getWsLongMsg());
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1448] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                       END-EXEC
         */
        context.setReturnFlag(true);
    }

    void sendLongTextExit(OpenFrameContext context) {
        // [T-Up#INFO][COCRDLIC.cbl, LINE #1452] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT 
    // *                                                                 
}
