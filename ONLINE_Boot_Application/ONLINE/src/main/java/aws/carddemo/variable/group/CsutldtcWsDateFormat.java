package aws.carddemo.variable.group;

import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import java.util.stream.Collectors;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:50 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor class CsutldtcWsDateFormat {
    // [T-Up#INFO][CSUTLDTC.cbl, LINE #34] VSTRING-LENGTH (level: 2)
    private @Getter @Setter int vstringLength;
    // [T-Up#INFO][CSUTLDTC.cbl, LINE #35] VSTRING-TEXT (level: 2)
    private @Getter @Setter CsutldtcVstringText vstringText = new CsutldtcVstringText();

    public void set(String source) {
        ByteBuffer tempByteBuffer1;
        source = StringUtils.truncate(StringUtils.rightPad(source, 258), 258);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(0, 2).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            vstringLength = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            vstringLength = 0;
        }
        vstringText.set(source.substring(2, 258));
    }

    public String get() {
        ByteBuffer tempByteBuffer1;
        StringBuilder sb = new StringBuilder();
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) vstringLength);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(vstringText.get());
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(String.valueOf(getVstringLength()));
        sb.append(getVstringText().toString());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor class CsutldtcVstringText {
        // [T-Up#INFO][CSUTLDTC.cbl, LINE #36] VSTRING-CHAR (level: 3)
        private @Getter @Setter String[] vstringChar = Collections.nCopies(256,
                StringUtils.repeat(' ', 1)).toArray(new String[0]);

        public String getVstringChar(int index) {
            return vstringChar[index];
        }

        public void setVstringChar(int index, String source) {
            vstringChar[index] = source;
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 256),
                    256);
            vstringChar = source.split("(?<=\\G.{1})");
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(Arrays.stream(vstringChar).collect(Collectors.joining()));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.join("", getVstringChar()));
            return sb.toString();
        }
    }
}
