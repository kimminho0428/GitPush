package aws.carddemo.variable.group;

import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:51 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class Cousr02cCousr2ai {
    // [T-Up#INFO][COUSR02.CPY, LINE #19] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER1 = StringUtils.repeat(' ',
            12);
    // [T-Up#INFO][COUSR02.CPY, LINE #20] TRNNAMEL (level: 2)
    private @Getter @Setter int trnnamel;
    // [T-Up#INFO][COUSR02.CPY, LINE #21] TRNNAMEF (level: 2)
    private @Getter @Builder.Default String trnnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER2 getOFFILLER2() {
        return _OFFILLER2.builder().trnnamea(getTrnnamea()).build();
    }

    public void setOFFILLER2(String source) {
        setTrnnamea(source.substring(0, 1));
    }

    public void setOFFILLER2(_OFFILLER2 source) {
        setOFFILLER2(source.toString());
    }

    public String getTrnnamea() {
        return getTrnnamef();
    }

    public void setTrnnamea(String source) {
        setTrnnamef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #24] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER3 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COUSR02.CPY, LINE #25] TRNNAMEI (level: 2)
    private @Getter @Builder.Default String trnnamei = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COUSR02.CPY, LINE #26] TITLE01L (level: 2)
    private @Getter @Setter int title01l;
    // [T-Up#INFO][COUSR02.CPY, LINE #27] TITLE01F (level: 2)
    private @Getter @Builder.Default String title01f = StringUtils.repeat(' ',
            1);

    public _OFFILLER4 getOFFILLER4() {
        return _OFFILLER4.builder().title01a(getTitle01a()).build();
    }

    public void setOFFILLER4(String source) {
        setTitle01a(source.substring(0, 1));
    }

    public void setOFFILLER4(_OFFILLER4 source) {
        setOFFILLER4(source.toString());
    }

    public String getTitle01a() {
        return getTitle01f();
    }

    public void setTitle01a(String source) {
        setTitle01f(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #30] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER5 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COUSR02.CPY, LINE #31] TITLE01I (level: 2)
    private @Getter @Builder.Default String title01i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COUSR02.CPY, LINE #32] CURDATEL (level: 2)
    private @Getter @Setter int curdatel;
    // [T-Up#INFO][COUSR02.CPY, LINE #33] CURDATEF (level: 2)
    private @Getter @Builder.Default String curdatef = StringUtils.repeat(' ',
            1);

    public _OFFILLER6 getOFFILLER6() {
        return _OFFILLER6.builder().curdatea(getCurdatea()).build();
    }

    public void setOFFILLER6(String source) {
        setCurdatea(source.substring(0, 1));
    }

    public void setOFFILLER6(_OFFILLER6 source) {
        setOFFILLER6(source.toString());
    }

    public String getCurdatea() {
        return getCurdatef();
    }

    public void setCurdatea(String source) {
        setCurdatef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #36] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER7 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COUSR02.CPY, LINE #37] CURDATEI (level: 2)
    private @Getter @Builder.Default String curdatei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COUSR02.CPY, LINE #38] PGMNAMEL (level: 2)
    private @Getter @Setter int pgmnamel;
    // [T-Up#INFO][COUSR02.CPY, LINE #39] PGMNAMEF (level: 2)
    private @Getter @Builder.Default String pgmnamef = StringUtils.repeat(' ',
            1);

    public _OFFILLER8 getOFFILLER8() {
        return _OFFILLER8.builder().pgmnamea(getPgmnamea()).build();
    }

    public void setOFFILLER8(String source) {
        setPgmnamea(source.substring(0, 1));
    }

    public void setOFFILLER8(_OFFILLER8 source) {
        setOFFILLER8(source.toString());
    }

    public String getPgmnamea() {
        return getPgmnamef();
    }

    public void setPgmnamea(String source) {
        setPgmnamef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #42] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER9 = StringUtils.repeat(' ',
            4);
    // [T-Up#INFO][COUSR02.CPY, LINE #43] PGMNAMEI (level: 2)
    private @Getter @Builder.Default String pgmnamei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COUSR02.CPY, LINE #44] TITLE02L (level: 2)
    private @Getter @Setter int title02l;
    // [T-Up#INFO][COUSR02.CPY, LINE #45] TITLE02F (level: 2)
    private @Getter @Builder.Default String title02f = StringUtils.repeat(' ',
            1);

    public _OFFILLER10 getOFFILLER10() {
        return _OFFILLER10.builder().title02a(getTitle02a()).build();
    }

    public void setOFFILLER10(String source) {
        setTitle02a(source.substring(0, 1));
    }

    public void setOFFILLER10(_OFFILLER10 source) {
        setOFFILLER10(source.toString());
    }

    public String getTitle02a() {
        return getTitle02f();
    }

    public void setTitle02a(String source) {
        setTitle02f(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #48] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER11 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #49] TITLE02I (level: 2)
    private @Getter @Builder.Default String title02i = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COUSR02.CPY, LINE #50] CURTIMEL (level: 2)
    private @Getter @Setter int curtimel;
    // [T-Up#INFO][COUSR02.CPY, LINE #51] CURTIMEF (level: 2)
    private @Getter @Builder.Default String curtimef = StringUtils.repeat(' ',
            1);

    public _OFFILLER12 getOFFILLER12() {
        return _OFFILLER12.builder().curtimea(getCurtimea()).build();
    }

    public void setOFFILLER12(String source) {
        setCurtimea(source.substring(0, 1));
    }

    public void setOFFILLER12(_OFFILLER12 source) {
        setOFFILLER12(source.toString());
    }

    public String getCurtimea() {
        return getCurtimef();
    }

    public void setCurtimea(String source) {
        setCurtimef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #54] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER13 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #55] CURTIMEI (level: 2)
    private @Getter @Builder.Default String curtimei = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COUSR02.CPY, LINE #56] USRIDINL (level: 2)
    private @Getter @Setter int usridinl;
    // [T-Up#INFO][COUSR02.CPY, LINE #57] USRIDINF (level: 2)
    private @Getter @Builder.Default String usridinf = StringUtils.repeat(' ',
            1);

    public _OFFILLER14 getOFFILLER14() {
        return _OFFILLER14.builder().usridina(getUsridina()).build();
    }

    public void setOFFILLER14(String source) {
        setUsridina(source.substring(0, 1));
    }

    public void setOFFILLER14(_OFFILLER14 source) {
        setOFFILLER14(source.toString());
    }

    public String getUsridina() {
        return getUsridinf();
    }

    public void setUsridina(String source) {
        setUsridinf(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #60] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER15 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #61] USRIDINI (level: 2)
    private @Getter @Builder.Default String usridini = StringUtils.repeat(' ',
            8);
    // [T-Up#INFO][COUSR02.CPY, LINE #62] FNAMEL (level: 2)
    private @Getter @Setter int fnamel;
    // [T-Up#INFO][COUSR02.CPY, LINE #63] FNAMEF (level: 2)
    private @Getter @Builder.Default String fnamef = StringUtils.repeat(' ', 1);

    public _OFFILLER16 getOFFILLER16() {
        return _OFFILLER16.builder().fnamea(getFnamea()).build();
    }

    public void setOFFILLER16(String source) {
        setFnamea(source.substring(0, 1));
    }

    public void setOFFILLER16(_OFFILLER16 source) {
        setOFFILLER16(source.toString());
    }

    public String getFnamea() {
        return getFnamef();
    }

    public void setFnamea(String source) {
        setFnamef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #66] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER17 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #67] FNAMEI (level: 2)
    private @Getter @Builder.Default String fnamei = StringUtils
            .repeat(' ', 20);
    // [T-Up#INFO][COUSR02.CPY, LINE #68] LNAMEL (level: 2)
    private @Getter @Setter int lnamel;
    // [T-Up#INFO][COUSR02.CPY, LINE #69] LNAMEF (level: 2)
    private @Getter @Builder.Default String lnamef = StringUtils.repeat(' ', 1);

    public _OFFILLER18 getOFFILLER18() {
        return _OFFILLER18.builder().lnamea(getLnamea()).build();
    }

    public void setOFFILLER18(String source) {
        setLnamea(source.substring(0, 1));
    }

    public void setOFFILLER18(_OFFILLER18 source) {
        setOFFILLER18(source.toString());
    }

    public String getLnamea() {
        return getLnamef();
    }

    public void setLnamea(String source) {
        setLnamef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #72] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER19 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #73] LNAMEI (level: 2)
    private @Getter @Builder.Default String lnamei = StringUtils
            .repeat(' ', 20);
    // [T-Up#INFO][COUSR02.CPY, LINE #74] PASSWDL (level: 2)
    private @Getter @Setter int passwdl;
    // [T-Up#INFO][COUSR02.CPY, LINE #75] PASSWDF (level: 2)
    private @Getter @Builder.Default String passwdf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER20 getOFFILLER20() {
        return _OFFILLER20.builder().passwda(getPasswda()).build();
    }

    public void setOFFILLER20(String source) {
        setPasswda(source.substring(0, 1));
    }

    public void setOFFILLER20(_OFFILLER20 source) {
        setOFFILLER20(source.toString());
    }

    public String getPasswda() {
        return getPasswdf();
    }

    public void setPasswda(String source) {
        setPasswdf(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #78] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER21 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #79] PASSWDI (level: 2)
    private @Getter @Builder.Default String passwdi = StringUtils
            .repeat(' ', 8);
    // [T-Up#INFO][COUSR02.CPY, LINE #80] USRTYPEL (level: 2)
    private @Getter @Setter int usrtypel;
    // [T-Up#INFO][COUSR02.CPY, LINE #81] USRTYPEF (level: 2)
    private @Getter @Builder.Default String usrtypef = StringUtils.repeat(' ',
            1);

    public _OFFILLER22 getOFFILLER22() {
        return _OFFILLER22.builder().usrtypea(getUsrtypea()).build();
    }

    public void setOFFILLER22(String source) {
        setUsrtypea(source.substring(0, 1));
    }

    public void setOFFILLER22(_OFFILLER22 source) {
        setOFFILLER22(source.toString());
    }

    public String getUsrtypea() {
        return getUsrtypef();
    }

    public void setUsrtypea(String source) {
        setUsrtypef(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #84] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER23 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #85] USRTYPEI (level: 2)
    private @Getter @Builder.Default String usrtypei = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][COUSR02.CPY, LINE #86] ERRMSGL (level: 2)
    private @Getter @Setter int errmsgl;
    // [T-Up#INFO][COUSR02.CPY, LINE #87] ERRMSGF (level: 2)
    private @Getter @Builder.Default String errmsgf = StringUtils
            .repeat(' ', 1);

    public _OFFILLER24 getOFFILLER24() {
        return _OFFILLER24.builder().errmsga(getErrmsga()).build();
    }

    public void setOFFILLER24(String source) {
        setErrmsga(source.substring(0, 1));
    }

    public void setOFFILLER24(_OFFILLER24 source) {
        setOFFILLER24(source.toString());
    }

    public String getErrmsga() {
        return getErrmsgf();
    }

    public void setErrmsga(String source) {
        setErrmsgf(source);
    }

    // [T-Up#INFO][COUSR02.CPY, LINE #90] FILLER (level: 2)
    private @Getter @Builder.Default String OFFILLER25 = StringUtils.repeat(
            ' ', 4);
    // [T-Up#INFO][COUSR02.CPY, LINE #91] ERRMSGI (level: 2)
    private @Getter @Builder.Default String errmsgi = StringUtils.repeat(' ',
            78);

    public void setOFFILLER1(String source) {
        OFFILLER1 = StringUtils.truncate(StringUtils.rightPad(source, 12), 12);
    }

    public void setTrnnamef(String source) {
        trnnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER3(String source) {
        OFFILLER3 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTrnnamei(String source) {
        trnnamei = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01f(String source) {
        title01f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER5(String source) {
        OFFILLER5 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle01i(String source) {
        title01i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurdatef(String source) {
        curdatef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER7(String source) {
        OFFILLER7 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurdatei(String source) {
        curdatei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setPgmnamef(String source) {
        pgmnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER9(String source) {
        OFFILLER9 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setPgmnamei(String source) {
        pgmnamei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setTitle02f(String source) {
        title02f = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER11(String source) {
        OFFILLER11 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setTitle02i(String source) {
        title02i = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setCurtimef(String source) {
        curtimef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER13(String source) {
        OFFILLER13 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setCurtimei(String source) {
        curtimei = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setUsridinf(String source) {
        usridinf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER15(String source) {
        OFFILLER15 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setUsridini(String source) {
        usridini = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setFnamef(String source) {
        fnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER17(String source) {
        OFFILLER17 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setFnamei(String source) {
        fnamei = StringUtils.truncate(StringUtils.rightPad(source, 20), 20);
    }

    public void setLnamef(String source) {
        lnamef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER19(String source) {
        OFFILLER19 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setLnamei(String source) {
        lnamei = StringUtils.truncate(StringUtils.rightPad(source, 20), 20);
    }

    public void setPasswdf(String source) {
        passwdf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER21(String source) {
        OFFILLER21 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setPasswdi(String source) {
        passwdi = StringUtils.truncate(StringUtils.rightPad(source, 8), 8);
    }

    public void setUsrtypef(String source) {
        usrtypef = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER23(String source) {
        OFFILLER23 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setUsrtypei(String source) {
        usrtypei = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setErrmsgf(String source) {
        errmsgf = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setOFFILLER25(String source) {
        OFFILLER25 = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
    }

    public void setErrmsgi(String source) {
        errmsgi = StringUtils.truncate(StringUtils.rightPad(source, 78), 78);
    }

    public static Cousr02cCousr2ai createDefaultValueInstance() {
        return new Cousr02cCousr2ai.builder().build();
    }

    public void set(String source) {
        ByteBuffer tempByteBuffer1;
        source = StringUtils.truncate(StringUtils.rightPad(source, 339), 339);
        OFFILLER1 = source.substring(0, 12);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(12, 14).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            trnnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            trnnamel = 0;
        }
        trnnamef = source.substring(14, 15);
        OFFILLER3 = source.substring(15, 19);
        trnnamei = source.substring(19, 23);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(23, 25).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title01l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title01l = 0;
        }
        title01f = source.substring(25, 26);
        OFFILLER5 = source.substring(26, 30);
        title01i = source.substring(30, 70);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(70, 72).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curdatel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curdatel = 0;
        }
        curdatef = source.substring(72, 73);
        OFFILLER7 = source.substring(73, 77);
        curdatei = source.substring(77, 85);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(85, 87).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            pgmnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            pgmnamel = 0;
        }
        pgmnamef = source.substring(87, 88);
        OFFILLER9 = source.substring(88, 92);
        pgmnamei = source.substring(92, 100);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(100, 102).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            title02l = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            title02l = 0;
        }
        title02f = source.substring(102, 103);
        OFFILLER11 = source.substring(103, 107);
        title02i = source.substring(107, 147);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(147, 149).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            curtimel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            curtimel = 0;
        }
        curtimef = source.substring(149, 150);
        OFFILLER13 = source.substring(150, 154);
        curtimei = source.substring(154, 162);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(162, 164).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            usridinl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            usridinl = 0;
        }
        usridinf = source.substring(164, 165);
        OFFILLER15 = source.substring(165, 169);
        usridini = source.substring(169, 177);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(177, 179).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            fnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            fnamel = 0;
        }
        fnamef = source.substring(179, 180);
        OFFILLER17 = source.substring(180, 184);
        fnamei = source.substring(184, 204);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(204, 206).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            lnamel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            lnamel = 0;
        }
        lnamef = source.substring(206, 207);
        OFFILLER19 = source.substring(207, 211);
        lnamei = source.substring(211, 231);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(231, 233).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            passwdl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            passwdl = 0;
        }
        passwdf = source.substring(233, 234);
        OFFILLER21 = source.substring(234, 238);
        passwdi = source.substring(238, 246);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(246, 248).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            usrtypel = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            usrtypel = 0;
        }
        usrtypef = source.substring(248, 249);
        OFFILLER23 = source.substring(249, 253);
        usrtypei = source.substring(253, 254);
        try {
            tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
            tempByteBuffer1.put(source.substring(254, 256).getBytes(
                    StandardCharsets.ISO_8859_1));
            tempByteBuffer1.flip();
            errmsgl = tempByteBuffer1.getShort();
        } catch (NumberFormatException exception) {
            exception.printStackTrace();
            errmsgl = 0;
        }
        errmsgf = source.substring(256, 257);
        OFFILLER25 = source.substring(257, 261);
        errmsgi = source.substring(261, 339);
    }

    public String get() {
        ByteBuffer tempByteBuffer1;
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) trnnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(trnnamef);
        sb.append(OFFILLER3);
        sb.append(trnnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title01l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title01f);
        sb.append(OFFILLER5);
        sb.append(title01i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curdatel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curdatef);
        sb.append(OFFILLER7);
        sb.append(curdatei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) pgmnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(pgmnamef);
        sb.append(OFFILLER9);
        sb.append(pgmnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) title02l);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(title02f);
        sb.append(OFFILLER11);
        sb.append(title02i);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) curtimel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(curtimef);
        sb.append(OFFILLER13);
        sb.append(curtimei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) usridinl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(usridinf);
        sb.append(OFFILLER15);
        sb.append(usridini);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) fnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(fnamef);
        sb.append(OFFILLER17);
        sb.append(fnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) lnamel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(lnamef);
        sb.append(OFFILLER19);
        sb.append(lnamei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) passwdl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(passwdf);
        sb.append(OFFILLER21);
        sb.append(passwdi);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) usrtypel);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(usrtypef);
        sb.append(OFFILLER23);
        sb.append(usrtypei);
        tempByteBuffer1 = ByteBuffer.allocate(Short.BYTES);
        tempByteBuffer1.putShort((short) errmsgl);
        tempByteBuffer1.flip();
        sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                .toString());
        sb.append(errmsgf);
        sb.append(OFFILLER25);
        sb.append(errmsgi);
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(OFFILLER1);
        sb.append(String.valueOf(getTrnnamel()));
        sb.append(getTrnnamef());
        sb.append(OFFILLER3);
        sb.append(getTrnnamei());
        sb.append(String.valueOf(getTitle01l()));
        sb.append(getTitle01f());
        sb.append(OFFILLER5);
        sb.append(getTitle01i());
        sb.append(String.valueOf(getCurdatel()));
        sb.append(getCurdatef());
        sb.append(OFFILLER7);
        sb.append(getCurdatei());
        sb.append(String.valueOf(getPgmnamel()));
        sb.append(getPgmnamef());
        sb.append(OFFILLER9);
        sb.append(getPgmnamei());
        sb.append(String.valueOf(getTitle02l()));
        sb.append(getTitle02f());
        sb.append(OFFILLER11);
        sb.append(getTitle02i());
        sb.append(String.valueOf(getCurtimel()));
        sb.append(getCurtimef());
        sb.append(OFFILLER13);
        sb.append(getCurtimei());
        sb.append(String.valueOf(getUsridinl()));
        sb.append(getUsridinf());
        sb.append(OFFILLER15);
        sb.append(getUsridini());
        sb.append(String.valueOf(getFnamel()));
        sb.append(getFnamef());
        sb.append(OFFILLER17);
        sb.append(getFnamei());
        sb.append(String.valueOf(getLnamel()));
        sb.append(getLnamef());
        sb.append(OFFILLER19);
        sb.append(getLnamei());
        sb.append(String.valueOf(getPasswdl()));
        sb.append(getPasswdf());
        sb.append(OFFILLER21);
        sb.append(getPasswdi());
        sb.append(String.valueOf(getUsrtypel()));
        sb.append(getUsrtypef());
        sb.append(OFFILLER23);
        sb.append(getUsrtypei());
        sb.append(String.valueOf(getErrmsgl()));
        sb.append(getErrmsgf());
        sb.append(OFFILLER25);
        sb.append(getErrmsgi());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER2 {
        // [T-Up#INFO][COUSR02.CPY, LINE #23] TRNNAMEA (level: 3)
        private @Getter String trnnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(trnnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER4 {
        // [T-Up#INFO][COUSR02.CPY, LINE #29] TITLE01A (level: 3)
        private @Getter String title01a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title01a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER6 {
        // [T-Up#INFO][COUSR02.CPY, LINE #35] CURDATEA (level: 3)
        private @Getter String curdatea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curdatea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER8 {
        // [T-Up#INFO][COUSR02.CPY, LINE #41] PGMNAMEA (level: 3)
        private @Getter String pgmnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(pgmnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER10 {
        // [T-Up#INFO][COUSR02.CPY, LINE #47] TITLE02A (level: 3)
        private @Getter String title02a = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(title02a);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER12 {
        // [T-Up#INFO][COUSR02.CPY, LINE #53] CURTIMEA (level: 3)
        private @Getter String curtimea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(curtimea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER14 {
        // [T-Up#INFO][COUSR02.CPY, LINE #59] USRIDINA (level: 3)
        private @Getter String usridina = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(usridina);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(usridina);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER16 {
        // [T-Up#INFO][COUSR02.CPY, LINE #65] FNAMEA (level: 3)
        private @Getter String fnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(fnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(fnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER18 {
        // [T-Up#INFO][COUSR02.CPY, LINE #71] LNAMEA (level: 3)
        private @Getter String lnamea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(lnamea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(lnamea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER20 {
        // [T-Up#INFO][COUSR02.CPY, LINE #77] PASSWDA (level: 3)
        private @Getter String passwda = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(passwda);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(passwda);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER22 {
        // [T-Up#INFO][COUSR02.CPY, LINE #83] USRTYPEA (level: 3)
        private @Getter String usrtypea = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(usrtypea);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(usrtypea);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER24 {
        // [T-Up#INFO][COUSR02.CPY, LINE #89] ERRMSGA (level: 3)
        private @Getter String errmsga = StringUtils.repeat(' ', 1);

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(errmsga);
            return sb.toString();
        }
    }
}
