package aws.carddemo;

import com.tmax.openframe.online.service.api.ProgramControl;
import aws.carddemo.dto.Cosgn00cInputDto;
import aws.carddemo.mapper.Corpt00cMapperInterface.*;
import aws.carddemo.dto.Comen01cInputDto;
import com.tmax.openframe.online.service.api.TaskInvoker;
import com.tmax.openframe.online.service.dto.taskdto.TaskDto;
import com.tmax.openframe.online.service.dto.taskdto.Data;
import com.tmax.openframe.online.service.api.QueueManager;
import com.tmax.openframe.online.service.exception.ConditionException;
import com.tmax.openframe.online.service.api.Task;
import aws.carddemo.dto.Corpt00cOutputDto;
import aws.carddemo.dto.Corpt00cInputDto;
import static aws.carddemo.variable.group.Corpt00cCarddemoCommarea.Corpt00cCdemoGeneralInfo.*;
import static aws.carddemo.variable.group.Corpt00cWsVariables.*;
import aws.carddemo.variable.Corpt00cVariableContainer;
import aws.carddemo.variable.CsutldtcVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import java.util.regex.Pattern;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:49 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CORPT00C.cbl</li>
 * <li>Variable container class: {@link Corpt00cVariableContainer}</li>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Corpt00c {
    private final Task task;
    private final QueueManager queueManager;
    private final TaskInvoker taskInvoker;
    private final ProgramControl programControl;
    @Autowired
    private Csutldtc programCsutldtc;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> mainPara = this::mainPara;
    Consumer<OpenFrameContext> processEnterKey = this::processEnterKey;
    Consumer<OpenFrameContext> submitJobToIntrdr = this::submitJobToIntrdr;
    Consumer<OpenFrameContext> wirteJobsubTdq = this::wirteJobsubTdq;
    Consumer<OpenFrameContext> returnToPrevScreen = this::returnToPrevScreen;
    Consumer<OpenFrameContext> sendTrnrptScreen = this::sendTrnrptScreen;
    Consumer<OpenFrameContext> returnToCics = this::returnToCics;
    Consumer<OpenFrameContext> receiveTrnrptScreen = this::receiveTrnrptScreen;
    Consumer<OpenFrameContext> populateHeaderInfo = this::populateHeaderInfo;
    Consumer<OpenFrameContext> initializeAllFields = this::initializeAllFields;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(mainPara);
        methodList.add(processEnterKey);
        methodList.add(submitJobToIntrdr);
        methodList.add(wirteJobsubTdq);
        methodList.add(returnToPrevScreen);
        methodList.add(sendTrnrptScreen);
        methodList.add(returnToCics);
        methodList.add(receiveTrnrptScreen);
        methodList.add(populateHeaderInfo);
        methodList.add(initializeAllFields);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Corpt00c") == null) {
            Corpt00cVariableContainer container = new Corpt00cVariableContainer();
            context.setProgramVariableContainer("Corpt00c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CORPT00C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : CICS COBOL Program                                
    // * Function    : Print Transaction reports by submitting batch     
    // *               job from online using extra partition TDQ.        
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // *      OCCURS 1 TO 32767 TIMES DEPENDING ON EIBCALEN.             
    // *----------------------------------------------------------------*
    // *                       PROCEDURE DIVISION                        
    // *----------------------------------------------------------------*

    void mainPara(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #165] SET statement
        container.getWsVariables().setWsErrFlg(ERR_FLG_OFF);
        // [T-Up#INFO][CORPT00C.cbl, LINE #166] SET statement
        container.getWsVariables().setWsTransactEof(TRANSACT_NOT_EOF);
        // [T-Up#INFO][CORPT00C.cbl, LINE #167] SET statement
        container.getWsVariables().setWsSendEraseFlg(SEND_ERASE_YES);
        // [T-Up#INFO][CORPT00C.cbl, LINE #169] MOVE statement
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
        container.setErrmsgo(StringUtils.repeat(' ', 78));
        // [T-Up#INFO][CORPT00C.cbl, LINE #172] IF statement
        if (task.hasCommarea() == 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #173] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoToProgram("COSGN00C");
            // [T-Up#INFO][CORPT00C.cbl, LINE #174] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromTranid(
                            container.getWsVariables().getWsTranid());
            // [T-Up#INFO][CORPT00C.cbl, LINE #175] MOVE statement
            container
                    .getCarddemoCommarea()
                    .getCdemoGeneralInfo()
                    .setCdemoFromProgram(
                            container.getWsVariables().getWsPgmname());
            // [T-Up#INFO][CORPT00C.cbl, LINE #176] MOVE statement
            container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .setCdemoPgmContext(0);
            // [T-Up#INFO][CORPT00C.cbl, LINE #177] EXEC_CICS statement
            /*
                               EXEC CICS                                                
                               XCTL PROGRAM('COSGN00C')                                 
                               COMMAREA(CARDDEMO-COMMAREA)                              
                               END-EXEC
             */
            Cosgn00cInputDto cosgn00cInputDto = new Cosgn00cInputDto();
            cosgn00cInputDto
                    .setDfhcommarea(Corpt00cCarddemoCommareaToCosgn00cDfhcommarea.INSTANCE
                            .toTarget(container.getCarddemoCommarea()));
            programControl.forward("CC00", cosgn00cInputDto);
            context.setReturnFlag(true);
            // [T-Up#INFO][CORPT00C.cbl, LINE #181] PERFORM statement
            controlManager.run(context, returnToPrevScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CORPT00C.cbl, LINE #183] MOVE statement
            container.getCarddemoCommarea().set(
                    StringUtils.overlay(container.getCarddemoCommarea().get(),
                            container.getDfhcommarea().get().substring(0, 160),
                            0, 160));
            // [T-Up#INFO][CORPT00C.cbl, LINE #184] IF statement
            if (!(container.getCarddemoCommarea().getCdemoGeneralInfo()
                    .getCdemoPgmContext() == CDEMO_PGM_REENTER)) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #185] SET statement
                container.getCarddemoCommarea().getCdemoGeneralInfo()
                        .setCdemoPgmContext(CDEMO_PGM_REENTER);
                // [T-Up#INFO][CORPT00C.cbl, LINE #186] MOVE statement
                container.setCorpt0ao(Corpt00cCorpt0ai
                        .createDefaultValueInstance().get());
                // [T-Up#INFO][CORPT00C.cbl, LINE #187] MOVE statement
                container.getCorpt0ai().setMonthlyl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #188] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][CORPT00C.cbl, LINE #190] PERFORM statement
                controlManager.run(context, receiveTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CORPT00C.cbl, LINE #191] EVALUATE statement
                if (CobStringUtils.compare(task.getPressedKey(), container
                        .getDfhaid().getDfhenter()) == 0) {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #193] PERFORM statement
                    controlManager.run(context, processEnterKey);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else if (CobStringUtils.compare(task.getPressedKey(),
                        container.getDfhaid().getDfhpf3()) == 0) {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #195] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoToProgram("COMEN01C");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #196] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromTranid(
                                    container.getWsVariables().getWsTranid());
                    // [T-Up#INFO][CORPT00C.cbl, LINE #197] MOVE statement
                    container
                            .getCarddemoCommarea()
                            .getCdemoGeneralInfo()
                            .setCdemoFromProgram(
                                    container.getWsVariables().getWsPgmname());
                    // [T-Up#INFO][CORPT00C.cbl, LINE #198] MOVE statement
                    container.getCarddemoCommarea().getCdemoGeneralInfo()
                            .setCdemoPgmContext(0);
                    // [T-Up#INFO][CORPT00C.cbl, LINE #199] EXEC_CICS statement
                    /*
                                                   EXEC CICS                                    
                                                   XCTL PROGRAM('COMEN01C')                     
                                                   COMMAREA(CARDDEMO-COMMAREA)                  
                                                   END-EXEC
                     */
                    Comen01cInputDto comen01cInputDto = new Comen01cInputDto();
                    comen01cInputDto
                            .setDfhcommarea(Corpt00cCarddemoCommareaToComen01cDfhcommarea.INSTANCE
                                    .toTarget(container.getCarddemoCommarea()));
                    programControl.forward("CM00", comen01cInputDto);
                    context.setReturnFlag(true);
                    // [T-Up#INFO][CORPT00C.cbl, LINE #203] PERFORM statement
                    controlManager.run(context, returnToPrevScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                } else {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #205] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #206] MOVE statement
                    container.getCorpt0ai().setMonthlyl(-1);
                    // [T-Up#INFO][CORPT00C.cbl, LINE #207] MOVE statement
                    container.getWsVariables().setWsMessage(
                            container.getCcdaCommonMessages()
                                    .getCcdaMsgInvalidKey());
                    // [T-Up#INFO][CORPT00C.cbl, LINE #208] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
        }
        // [T-Up#INFO][CORPT00C.cbl, LINE #213] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                                 TRANSID (WS-TRANID)                                
                                 COMMAREA (CARDDEMO-COMMAREA)                       
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CR00")
                .data(Data
                        .session(Corpt00cCarddemoCommareaToCorpt00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *----------------------------------------------------------------*
    // *                      PROCESS-ENTER-KEY                          
    // *----------------------------------------------------------------*

    void processEnterKey(OpenFrameContext context) {
        int tempint1;
        CsutldtcVariableContainer tempCsutldtcVariableContainer1;
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #224] DISPLAY statement
        System.out.println("PROCESS ENTER KEY");
        // [T-Up#INFO][CORPT00C.cbl, LINE #226] EVALUATE statement
        if (CobStringUtils.compare(container.getCorpt0ai().getMonthlyi(), " ") != 0
                && CobStringUtils.compare(
                        container.getCorpt0ai().getMonthlyi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #228] MOVE statement
            container.getWsVariables().setWsReportName("Monthly");
            // [T-Up#INFO][CORPT00C.cbl, LINE #229] MOVE statement
            container.getWsDateTime().getWsCurdateData()
                    .set(IntrinsicFunction.functionCurrentDate());
            // [T-Up#INFO][CORPT00C.cbl, LINE #231] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #232] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateMm(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateMonth())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #233] MOVE statement
            container.getWsVariables().getWsStartDate().setWsStartDateDd("01");
            // [T-Up#INFO][CORPT00C.cbl, LINE #234] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #237] MOVE statement
            container.getWsDateTime().getWsCurdateData().getWsCurdate()
                    .setWsCurdateDay(1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #238] ADD statement
            container
                    .getWsDateTime()
                    .getWsCurdateData()
                    .getWsCurdate()
                    .setWsCurdateMonth(
                            container.getWsDateTime().getWsCurdateData()
                                    .getWsCurdate().getWsCurdateMonth() + 1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #239] IF statement
            if (container.getWsDateTime().getWsCurdateData().getWsCurdate()
                    .getWsCurdateMonth() > 12) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #240] ADD statement
                container
                        .getWsDateTime()
                        .getWsCurdateData()
                        .getWsCurdate()
                        .setWsCurdateYear(
                                container.getWsDateTime().getWsCurdateData()
                                        .getWsCurdate().getWsCurdateYear() + 1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #241] MOVE statement
                container.getWsDateTime().getWsCurdateData().getWsCurdate()
                        .setWsCurdateMonth(1);
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #243] COMPUTE statement
            container
                    .getWsDateTime()
                    .getWsCurdateData()
                    .setWsCurdateN(
                            IntrinsicFunction
                                    .functionDateOfInteger(IntrinsicFunction
                                            .functionIntegerOfDate(container
                                                    .getWsDateTime()
                                                    .getWsCurdateData()
                                                    .getWsCurdateN()) - 1));
            // [T-Up#INFO][CORPT00C.cbl, LINE #246] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #247] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateMm(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateMonth())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #248] MOVE statement
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateDd(
                            StringUtils.leftPad(
                                    String.valueOf(Math.abs(container
                                            .getWsDateTime().getWsCurdateData()
                                            .getWsCurdate().getWsCurdateDay())),
                                    2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #249] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #252] PERFORM statement
            controlManager.run(context, submitJobToIntrdr);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (CobStringUtils.compare(container.getCorpt0ai().getYearlyi(),
                " ") != 0
                && CobStringUtils.compare(container.getCorpt0ai().getYearlyi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #254] MOVE statement
            container.getWsVariables().setWsReportName("Yearly");
            // [T-Up#INFO][CORPT00C.cbl, LINE #255] MOVE statement
            container.getWsDateTime().getWsCurdateData()
                    .set(IntrinsicFunction.functionCurrentDate());
            // [T-Up#INFO][CORPT00C.cbl, LINE #257] MOVE statement
            container
                    .getWsVariables()
                    .getWsStartDate()
                    .setWsStartDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            container
                    .getWsVariables()
                    .getWsEndDate()
                    .setWsEndDateYyyy(
                            StringUtils.leftPad(String.valueOf(Math
                                    .abs(container.getWsDateTime()
                                            .getWsCurdateData().getWsCurdate()
                                            .getWsCurdateYear())), 4, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #259] MOVE statement
            container.getWsVariables().getWsStartDate().setWsStartDateMm("01");
            container.getWsVariables().getWsStartDate().setWsStartDateDd("01");
            // [T-Up#INFO][CORPT00C.cbl, LINE #261] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #264] MOVE statement
            container.getWsVariables().getWsEndDate().setWsEndDateMm("12");
            // [T-Up#INFO][CORPT00C.cbl, LINE #265] MOVE statement
            container.getWsVariables().getWsEndDate().setWsEndDateDd("31");
            // [T-Up#INFO][CORPT00C.cbl, LINE #266] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #269] PERFORM statement
            controlManager.run(context, submitJobToIntrdr);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else if (CobStringUtils.compare(container.getCorpt0ai().getCustomi(),
                " ") != 0
                && CobStringUtils.compare(container.getCorpt0ai().getCustomi(),
                        StringUtils.repeat((char) 0x00, 1)) != 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #272] EVALUATE statement
            if (CobStringUtils.compare(container.getCorpt0ai().getSdtmmi(),
                    StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtmmi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #275] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Month can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #277] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #278] MOVE statement
                container.getCorpt0ai().setSdtmml(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #279] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getSdtddi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtddi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #282] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Day can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #284] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #285] MOVE statement
                container.getCorpt0ai().setSdtddl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #286] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getSdtyyyyi(), StringUtils.repeat(' ', 4)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtyyyyi(), StringUtils.repeat((char) 0x00, 4)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #289] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Year can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #291] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #292] MOVE statement
                container.getCorpt0ai().setSdtyyyyl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #293] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtmmi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtmmi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #296] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Month can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #298] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #299] MOVE statement
                container.getCorpt0ai().setEdtmml(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #300] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtddi(), StringUtils.repeat(' ', 2)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtddi(), StringUtils.repeat((char) 0x00, 2)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #303] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Day can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #305] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #306] MOVE statement
                container.getCorpt0ai().setEdtddl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #307] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getEdtyyyyi(), StringUtils.repeat(' ', 4)) == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtyyyyi(), StringUtils.repeat((char) 0x00, 4)) == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #310] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Year can NOT be empty...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #312] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #313] MOVE statement
                container.getCorpt0ai().setEdtyyyyl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #314] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][CORPT00C.cbl, LINE #316] CONTINUE statement
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #319] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtmmi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #321] MOVE statement
            container.getCorpt0ai().setSdtmmi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #323] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtddi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #325] MOVE statement
            container.getCorpt0ai().setSdtddi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #327] COMPUTE statement
            container.getWsVariables().setWsNum9999(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getSdtyyyyi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #329] MOVE statement
            container.getCorpt0ai().setSdtyyyyi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum9999())), 4, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #331] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtmmi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #333] MOVE statement
            container.getCorpt0ai().setEdtmmi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #335] COMPUTE statement
            container.getWsVariables().setWsNum99(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtddi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #337] MOVE statement
            container.getCorpt0ai().setEdtddi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum99())), 2, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #339] COMPUTE statement
            container.getWsVariables().setWsNum9999(
                    (int) IntrinsicFunction.functionNumvalC(container
                            .getCorpt0ai().getEdtyyyyi(), null));
            // [T-Up#INFO][CORPT00C.cbl, LINE #341] MOVE statement
            container.getCorpt0ai().setEdtyyyyi(
                    StringUtils.leftPad(String.valueOf(Math.abs(container
                            .getWsVariables().getWsNum9999())), 4, '0'));
            // [T-Up#INFO][CORPT00C.cbl, LINE #343] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtmmi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtmmi(), "12") > 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #345] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Month...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #347] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #348] MOVE statement
                container.getCorpt0ai().setSdtmml(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #349] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #352] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtddi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getSdtddi(), "31") > 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #354] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Day...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #356] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #357] MOVE statement
                container.getCorpt0ai().setSdtddl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #358] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #361] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getSdtyyyyi())) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #362] MOVE statement
                container.getWsVariables().setWsMessage(
                        "Start Date - Not a valid Year...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #364] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #365] MOVE statement
                container.getCorpt0ai().setSdtyyyyl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #366] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #369] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtmmi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtmmi(), "12") > 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #371] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Month...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #373] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #374] MOVE statement
                container.getCorpt0ai().setEdtmml(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #375] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #378] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtddi())
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getEdtddi(), "31") > 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #380] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Day...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #382] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #383] MOVE statement
                container.getCorpt0ai().setEdtddl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #384] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #387] IF statement
            if (!StringUtils.isNumeric(container.getCorpt0ai().getEdtyyyyi())) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #388] MOVE statement
                container.getWsVariables().setWsMessage(
                        "End Date - Not a valid Year...");
                // [T-Up#INFO][CORPT00C.cbl, LINE #390] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #391] MOVE statement
                container.getCorpt0ai().setEdtyyyyl(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #392] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #395] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateYyyy(container.getCorpt0ai().getSdtyyyyi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #396] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateMm(container.getCorpt0ai().getSdtmmi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #397] MOVE statement
            container.getWsVariables().getWsStartDate()
                    .setWsStartDateDd(container.getCorpt0ai().getSdtddi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #398] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateYyyy(container.getCorpt0ai().getEdtyyyyi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #399] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateMm(container.getCorpt0ai().getEdtmmi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #400] MOVE statement
            container.getWsVariables().getWsEndDate()
                    .setWsEndDateDd(container.getCorpt0ai().getEdtddi());
            // [T-Up#INFO][CORPT00C.cbl, LINE #402] MOVE statement
            container.getCsutldtcParm().setCsutldtcDate(
                    container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #403] MOVE statement
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    container.getWsVariables().getWsDateFormat());
            // [T-Up#INFO][CORPT00C.cbl, LINE #404] MOVE statement
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][CORPT00C.cbl, LINE #406] CALL statement
            tempint1 = programCsutldtc.run(context.getGeneralContext(),
                    container.getCsutldtcParm().getCsutldtcDate(), container
                            .getCsutldtcParm().getCsutldtcDateFormat(),
                    container.getCsutldtcParm().getCsutldtcResult().get());
            context.setReturnValue(tempint1);
            tempCsutldtcVariableContainer1 = (CsutldtcVariableContainer) context
                    .getProgramVariableContainer("Csutldtc");
            container.getCsutldtcParm().setCsutldtcDate(
                    tempCsutldtcVariableContainer1.getLsDate());
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    tempCsutldtcVariableContainer1.getLsDateFormat());
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(tempCsutldtcVariableContainer1.getLsResult());
            // [T-Up#INFO][CORPT00C.cbl, LINE #410] IF statement
            if (CobStringUtils.compare(container.getCsutldtcParm()
                    .getCsutldtcResult().getCsutldtcResultSevCd(), "0000") == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #411] CONTINUE statement
            } else {
                // [T-Up#INFO][CORPT00C.cbl, LINE #413] IF statement
                if (CobStringUtils.compare(container.getCsutldtcParm()
                        .getCsutldtcResult().getCsutldtcResultMsgNum(), "2513") != 0) {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #414] MOVE statement
                    container.getWsVariables().setWsMessage(
                            "Start Date - Not a valid date...");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #416] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #417] MOVE statement
                    container.getCorpt0ai().setSdtmml(-1);
                    // [T-Up#INFO][CORPT00C.cbl, LINE #418] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #422] MOVE statement
            container.getCsutldtcParm().setCsutldtcDate(
                    container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #423] MOVE statement
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    container.getWsVariables().getWsDateFormat());
            // [T-Up#INFO][CORPT00C.cbl, LINE #424] MOVE statement
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(StringUtils.repeat(' ', 80));
            // [T-Up#INFO][CORPT00C.cbl, LINE #426] CALL statement
            tempint1 = programCsutldtc.run(context.getGeneralContext(),
                    container.getCsutldtcParm().getCsutldtcDate(), container
                            .getCsutldtcParm().getCsutldtcDateFormat(),
                    container.getCsutldtcParm().getCsutldtcResult().get());
            context.setReturnValue(tempint1);
            tempCsutldtcVariableContainer1 = (CsutldtcVariableContainer) context
                    .getProgramVariableContainer("Csutldtc");
            container.getCsutldtcParm().setCsutldtcDate(
                    tempCsutldtcVariableContainer1.getLsDate());
            container.getCsutldtcParm().setCsutldtcDateFormat(
                    tempCsutldtcVariableContainer1.getLsDateFormat());
            container.getCsutldtcParm().getCsutldtcResult()
                    .set(tempCsutldtcVariableContainer1.getLsResult());
            // [T-Up#INFO][CORPT00C.cbl, LINE #430] IF statement
            if (CobStringUtils.compare(container.getCsutldtcParm()
                    .getCsutldtcResult().getCsutldtcResultSevCd(), "0000") == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #431] CONTINUE statement
            } else {
                // [T-Up#INFO][CORPT00C.cbl, LINE #433] IF statement
                if (CobStringUtils.compare(container.getCsutldtcParm()
                        .getCsutldtcResult().getCsutldtcResultMsgNum(), "2513") != 0) {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #434] MOVE statement
                    container.getWsVariables().setWsMessage(
                            "End Date - Not a valid date...");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #436] MOVE statement
                    container.getWsVariables().setWsErrFlg("Y");
                    // [T-Up#INFO][CORPT00C.cbl, LINE #437] MOVE statement
                    container.getCorpt0ai().setEdtmml(-1);
                    // [T-Up#INFO][CORPT00C.cbl, LINE #438] PERFORM statement
                    controlManager.run(context, sendTrnrptScreen);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #443] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller1()
                    .setParmStartDate1(
                            container.getWsVariables().getWsStartDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmStartDate2(
                            container.getWsVariables().getWsStartDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #445] MOVE statement
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller2()
                    .setParmEndDate1(
                            container.getWsVariables().getWsEndDate().get());
            container
                    .getJobData()
                    .getJobData1()
                    .getFiller3()
                    .setParmEndDate2(
                            container.getWsVariables().getWsEndDate().get());
            // [T-Up#INFO][CORPT00C.cbl, LINE #447] MOVE statement
            container.getWsVariables().setWsReportName("Custom");
            // [T-Up#INFO][CORPT00C.cbl, LINE #448] IF statement
            if (!(CobStringUtils.compare(container.getWsVariables()
                    .getWsErrFlg(), ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #449] PERFORM statement
                controlManager.run(context, submitJobToIntrdr);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        } else {
            // [T-Up#INFO][CORPT00C.cbl, LINE #452] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Select a report type to print report...");
            // [T-Up#INFO][CORPT00C.cbl, LINE #454] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][CORPT00C.cbl, LINE #455] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #456] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CORPT00C.cbl, LINE #459] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #461] PERFORM statement
            controlManager.run(context, initializeAllFields);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #462] MOVE statement
            container.setErrmsgc(container.getDfhbmsca().getDfhgreen());
            // [T-Up#INFO][CORPT00C.cbl, LINE #463] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1.append(
                    container.getWsVariables().getWsReportName()
                            .split(Pattern.quote(" "))[0]).append(
                    " report submitted for printing ...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #467] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #468] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      SUBMIT-JOB-TO-INTRDR                       
    // *----------------------------------------------------------------*

    void submitJobToIntrdr(OpenFrameContext context) {
        StringBuilder tempStringBuilder1;
        StringBuilder tempStringBuilder2;
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #478] IF statement
        if (CobStringUtils.compare(container.getCorpt0ai().getConfirmi(), " ") == 0
                || CobStringUtils.compare(
                        container.getCorpt0ai().getConfirmi(),
                        StringUtils.repeat((char) 0x00, 1)) == 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #479] STRING statement
            tempStringBuilder1 = new StringBuilder();
            tempStringBuilder2 = new StringBuilder(container.getWsVariables()
                    .getWsMessage());
            tempStringBuilder1
                    .append("Please confirm to print the ")
                    .append(container.getWsVariables().getWsReportName()
                            .split(Pattern.quote(" "))[0]).append(" report...");
            if (tempStringBuilder1.length() <= 80) {
                tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                        tempStringBuilder1.toString());
                container.getWsVariables().setWsMessage(
                        tempStringBuilder2.toString());
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #485] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][CORPT00C.cbl, LINE #486] MOVE statement
            container.getCorpt0ai().setConfirml(-1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #487] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CORPT00C.cbl, LINE #490] IF statement
        if (!(CobStringUtils.compare(container.getWsVariables().getWsErrFlg(),
                ERR_FLG_ON) == 0)) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #491] EVALUATE statement
            if (CobStringUtils.compare(container.getCorpt0ai().getConfirmi(),
                    "Y") == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getConfirmi(), "y") == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #493] CONTINUE statement
            } else if (CobStringUtils.compare(container.getCorpt0ai()
                    .getConfirmi(), "N") == 0
                    || CobStringUtils.compare(container.getCorpt0ai()
                            .getConfirmi(), "n") == 0) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #495] PERFORM statement
                controlManager.run(context, initializeAllFields);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CORPT00C.cbl, LINE #496] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #497] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            } else {
                // [T-Up#INFO][CORPT00C.cbl, LINE #499] STRING statement
                tempStringBuilder1 = new StringBuilder();
                tempStringBuilder2 = new StringBuilder(container
                        .getWsVariables().getWsMessage());
                tempStringBuilder1
                        .append("\"")
                        .append(container.getCorpt0ai().getConfirmi()
                                .split(Pattern.quote(" "))[0])
                        .append("\" is not a valid value to confirm...");
                if (tempStringBuilder1.length() <= 80) {
                    tempStringBuilder2.replace(0, tempStringBuilder1.length(),
                            tempStringBuilder1.toString());
                    container.getWsVariables().setWsMessage(
                            tempStringBuilder2.toString());
                }
                // [T-Up#INFO][CORPT00C.cbl, LINE #505] MOVE statement
                container.getWsVariables().setWsErrFlg("Y");
                // [T-Up#INFO][CORPT00C.cbl, LINE #506] MOVE statement
                container.getCorpt0ai().setConfirml(-1);
                // [T-Up#INFO][CORPT00C.cbl, LINE #507] PERFORM statement
                controlManager.run(context, sendTrnrptScreen);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
            // [T-Up#INFO][CORPT00C.cbl, LINE #510] SET statement
            container.getWsVariables().setWsEndLoop(END_LOOP_NO);
            // [T-Up#INFO][CORPT00C.cbl, LINE #512] PERFORM statement
            container.getWsVariables().setWsIdx(1);
            while (!((container.getWsVariables().getWsIdx() > 1000 || CobStringUtils
                    .compare(container.getWsVariables().getWsEndLoop(),
                            END_LOOP_YES) == 0) || CobStringUtils.compare(
                    container.getWsVariables().getWsErrFlg(), ERR_FLG_ON) == 0)) {
                // [T-Up#INFO][CORPT00C.cbl, LINE #515] MOVE statement
                container.getWsVariables().setJclRecord(
                        container.getJobData().getJobLines(
                                container.getWsVariables().getWsIdx() - 1));
                // [T-Up#INFO][CORPT00C.cbl, LINE #516] IF statement
                if ((CobStringUtils.compare(container.getWsVariables()
                        .getJclRecord(), "/*EOF") == 0 || CobStringUtils
                        .compare(container.getWsVariables().getJclRecord(),
                                StringUtils.repeat(' ', 80)) == 0)
                        || CobStringUtils.compare(container.getWsVariables()
                                .getJclRecord(), StringUtils.repeat(
                                (char) 0x00, 80)) == 0) {
                    // [T-Up#INFO][CORPT00C.cbl, LINE #518] SET statement
                    container.getWsVariables().setWsEndLoop(END_LOOP_YES);
                }
                // [T-Up#INFO][CORPT00C.cbl, LINE #521] PERFORM statement
                controlManager.run(context, wirteJobsubTdq);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                container.getWsVariables().setWsIdx(
                        container.getWsVariables().getWsIdx() + 1);
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      WIRTE-JOBSUB-TDQ                           
    // *----------------------------------------------------------------*

    void wirteJobsubTdq(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #531] EXEC_CICS statement
        /*
                       EXEC CICS WRITEQ TD                                          
                         QUEUE ('JOBS')                                             
                         FROM (JCL-RECORD)                                          
                         LENGTH (LENGTH OF JCL-RECORD)                              
                         RESP(WS-RESP-CD)                                           
                         RESP2(WS-REAS-CD)                                          
                       END-EXEC
         */
        try {
            queueManager.writeTransientQueue("JOBS", container.getWsVariables()
                    .getJclRecord());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
        // [T-Up#INFO][CORPT00C.cbl, LINE #539] EVALUATE statement
        if (container.getWsVariables().getWsRespCd() == 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #541] CONTINUE statement
        } else {
            // [T-Up#INFO][CORPT00C.cbl, LINE #543] DISPLAY statement
            System.out.print("RESP:");
            System.out.print(container.getWsVariables().getWsRespCd());
            System.out.print("REAS:");
            System.out.println(container.getWsVariables().getWsReasCd());
            // [T-Up#INFO][CORPT00C.cbl, LINE #544] MOVE statement
            container.getWsVariables().setWsErrFlg("Y");
            // [T-Up#INFO][CORPT00C.cbl, LINE #545] MOVE statement
            container.getWsVariables().setWsMessage(
                    "Unable to Write TDQ (JOBS)...");
            // [T-Up#INFO][CORPT00C.cbl, LINE #547] MOVE statement
            container.getCorpt0ai().setMonthlyl(-1);
            // [T-Up#INFO][CORPT00C.cbl, LINE #548] PERFORM statement
            controlManager.run(context, sendTrnrptScreen);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *----------------------------------------------------------------*
    // *                      RETURN-TO-PREV-SCREEN                      
    // *----------------------------------------------------------------*

    void returnToPrevScreen(OpenFrameContext context) {
    }

    // *     IF CDEMO-TO-PROGRAM = LOW-VALUES OR SPACES                  
    // *         MOVE 'COSGN00C' TO CDEMO-TO-PROGRAM                     
    // *     END-IF                                                      
    // *     MOVE WS-TRANID    TO CDEMO-FROM-TRANID                      
    // *     MOVE WS-PGMNAME   TO CDEMO-FROM-PROGRAM                     
    // *     MOVE ZEROS        TO CDEMO-PGM-CONTEXT                      
    // *     EXEC CICS                                                   
    // *         XCTL PROGRAM(CDEMO-TO-PROGRAM)                          
    // *         COMMAREA(CARDDEMO-COMMAREA)                             
    // *     END-EXEC.                                                   
    // *----------------------------------------------------------------*
    // *                      SEND-TRNRPT-SCREEN                         
    // *----------------------------------------------------------------*

    void sendTrnrptScreen(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #572] PERFORM statement
        controlManager.run(context, populateHeaderInfo);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CORPT00C.cbl, LINE #574] MOVE statement
        container.setErrmsgo(container.getWsVariables().getWsMessage());
        // [T-Up#INFO][CORPT00C.cbl, LINE #576] IF statement
        if (CobStringUtils.compare(container.getWsVariables()
                .getWsSendEraseFlg(), SEND_ERASE_YES) == 0) {
            // [T-Up#INFO][CORPT00C.cbl, LINE #577] EXEC_CICS statement
            /*
                               EXEC CICS SEND                                           
                                         MAP('CORPT0A')                                 
                                         MAPSET('CORPT00')                              
                                         FROM(CORPT0AO)                                 
                                         ERASE                                          
                                         CURSOR                                         
                               END-EXEC
             */
            ((Corpt00cOutputDto) task.getOutputDto())
                    .setPageName("CORPT00_CORPT0A");
            ((Corpt00cOutputDto) task.getOutputDto()).setCorpt0ao(container
                    .getCorpt0ao());
        } else {
            // [T-Up#INFO][CORPT00C.cbl, LINE #585] EXEC_CICS statement
            /*
                               EXEC CICS SEND                                           
                                         MAP('CORPT0A')                                 
                                         MAPSET('CORPT00')                              
                                         FROM(CORPT0AO)                                 
                                         CURSOR                                         
                               END-EXEC
             */
            ((Corpt00cOutputDto) task.getOutputDto())
                    .setPageName("CORPT00_CORPT0A");
            ((Corpt00cOutputDto) task.getOutputDto()).setCorpt0ao(container
                    .getCorpt0ao());
        }
        // *                  ERASE                                          
        // [T-Up#INFO][CORPT00C.cbl, LINE #594] GOTO statement
        context.setGotoTarget(returnToCics);
        return;
    }

    // *----------------------------------------------------------------*
    // *                         RETURN-TO-CICS                          
    // *----------------------------------------------------------------*

    void returnToCics(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #601] EXEC_CICS statement
        /*
                       EXEC CICS RETURN                                             
                                 TRANSID (WS-TRANID)                                
                                 COMMAREA (CARDDEMO-COMMAREA)                       
                       END-EXEC
         */
        TaskDto taskDto = TaskDto
                .builder()
                .destination("CR00")
                .data(Data
                        .session(Corpt00cCarddemoCommareaToCorpt00cDfhcommarea.INSTANCE
                                .toTarget(container.getCarddemoCommarea())))
                .build();
        taskInvoker.setNextTask(taskDto);
        context.setReturnFlag(true);
    }

    // *              LENGTH(LENGTH OF CARDDEMO-COMMAREA)                
    // *----------------------------------------------------------------*
    // *                      RECEIVE-TRNRPT-SCREEN                      
    // *----------------------------------------------------------------*

    void receiveTrnrptScreen(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #612] EXEC_CICS statement
        /*
                       EXEC CICS RECEIVE                                            
                                 MAP('CORPT0A')                                     
                                 MAPSET('CORPT00')                                  
                                 INTO(CORPT0AI)                                     
                                 RESP(WS-RESP-CD)                                   
                                 RESP2(WS-REAS-CD)                                  
                       END-EXEC
         */
        try {
            container.setCorpt0ai(((Corpt00cInputDto) task.getInputDto())
                    .getCorpt0ai());
        } catch (ConditionException e) {
        } finally {
            container.getWsVariables().setWsRespCd(task.getLastResp());
            container.getWsVariables().setWsReasCd(task.getLastResp2());
        }
    }

    // *----------------------------------------------------------------*
    // *                      POPULATE-HEADER-INFO                       
    // *----------------------------------------------------------------*

    void populateHeaderInfo(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #625] MOVE statement
        container.getWsDateTime().getWsCurdateData()
                .set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][CORPT00C.cbl, LINE #627] MOVE statement
        container.setTitle01o(container.getCcdaScreenTitle().getCcdaTitle01());
        // [T-Up#INFO][CORPT00C.cbl, LINE #628] MOVE statement
        container.setTitle02o(container.getCcdaScreenTitle().getCcdaTitle02());
        // [T-Up#INFO][CORPT00C.cbl, LINE #629] MOVE statement
        container.setTrnnameo(container.getWsVariables().getWsTranid());
        // [T-Up#INFO][CORPT00C.cbl, LINE #630] MOVE statement
        container.setPgmnameo(container.getWsVariables().getWsPgmname());
        // [T-Up#INFO][CORPT00C.cbl, LINE #632] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateMonth());
        // [T-Up#INFO][CORPT00C.cbl, LINE #633] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateDd(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurdate().getWsCurdateDay());
        // [T-Up#INFO][CORPT00C.cbl, LINE #634] MOVE statement
        container
                .getWsDateTime()
                .getWsCurdateMmDdYy()
                .setWsCurdateYy(
                        Integer.parseInt(DataConverter
                                .convZonedLongToString(
                                        container.getWsDateTime()
                                                .getWsCurdateData()
                                                .getWsCurdate()
                                                .getWsCurdateYear(), 4)
                                .substring(2, 4).trim()));
        // [T-Up#INFO][CORPT00C.cbl, LINE #636] MOVE statement
        container.setCurdateo(container.getWsDateTime().getWsCurdateMmDdYy()
                .get());
        // [T-Up#INFO][CORPT00C.cbl, LINE #638] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeHh(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeHours());
        // [T-Up#INFO][CORPT00C.cbl, LINE #639] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeMm(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeMinute());
        // [T-Up#INFO][CORPT00C.cbl, LINE #640] MOVE statement
        container
                .getWsDateTime()
                .getWsCurtimeHhMmSs()
                .setWsCurtimeSs(
                        container.getWsDateTime().getWsCurdateData()
                                .getWsCurtime().getWsCurtimeSecond());
        // [T-Up#INFO][CORPT00C.cbl, LINE #642] MOVE statement
        container.setCurtimeo(container.getWsDateTime().getWsCurtimeHhMmSs()
                .get());
    }

    // *----------------------------------------------------------------*
    // *                      INITIALIZE-ALL-FIELDS                      
    // *----------------------------------------------------------------*

    void initializeAllFields(OpenFrameContext context) {
        Corpt00cVariableContainer container = (Corpt00cVariableContainer) context
                .getProgramVariableContainer("Corpt00c");
        // [T-Up#INFO][CORPT00C.cbl, LINE #649] MOVE statement
        container.getCorpt0ai().setMonthlyl(-1);
        // [T-Up#INFO][CORPT00C.cbl, LINE #650] INITIALIZE statement
        container.getCorpt0ai().setMonthlyi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setYearlyi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setCustomi(StringUtils.repeat(' ', 1));
        container.getCorpt0ai().setSdtmmi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setSdtddi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setSdtyyyyi(StringUtils.repeat(' ', 4));
        container.getCorpt0ai().setEdtmmi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setEdtddi(StringUtils.repeat(' ', 2));
        container.getCorpt0ai().setEdtyyyyi(StringUtils.repeat(' ', 4));
        container.getCorpt0ai().setConfirmi(StringUtils.repeat(' ', 1));
        container.getWsVariables().setWsMessage(StringUtils.repeat(' ', 80));
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:33 CDT 
    // *                                                                 
}
