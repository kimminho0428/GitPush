package aws.carddemo.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import aws.carddemo.variable.group.Cbcus01cFdCustfileRec;
import aws.carddemo.dto.AwsM2CarddemoCustdataVsamKsdsDto;
import lombok.*;
import java.math.*;
import java.util.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:55 UTC</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface Cbcus01cMapperInterface {
    /** 
     * <p>Mapper class to convert data for file I/O</p>
     * <ul>
     * <li>source class: {@link Cbcus01cFdCustfileRec}</li>
     * <li>target class: {@link AwsM2CarddemoCustdataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cbcus01cFdCustfileRecToAwsM2CarddemoCustdataVsamKsdsDto {
        Cbcus01cFdCustfileRecToAwsM2CarddemoCustdataVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cbcus01cFdCustfileRecToAwsM2CarddemoCustdataVsamKsdsDto.class);

        @Mapping(source = "fdCustId", target = "custId")
        AwsM2CarddemoCustdataVsamKsdsDto toTarget(Cbcus01cFdCustfileRec source);

        @Mapping(source = "custId", target = "fdCustId")
        Cbcus01cFdCustfileRec toSource(AwsM2CarddemoCustdataVsamKsdsDto source);

        @AfterMapping
        default void makeTarget(Cbcus01cFdCustfileRec source,
                @MappingTarget AwsM2CarddemoCustdataVsamKsdsDto target) {
            target.setCustFirstName(source.getFdCustData().substring(0, 25));
            target.setCustMiddleName(source.getFdCustData().substring(25, 50));
            target.setCustLastName(source.getFdCustData().substring(50, 75));
            target.setCustAddrLine1(source.getFdCustData().substring(75, 125));
            target.setCustAddrLine2(source.getFdCustData().substring(125, 175));
            target.setCustAddrLine3(source.getFdCustData().substring(175, 225));
            target.setCustAddrStateCd(source.getFdCustData()
                    .substring(225, 227));
            target.setCustAddrCountryCd(source.getFdCustData().substring(227,
                    230));
            target.setCustAddrZip(source.getFdCustData().substring(230, 240));
            target.setCustPhoneNum1(source.getFdCustData().substring(240, 255));
            target.setCustPhoneNum2(source.getFdCustData().substring(255, 270));
            target.setCustSsn(DataConverter.convZonedStringToBigDecimal(source
                    .getFdCustData().substring(270, 279), 9, 0));
            target.setCustGovtIssuedId(source.getFdCustData().substring(279,
                    299));
            target.setCustDobYyyymmdd(source.getFdCustData()
                    .substring(299, 309));
            target.setCustEftAccountId(source.getFdCustData().substring(309,
                    319));
            target.setCustPriCardHolderInd(source.getFdCustData().substring(
                    319, 320));
            target.setCustFicoCreditScore(DataConverter
                    .convZonedStringToBigDecimal(source.getFdCustData()
                            .substring(320, 323), 3, 0));
            target.setFiller(source.getFdCustData().substring(323));
        }

        @AfterMapping
        default void makeSource(AwsM2CarddemoCustdataVsamKsdsDto source,
                @MappingTarget Cbcus01cFdCustfileRec target) {
            target.setFdCustData(source.getCustFirstName()
                    + source.getCustMiddleName()
                    + source.getCustLastName()
                    + source.getCustAddrLine1()
                    + source.getCustAddrLine2()
                    + source.getCustAddrLine3()
                    + source.getCustAddrStateCd()
                    + source.getCustAddrCountryCd()
                    + source.getCustAddrZip()
                    + source.getCustPhoneNum1()
                    + source.getCustPhoneNum2()
                    + DataConverter.convZonedBigDecimalToString(
                            source.getCustSsn(), 9, 0)
                    + source.getCustGovtIssuedId()
                    + source.getCustDobYyyymmdd()
                    + source.getCustEftAccountId()
                    + source.getCustPriCardHolderInd()
                    + DataConverter.convZonedBigDecimalToString(
                            source.getCustFicoCreditScore(), 3, 0)
                    + source.getFiller());
        }
    }

    /** 
     * <p>Mapper class to convert data for indexed file I/O that uses only the record key</p>
     * <ul>
     * <li>source class: {@link Cbcus01cFdCustfileRec}</li>
     * <li>target class: {@link AwsM2CarddemoCustdataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface Cbcus01cFdCustfileRecKeyToAwsM2CarddemoCustdataVsamKsdsDto {
        Cbcus01cFdCustfileRecKeyToAwsM2CarddemoCustdataVsamKsdsDto INSTANCE = Mappers
                .getMapper(Cbcus01cFdCustfileRecKeyToAwsM2CarddemoCustdataVsamKsdsDto.class);

        @Mapping(source = "fdCustId", target = "custId")
        AwsM2CarddemoCustdataVsamKsdsDto toTarget(Cbcus01cFdCustfileRec source);
    }
}
