package aws.carddemo;

import static aws.carddemo.variable.Cbtrn02cVariableContainer.*;
import aws.carddemo.file.*;
import aws.carddemo.variable.Cbtrn02cVariableContainer;
import aws.carddemo.variable.group.*;
import com.tmax.openframe.batch.runtime.data.Dd;
import com.tmax.openframe.runtime.cobol.CobStringUtils;
import com.tmax.openframe.runtime.cobol.IntrinsicFunction;
import com.tmax.openframe.runtime.context.OpenFrameContext;
import com.tmax.openframe.runtime.file.FileStatus;
import com.tmax.openframe.runtime.flow.ControlManager;
import java.math.*;
import java.util.*;
import java.util.function.Consumer;
import lombok.*;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:55:56 UTC</p>
 * <hr>
 * <p>Java class for defining logics of COBOL program</p>
 * <ul>
 * <li>The name of COBOL program: CBTRN02C.cbl</li>
 * <li>Variable container class: {@link Cbtrn02cVariableContainer}</li>
 * <li>The list of files used in the program</li>
 * <ul>
 * <li>DALYTRAN-FILE: FD class {@code ->} {@link Cbtrn02cFdDalytranFile}, record class {@code -> } {@link Cbtrn02cFdTranRecord}</li>
 * <li>TRANSACT-FILE: FD class {@code ->} {@link Cbtrn02cFdTransactFile}, record class {@code -> } {@link Cbtrn02cFdTranfileRec}</li>
 * <li>XREF-FILE: FD class {@code ->} {@link Cbtrn02cFdXrefFile}, record class {@code -> } {@link Cbtrn02cFdXreffileRec}</li>
 * <li>DALYREJS-FILE: FD class {@code ->} {@link Cbtrn02cFdDalyrejsFile}, record class {@code -> } {@link Cbtrn02cFdRejsRecord}</li>
 * <li>ACCOUNT-FILE: FD class {@code ->} {@link Cbtrn02cFdAccountFile}, record class {@code -> } {@link Cbtrn02cFdAcctfileRec}</li>
 * <li>TCATBAL-FILE: FD class {@code ->} {@link Cbtrn02cFdTcatbalFile}, record class {@code -> } {@link Cbtrn02cFdTranCatBalRecord}</li>
 * </ul>
 * </ul>
 */
@Service
@RequiredArgsConstructor
@Transactional
public class Cbtrn02c {
    // *                                                                 
    @Autowired
    private Cbtrn02cFileOpDalytranFile fdDalytranFile;
    @Autowired
    private Cbtrn02cFileOpTransactFile fdTransactFile;
    @Autowired
    private Cbtrn02cFileOpXrefFile fdXrefFile;
    @Autowired
    private Cbtrn02cFileOpDalyrejsFile fdDalyrejsFile;
    @Autowired
    private Cbtrn02cFileOpAccountFile fdAccountFile;
    @Autowired
    private Cbtrn02cFileOpTcatbalFile fdTcatbalFile;
    /** 
     * <p>Class that manages an execution flow of the program</p>
     */
    private final ControlManager controlManager;
    Consumer<OpenFrameContext> unnamedSentence = this::unnamedSentence;
    Consumer<OpenFrameContext> _0000DalytranOpen = this::_0000DalytranOpen;
    Consumer<OpenFrameContext> _0100TranfileOpen = this::_0100TranfileOpen;
    Consumer<OpenFrameContext> _0200XreffileOpen = this::_0200XreffileOpen;
    Consumer<OpenFrameContext> _0300DalyrejsOpen = this::_0300DalyrejsOpen;
    Consumer<OpenFrameContext> _0400AcctfileOpen = this::_0400AcctfileOpen;
    Consumer<OpenFrameContext> _0500TcatbalfOpen = this::_0500TcatbalfOpen;
    Consumer<OpenFrameContext> _1000DalytranGetNext = this::_1000DalytranGetNext;
    Consumer<OpenFrameContext> _1500ValidateTran = this::_1500ValidateTran;
    Consumer<OpenFrameContext> _1500ALookupXref = this::_1500ALookupXref;
    Consumer<OpenFrameContext> _1500BLookupAcct = this::_1500BLookupAcct;
    Consumer<OpenFrameContext> _2000PostTransaction = this::_2000PostTransaction;
    Consumer<OpenFrameContext> _2500WriteRejectRec = this::_2500WriteRejectRec;
    Consumer<OpenFrameContext> _2700UpdateTcatbal = this::_2700UpdateTcatbal;
    Consumer<OpenFrameContext> _2700ACreateTcatbalRec = this::_2700ACreateTcatbalRec;
    Consumer<OpenFrameContext> _2700BUpdateTcatbalRec = this::_2700BUpdateTcatbalRec;
    Consumer<OpenFrameContext> _2800UpdateAccountRec = this::_2800UpdateAccountRec;
    Consumer<OpenFrameContext> _2900WriteTransactionFile = this::_2900WriteTransactionFile;
    Consumer<OpenFrameContext> _9000DalytranClose = this::_9000DalytranClose;
    Consumer<OpenFrameContext> _9100TranfileClose = this::_9100TranfileClose;
    Consumer<OpenFrameContext> _9200XreffileClose = this::_9200XreffileClose;
    Consumer<OpenFrameContext> _9300DalyrejsClose = this::_9300DalyrejsClose;
    Consumer<OpenFrameContext> _9400AcctfileClose = this::_9400AcctfileClose;
    Consumer<OpenFrameContext> _9500TcatbalfClose = this::_9500TcatbalfClose;
    Consumer<OpenFrameContext> zGetDb2FormatTimestamp = this::zGetDb2FormatTimestamp;
    Consumer<OpenFrameContext> _9999AbendProgram = this::_9999AbendProgram;
    Consumer<OpenFrameContext> _9910DisplayIoStatus = this::_9910DisplayIoStatus;
    /** 
     * <p>execution flow of COBOL program that defined in the procedure division</p>
     */
    ArrayList<Consumer> methodList = new ArrayList<>();
    {
        methodList.add(unnamedSentence);
        methodList.add(_0000DalytranOpen);
        methodList.add(_0100TranfileOpen);
        methodList.add(_0200XreffileOpen);
        methodList.add(_0300DalyrejsOpen);
        methodList.add(_0400AcctfileOpen);
        methodList.add(_0500TcatbalfOpen);
        methodList.add(_1000DalytranGetNext);
        methodList.add(_1500ValidateTran);
        methodList.add(_1500ALookupXref);
        methodList.add(_1500BLookupAcct);
        methodList.add(_2000PostTransaction);
        methodList.add(_2500WriteRejectRec);
        methodList.add(_2700UpdateTcatbal);
        methodList.add(_2700ACreateTcatbalRec);
        methodList.add(_2700BUpdateTcatbalRec);
        methodList.add(_2800UpdateAccountRec);
        methodList.add(_2900WriteTransactionFile);
        methodList.add(_9000DalytranClose);
        methodList.add(_9100TranfileClose);
        methodList.add(_9200XreffileClose);
        methodList.add(_9300DalyrejsClose);
        methodList.add(_9400AcctfileClose);
        methodList.add(_9500TcatbalfClose);
        methodList.add(zGetDb2FormatTimestamp);
        methodList.add(_9999AbendProgram);
        methodList.add(_9910DisplayIoStatus);
    }

    /** 
     * <p>method for executing a program logic that defined in the procedure division</p>
     * @param generalContext context that is necessary for executing program
     * @return return value of program
     */
    public int run(Map<String, Object> generalContext) {
        OpenFrameContext context = new OpenFrameContext(generalContext,
                methodList);
        if (context.getProgramVariableContainer("Cbtrn02c") == null) {
            Cbtrn02cVariableContainer container = new Cbtrn02cVariableContainer();
            context.setProgramVariableContainer("Cbtrn02c", container);
        }
        controlManager.run(context);
        return context.getReturnValue();
    }

    // ******************************************************************
    // * Program     : CBTRN02C.CBL                                      
    // * Application : CardDemo                                          
    // * Type        : BATCH COBOL Program                               
    // * Function    : Post the records from daily transaction file.     
    // ******************************************************************
    // * Copyright Amazon.com, Inc. or its affiliates.                   
    // * All Rights Reserved.                                            
    // *                                                                 
    // * Licensed under the Apache License, Version 2.0 (the "License"). 
    // * You may not use this file except in compliance with the License.
    // * You may obtain a copy of the License at                         
    // *                                                                 
    // *    http://www.apache.org/licenses/LICENSE-2.0                   
    // *                                                                 
    // * Unless required by applicable law or agreed to in writing,      
    // * software distributed under the License is distributed on an     
    // * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,    
    // * either express or implied. See the License for the specific     
    // * language governing permissions and limitations under the License
    // ******************************************************************
    // ***************************************************************** 

    void unnamedSentence(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #217] DISPLAY statement
        System.out.println("START OF EXECUTION OF PROGRAM CBTRN02C");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #218] PERFORM statement
        controlManager.run(context, _0000DalytranOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #219] PERFORM statement
        controlManager.run(context, _0100TranfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #220] PERFORM statement
        controlManager.run(context, _0200XreffileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #221] PERFORM statement
        controlManager.run(context, _0300DalyrejsOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #222] PERFORM statement
        controlManager.run(context, _0400AcctfileOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #223] PERFORM statement
        controlManager.run(context, _0500TcatbalfOpen);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #225] PERFORM statement
        while (!(CobStringUtils.compare(container.getEndOfFile(), "Y") == 0)) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #226] IF statement
            if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #227] PERFORM statement
                controlManager.run(context, _1000DalytranGetNext);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN02C.cbl, LINE #228] IF statement
                if (CobStringUtils.compare(container.getEndOfFile(), "N") == 0) {
                    // [T-Up#INFO][CBTRN02C.cbl, LINE #229] ADD statement
                    container.getWsCounters()
                            .setWsTransactionCount(
                                    container.getWsCounters()
                                            .getWsTransactionCount() + 1);
                    // *              DISPLAY DALYTRAN-RECORD                            
                    // [T-Up#INFO][CBTRN02C.cbl, LINE #231] MOVE statement
                    container.getWsValidationTrailer()
                            .setWsValidationFailReason(0);
                    // [T-Up#INFO][CBTRN02C.cbl, LINE #232] MOVE statement
                    container.getWsValidationTrailer()
                            .setWsValidationFailReasonDesc(
                                    StringUtils.repeat(' ', 76));
                    // [T-Up#INFO][CBTRN02C.cbl, LINE #233] PERFORM statement
                    controlManager.run(context, _1500ValidateTran);
                    if (controlManager.isTerminate(context)) {
                        return;
                    }
                    // [T-Up#INFO][CBTRN02C.cbl, LINE #234] IF statement
                    if (container.getWsValidationTrailer()
                            .getWsValidationFailReason() == 0) {
                        // [T-Up#INFO][CBTRN02C.cbl, LINE #235] PERFORM statement
                        controlManager.run(context, _2000PostTransaction);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    } else {
                        // [T-Up#INFO][CBTRN02C.cbl, LINE #237] ADD statement
                        container.getWsCounters()
                                .setWsRejectCount(
                                        container.getWsCounters()
                                                .getWsRejectCount() + 1);
                        // [T-Up#INFO][CBTRN02C.cbl, LINE #238] PERFORM statement
                        controlManager.run(context, _2500WriteRejectRec);
                        if (controlManager.isTerminate(context)) {
                            return;
                        }
                    }
                }
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #244] PERFORM statement
        controlManager.run(context, _9000DalytranClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #245] PERFORM statement
        controlManager.run(context, _9100TranfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #246] PERFORM statement
        controlManager.run(context, _9200XreffileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #247] PERFORM statement
        controlManager.run(context, _9300DalyrejsClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #248] PERFORM statement
        controlManager.run(context, _9400AcctfileClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #249] PERFORM statement
        controlManager.run(context, _9500TcatbalfClose);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #250] DISPLAY statement
        System.out.print("TRANSACTIONS PROCESSED :");
        System.out.println(container.getWsCounters().getWsTransactionCount());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #251] DISPLAY statement
        System.out.print("TRANSACTIONS REJECTED  :");
        System.out.println(container.getWsCounters().getWsRejectCount());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #252] IF statement
        if (container.getWsCounters().getWsRejectCount() > 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #253] MOVE statement
            context.setReturnValue(4);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #255] DISPLAY statement
        System.out.println("END OF EXECUTION OF PROGRAM CBTRN02C");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #257] GOBACK statement
        context.setReturnFlag(true);
        return;
    }

    // *---------------------------------------------------------------* 

    void _0000DalytranOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #260] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #261] OPEN statement
        fdDalytranFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #262] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #263] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #265] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #267] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #268] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #270] DISPLAY statement
            System.out.println("ERROR OPENING DALYTRAN");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #271] MOVE statement
            container.getIoStatus().set(container.getDalytranStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #272] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #273] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #275] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0100TranfileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #278] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #279] OPEN statement
        fdTransactFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #280] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #281] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #283] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #285] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #286] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #288] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #289] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #290] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #291] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #293] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0200XreffileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #297] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #298] OPEN statement
        fdXrefFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #299] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #300] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #302] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #304] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #305] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #307] DISPLAY statement
            System.out.println("ERROR OPENING CROSS REF FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #308] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #309] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #310] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #312] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0300DalyrejsOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #315] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #316] OPEN statement
        fdDalyrejsFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #317] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #318] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #320] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #322] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #323] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #325] DISPLAY statement
            System.out.println("ERROR OPENING DALY REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #326] MOVE statement
            container.getIoStatus().set(container.getDalyrejsStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #327] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #328] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #330] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0400AcctfileOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #333] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #334] OPEN statement
        fdAccountFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #335] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #336] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #338] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #340] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #341] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #343] DISPLAY statement
            System.out.println("ERROR OPENING ACCOUNT MASTER FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #344] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #345] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #346] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #348] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _0500TcatbalfOpen(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #351] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #352] OPEN statement
        fdTcatbalFile.open(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #353] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #354] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #356] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #358] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #359] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #361] DISPLAY statement
            System.out.println("ERROR OPENING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #362] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #363] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #364] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #366] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _1000DalytranGetNext(OpenFrameContext context) {
        Cbtrn02cFdTranRecord tempCbtrn02cFdTranRecord1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #369] READ statement
        tempCbtrn02cFdTranRecord1 = fdDalytranFile.readNext(context);
        if (tempCbtrn02cFdTranRecord1 != null) {
            container.setFdTranRecord(tempCbtrn02cFdTranRecord1);
            container.getDalytranRecord().set(container.getFdTranRecord());
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #370] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #371] MOVE statement
            container.setApplResult(0);
        } else {
            // *        DISPLAY DALYTRAN-RECORD                                  
            // [T-Up#INFO][CBTRN02C.cbl, LINE #374] IF statement
            if (CobStringUtils.compare(container.getDalytranStatus().get(),
                    "10") == 0) {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #375] MOVE statement
                container.setApplResult(16);
            } else {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #377] MOVE statement
                container.setApplResult(12);
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #380] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #381] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #383] IF statement
            if (container.getApplResult() == APPL_EOF) {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #384] MOVE statement
                container.setEndOfFile("Y");
            } else {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #386] DISPLAY statement
                System.out.println("ERROR READING DALYTRAN FILE");
                // [T-Up#INFO][CBTRN02C.cbl, LINE #387] MOVE statement
                container.getIoStatus().set(container.getDalytranStatus());
                // [T-Up#INFO][CBTRN02C.cbl, LINE #388] PERFORM statement
                controlManager.run(context, _9910DisplayIoStatus);
                if (controlManager.isTerminate(context)) {
                    return;
                }
                // [T-Up#INFO][CBTRN02C.cbl, LINE #389] PERFORM statement
                controlManager.run(context, _9999AbendProgram);
                if (controlManager.isTerminate(context)) {
                    return;
                }
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #392] EXIT statement
    }

    void _1500ValidateTran(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #394] PERFORM statement
        controlManager.run(context, _1500ALookupXref);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #395] IF statement
        if (container.getWsValidationTrailer().getWsValidationFailReason() == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #396] PERFORM statement
            controlManager.run(context, _1500BLookupAcct);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #398] CONTINUE statement
        }
        // * ADD MORE VALIDATIONS HERE                                       
        // [T-Up#INFO][CBTRN02C.cbl, LINE #401] EXIT statement
    }

    void _1500ALookupXref(OpenFrameContext context) {
        Cbtrn02cFdXreffileRec tempCbtrn02cFdXreffileRec1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // *    DISPLAY 'CARD NUMBER: ' DALYTRAN-CARD-NUM                    
        // [T-Up#INFO][CBTRN02C.cbl, LINE #405] MOVE statement
        container.getFdXreffileRec().setFdXrefCardNum(
                container.getDalytranRecord().getDalytranCardNum());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #406] READ statement
        tempCbtrn02cFdXreffileRec1 = fdXrefFile.readKey(context, container
                .getFdXreffileRec().getFdXrefCardNum());
        if (tempCbtrn02cFdXreffileRec1 != null) {
            container.setFdXreffileRec(tempCbtrn02cFdXreffileRec1);
            container.getCardXrefRecord().set(container.getFdXreffileRec());
            // *           DISPLAY 'ACCOUNT RECORD FOUND'                        
            // [T-Up#INFO][CBTRN02C.cbl, LINE #413] CONTINUE statement
        } else if (fdXrefFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #408] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(100);
            // [T-Up#INFO][CBTRN02C.cbl, LINE #409] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "INVALID CARD NUMBER FOUND");
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #415] EXIT statement
    }

    void _1500BLookupAcct(OpenFrameContext context) {
        Cbtrn02cFdAcctfileRec tempCbtrn02cFdAcctfileRec1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #417] MOVE statement
        container.getFdAcctfileRec().setFdAcctId(
                container.getCardXrefRecord().getXrefAcctId());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #418] READ statement
        tempCbtrn02cFdAcctfileRec1 = fdAccountFile.readKey(context, container
                .getFdAcctfileRec().getFdAcctId());
        if (tempCbtrn02cFdAcctfileRec1 != null) {
            container.setFdAcctfileRec(tempCbtrn02cFdAcctfileRec1);
            container.getAccountRecord().set(container.getFdAcctfileRec());
            // *         DISPLAY 'ACCT-CREDIT-LIMIT:' ACCT-CREDIT-LIMIT          
            // *         DISPLAY 'TRAN-AMT         :' DALYTRAN-AMT               
            // [T-Up#INFO][CBTRN02C.cbl, LINE #426] COMPUTE statement
            container.getWsCounters()
                    .setWsTempBal(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycCredit()
                                    .subtract(
                                            container.getAccountRecord()
                                                    .getAcctCurrCycDebit())
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
            // [T-Up#INFO][CBTRN02C.cbl, LINE #430] IF statement
            if (container.getAccountRecord().getAcctCreditLimit()
                    .compareTo(container.getWsCounters().getWsTempBal()) >= 0) {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #431] CONTINUE statement
            } else {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #433] MOVE statement
                container.getWsValidationTrailer().setWsValidationFailReason(
                        102);
                // [T-Up#INFO][CBTRN02C.cbl, LINE #434] MOVE statement
                container.getWsValidationTrailer()
                        .setWsValidationFailReasonDesc("OVERLIMIT TRANSACTION");
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #437] IF statement
            if (CobStringUtils.compare(container.getAccountRecord()
                    .getAcctExpiraionDate(), container.getDalytranRecord()
                    .getDalytranOrigTs().substring(0, 10)) >= 0) {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #438] CONTINUE statement
            } else {
                // [T-Up#INFO][CBTRN02C.cbl, LINE #440] MOVE statement
                container.getWsValidationTrailer().setWsValidationFailReason(
                        103);
                // [T-Up#INFO][CBTRN02C.cbl, LINE #441] MOVE statement
                container.getWsValidationTrailer()
                        .setWsValidationFailReasonDesc(
                                "TRANSACTION RECEIVED AFTER ACCT EXPIRATION");
            }
        } else if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #420] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(101);
            // [T-Up#INFO][CBTRN02C.cbl, LINE #421] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "ACCOUNT RECORD NOT FOUND");
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #445] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _2000PostTransaction(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #448] MOVE statement
        container.getTranRecord().setTranId(
                container.getDalytranRecord().getDalytranId());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #449] MOVE statement
        container.getTranRecord().setTranTypeCd(
                container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #450] MOVE statement
        container.getTranRecord().setTranCatCd(
                container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #451] MOVE statement
        container.getTranRecord().setTranSource(
                container.getDalytranRecord().getDalytranSource());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #452] MOVE statement
        container.getTranRecord().setTranDesc(
                container.getDalytranRecord().getDalytranDesc());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #453] MOVE statement
        container.getTranRecord().setTranAmt(
                container.getDalytranRecord().getDalytranAmt());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #454] MOVE statement
        container.getTranRecord().setTranMerchantId(
                container.getDalytranRecord().getDalytranMerchantId());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #455] MOVE statement
        container.getTranRecord().setTranMerchantName(
                container.getDalytranRecord().getDalytranMerchantName());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #456] MOVE statement
        container.getTranRecord().setTranMerchantCity(
                container.getDalytranRecord().getDalytranMerchantCity());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #457] MOVE statement
        container.getTranRecord().setTranMerchantZip(
                container.getDalytranRecord().getDalytranMerchantZip());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #458] MOVE statement
        container.getTranRecord().setTranCardNum(
                container.getDalytranRecord().getDalytranCardNum());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #459] MOVE statement
        container.getTranRecord().setTranOrigTs(
                container.getDalytranRecord().getDalytranOrigTs());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #460] PERFORM statement
        controlManager.run(context, zGetDb2FormatTimestamp);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #461] MOVE statement
        container.getTranRecord().setTranProcTs(container.getDb2FormatTs());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #463] PERFORM statement
        controlManager.run(context, _2700UpdateTcatbal);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #464] PERFORM statement
        controlManager.run(context, _2800UpdateAccountRec);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #465] PERFORM statement
        controlManager.run(context, _2900WriteTransactionFile);
        if (controlManager.isTerminate(context)) {
            return;
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #467] EXIT statement
    }

    void _2500WriteRejectRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #470] MOVE statement
        container.getRejectRecord().setRejectTranData(
                container.getDalytranRecord().get());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #471] MOVE statement
        container.getRejectRecord().setValidationTrailer(
                container.getWsValidationTrailer().get());
        // *     DISPLAY '***' REJECT-RECORD                                 
        // [T-Up#INFO][CBTRN02C.cbl, LINE #473] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #474] WRITE statement
        container.getFdRejsRecord().set(container.getRejectRecord());
        fdDalyrejsFile.write(context, container.getFdRejsRecord());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #475] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #476] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #478] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #480] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #481] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #483] DISPLAY statement
            System.out.println("ERROR WRITING TO REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #484] MOVE statement
            container.getIoStatus().set(container.getDalyrejsStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #485] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #486] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #488] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _2700UpdateTcatbal(OpenFrameContext context) {
        Cbtrn02cFdTranCatBalRecord tempCbtrn02cFdTranCatBalRecord1;
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // * Update the balances in transaction balance file.                
        // [T-Up#INFO][CBTRN02C.cbl, LINE #492] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatAcctId(
                        container.getCardXrefRecord().getXrefAcctId());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #493] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatTypeCd(
                        container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #494] MOVE statement
        container
                .getFdTranCatBalRecord()
                .getFdTranCatKey()
                .setFdTrancatCd(
                        container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #496] MOVE statement
        container.getWsFlags().setWsCreateTrancatRec("N");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #497] READ statement
        tempCbtrn02cFdTranCatBalRecord1 = fdTcatbalFile.readKey(context,
                container.getFdTranCatBalRecord().getFdTranCatKey());
        if (tempCbtrn02cFdTranCatBalRecord1 != null) {
            container.setFdTranCatBalRecord(tempCbtrn02cFdTranCatBalRecord1);
            container.getTranCatBalRecord().set(
                    container.getFdTranCatBalRecord());
        } else if (fdTcatbalFile.getFileStatus(context) == FileStatus.INVALID_KEY_READ) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #499] DISPLAY statement
            System.out.print("TCATBAL record not found for key : ");
            System.out.print(container.getFdTranCatBalRecord()
                    .getFdTranCatKey());
            System.out.println(".. Creating.");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #501] MOVE statement
            container.getWsFlags().setWsCreateTrancatRec("Y");
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #504] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0
                || CobStringUtils.compare(container.getTcatbalfStatus().get(),
                        "23") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #505] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #507] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #509] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #510] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #512] DISPLAY statement
            System.out.println("ERROR READING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #513] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #514] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #515] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #518] IF statement
        if (CobStringUtils.compare(container.getWsFlags()
                .getWsCreateTrancatRec(), "Y") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #519] PERFORM statement
            controlManager.run(context, _2700ACreateTcatbalRec);
            if (controlManager.isTerminate(context)) {
                return;
            }
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #521] PERFORM statement
            controlManager.run(context, _2700BUpdateTcatbalRec);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #524] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _2700ACreateTcatbalRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #527] INITIALIZE statement
        container.setTranCatBalRecord(Cbtrn02cTranCatBalRecord
                .createDefaultValueInstance());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #528] MOVE statement
        container
                .getTranCatBalRecord()
                .getTranCatKey()
                .setTrancatAcctId(container.getCardXrefRecord().getXrefAcctId());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #529] MOVE statement
        container
                .getTranCatBalRecord()
                .getTranCatKey()
                .setTrancatTypeCd(
                        container.getDalytranRecord().getDalytranTypeCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #530] MOVE statement
        container.getTranCatBalRecord().getTranCatKey()
                .setTrancatCd(container.getDalytranRecord().getDalytranCatCd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #531] ADD statement
        container.getTranCatBalRecord().setTranCatBal(
                container.getTranCatBalRecord().getTranCatBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl, LINE #533] WRITE statement
        container.getFdTranCatBalRecord().set(container.getTranCatBalRecord());
        fdTcatbalFile.write(context, container.getFdTranCatBalRecord());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #535] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #536] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #538] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #540] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #541] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #543] DISPLAY statement
            System.out.println("ERROR WRITING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #544] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #545] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #546] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *---------------------------------------------------------------* 

    void _2700BUpdateTcatbalRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #550] ADD statement
        container.getTranCatBalRecord().setTranCatBal(
                container.getTranCatBalRecord().getTranCatBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl, LINE #551] REWRITE statement
        container.getFdTranCatBalRecord().set(container.getTranCatBalRecord());
        fdTcatbalFile.rewrite(context, container.getFdTranCatBalRecord(),
                container.getFdTranCatBalRecord().getFdTranCatKey());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #553] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #554] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #556] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #558] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #559] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #561] DISPLAY statement
            System.out.println("ERROR REWRITING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #562] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #563] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #564] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
    }

    // *---------------------------------------------------------------* 

    void _2800UpdateAccountRec(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // * Update the balances in account record to reflect posted trans.  
        // [T-Up#INFO][CBTRN02C.cbl, LINE #570] ADD statement
        container.getAccountRecord().setAcctCurrBal(
                container.getAccountRecord().getAcctCurrBal()
                        .add(container.getDalytranRecord().getDalytranAmt()));
        // [T-Up#INFO][CBTRN02C.cbl, LINE #571] IF statement
        if (container.getDalytranRecord().getDalytranAmt()
                .compareTo(BigDecimal.valueOf(0)) >= 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #572] ADD statement
            container.getAccountRecord()
                    .setAcctCurrCycCredit(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycCredit()
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #574] ADD statement
            container.getAccountRecord()
                    .setAcctCurrCycDebit(
                            container
                                    .getAccountRecord()
                                    .getAcctCurrCycDebit()
                                    .add(container.getDalytranRecord()
                                            .getDalytranAmt()));
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #577] REWRITE statement
        container.getFdAcctfileRec().set(container.getAccountRecord());
        fdAccountFile.rewrite(context, container.getFdAcctfileRec(), container
                .getFdAcctfileRec().getFdAcctId());
        if (fdAccountFile.getFileStatus(context) == FileStatus.INVALID_KEY_CREATE) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #579] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReason(109);
            // [T-Up#INFO][CBTRN02C.cbl, LINE #580] MOVE statement
            container.getWsValidationTrailer().setWsValidationFailReasonDesc(
                    "ACCOUNT RECORD NOT FOUND");
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #583] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _2900WriteTransactionFile(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #586] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #587] WRITE statement
        container.getFdTranfileRec().set(container.getTranRecord());
        fdTransactFile.write(context, container.getFdTranfileRec());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #589] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #590] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #592] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #594] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #595] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #597] DISPLAY statement
            System.out.println("ERROR WRITING TO TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #598] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #599] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #600] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #602] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9000DalytranClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #606] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #607] CLOSE statement
        fdDalytranFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #608] IF statement
        if (CobStringUtils.compare(container.getDalytranStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #609] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #611] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #613] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #614] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #616] DISPLAY statement
            System.out.println("ERROR CLOSING DALYTRAN FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #617] MOVE statement
            container.getIoStatus().set(container.getDalytranStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #618] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #619] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #621] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9100TranfileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #624] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #625] CLOSE statement
        fdTransactFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #626] IF statement
        if (CobStringUtils.compare(container.getTranfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #627] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #629] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #631] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #632] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #634] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #635] MOVE statement
            container.getIoStatus().set(container.getTranfileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #636] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #637] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #639] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9200XreffileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #643] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #644] CLOSE statement
        fdXrefFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #645] IF statement
        if (CobStringUtils.compare(container.getXreffileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #646] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #648] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #650] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #651] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #653] DISPLAY statement
            System.out.println("ERROR CLOSING CROSS REF FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #654] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #655] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #656] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #658] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9300DalyrejsClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #661] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #662] CLOSE statement
        fdDalyrejsFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #663] IF statement
        if (CobStringUtils.compare(container.getDalyrejsStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #664] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #666] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #668] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #669] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #671] DISPLAY statement
            System.out.println("ERROR CLOSING DAILY REJECTS FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #672] MOVE statement
            container.getIoStatus().set(container.getXreffileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #673] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #674] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #676] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9400AcctfileClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #679] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #680] CLOSE statement
        fdAccountFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #681] IF statement
        if (CobStringUtils.compare(container.getAcctfileStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #682] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #684] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #686] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #687] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #689] DISPLAY statement
            System.out.println("ERROR CLOSING ACCOUNT FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #690] MOVE statement
            container.getIoStatus().set(container.getAcctfileStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #691] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #692] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #694] EXIT statement
    }

    // *---------------------------------------------------------------* 

    void _9500TcatbalfClose(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #698] MOVE statement
        container.setApplResult(8);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #699] CLOSE statement
        fdTcatbalFile.close(context);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #700] IF statement
        if (CobStringUtils.compare(container.getTcatbalfStatus().get(), "00") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #701] MOVE statement
            container.setApplResult(0);
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #703] MOVE statement
            container.setApplResult(12);
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #705] IF statement
        if (container.getApplResult() == APPL_AOK) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #706] CONTINUE statement
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #708] DISPLAY statement
            System.out.println("ERROR CLOSING TRANSACTION BALANCE FILE");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #709] MOVE statement
            container.getIoStatus().set(container.getTcatbalfStatus());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #710] PERFORM statement
            controlManager.run(context, _9910DisplayIoStatus);
            if (controlManager.isTerminate(context)) {
                return;
            }
            // [T-Up#INFO][CBTRN02C.cbl, LINE #711] PERFORM statement
            controlManager.run(context, _9999AbendProgram);
            if (controlManager.isTerminate(context)) {
                return;
            }
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #713] EXIT statement
    }

    void zGetDb2FormatTimestamp(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #716] MOVE statement
        container.getCobolTs().set(IntrinsicFunction.functionCurrentDate());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #717] MOVE statement
        container.setDb2Yyyy(container.getCobolTs().getCobYyyy());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #718] MOVE statement
        container.setDb2Mm(container.getCobolTs().getCobMm());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #719] MOVE statement
        container.setDb2Dd(container.getCobolTs().getCobDd());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #720] MOVE statement
        container.setDb2Hh(container.getCobolTs().getCobHh());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #721] MOVE statement
        container.setDb2Min(container.getCobolTs().getCobMin());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #722] MOVE statement
        container.setDb2Ss(container.getCobolTs().getCobSs());
        // [T-Up#INFO][CBTRN02C.cbl, LINE #723] MOVE statement
        container.setDb2Mil(Integer
                .parseInt(container.getCobolTs().getCobMil()));
        // [T-Up#INFO][CBTRN02C.cbl, LINE #724] MOVE statement
        container.setDb2Rest("0000");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #725] MOVE statement
        container.setDb2Streep1("-");
        container.setDb2Streep2("-");
        container.setDb2Streep3("-");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #726] MOVE statement
        container.setDb2Dot1(".");
        container.setDb2Dot2(".");
        container.setDb2Dot3(".");
        // *    DISPLAY 'DB2-TIMESTAMP = ' DB2-FORMAT-TS                     
        // [T-Up#INFO][CBTRN02C.cbl, LINE #728] EXIT statement
    }

    void _9999AbendProgram(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #731] DISPLAY statement
        System.out.println("ABENDING PROGRAM");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #732] MOVE statement
        container.setTiming(0);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #733] MOVE statement
        container.setAbcode(999);
        // [T-Up#INFO][CBTRN02C.cbl, LINE #734] CALL statement
        throw new RuntimeException();
    }

    // ***************************************************************** 

    void _9910DisplayIoStatus(OpenFrameContext context) {
        Cbtrn02cVariableContainer container = (Cbtrn02cVariableContainer) context
                .getProgramVariableContainer("Cbtrn02c");
        // [T-Up#INFO][CBTRN02C.cbl, LINE #738] IF statement
        if (!StringUtils.isNumeric(container.getIoStatus().toString())
                || CobStringUtils.compare(container.getIoStatus().getIoStat1(),
                        "9") == 0) {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #740] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().getIoStat1(), 0, 1));
            // [T-Up#INFO][CBTRN02C.cbl, LINE #741] MOVE statement
            container.setTwoBytesBinary(0);
            // [T-Up#INFO][CBTRN02C.cbl, LINE #742] MOVE statement
            container.setTwoBytesRight(container.getIoStatus().getIoStat2());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #743] MOVE statement
            container.getIoStatus04().setIoStatus0403(
                    container.getTwoBytesBinary());
            // [T-Up#INFO][CBTRN02C.cbl, LINE #744] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        } else {
            // [T-Up#INFO][CBTRN02C.cbl, LINE #746] MOVE statement
            container.getIoStatus04().set("0000");
            // [T-Up#INFO][CBTRN02C.cbl, LINE #747] MOVE statement
            container.getIoStatus04().set(
                    StringUtils.overlay(container.getIoStatus04().get(),
                            container.getIoStatus().get(), 2, 4));
            // [T-Up#INFO][CBTRN02C.cbl, LINE #748] DISPLAY statement
            System.out.print("FILE STATUS IS: NNNN");
            System.out.println(container.getIoStatus04());
        }
        // [T-Up#INFO][CBTRN02C.cbl, LINE #750] EXIT statement
    }

    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:12:32 CDT 
    // *                                                                 
}
