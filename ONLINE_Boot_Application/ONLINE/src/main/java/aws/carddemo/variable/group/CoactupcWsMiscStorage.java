package aws.carddemo.variable.group;

import com.tmax.openframe.DataConverter;
import com.tmax.openframe.runtime.cobol.PictureFormatter;
import java.math.*;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.text.DecimalFormat;
import java.util.*;
import java.util.function.Function;
import java.util.stream.*;
import lombok.*;
import org.apache.commons.lang3.StringUtils;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:52 UTC</p>
 */
public @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsMiscStorage {
    // ******************************************************************
    // * General CICS related                                            
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #42] WS-CICS-PROCESSNG-VARS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsCicsProcessngVars wsCicsProcessngVars = new CoactupcWsCicsProcessngVars();
    // ******************************************************************
    // *      Input edits                                                
    // ******************************************************************
    // *  Generic Input Edits                                            
    // [T-Up#INFO][COACTUPC.cbl, LINE #55] WS-GENERIC-EDITS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsGenericEdits wsGenericEdits = new CoactupcWsGenericEdits();
    // ******************************************************************
    // *    Work variables                                               
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #154] WS-CALCULATION-VARS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsCalculationVars wsCalculationVars = new CoactupcWsCalculationVars();
    // *                                                                 
    // * Ver: CardDemo_v1.0-15-g27d6c6f-68 Date: 2022-07-19 23:15:59 CDT 
    // *                                                                 
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #171] WS-DATACHANGED-FLAG (level: 5)
    private @Getter @Builder.Default String wsDatachangedFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #172] NO-CHANGES-FOUND (level: 88)
    public static final String NO_CHANGES_FOUND = "0";
    // [T-Up#INFO][COACTUPC.cbl, LINE #173] CHANGE-HAS-OCCURRED (level: 88)
    public static final String CHANGE_HAS_OCCURRED = "1";
    // [T-Up#INFO][COACTUPC.cbl, LINE #174] WS-INPUT-FLAG (level: 5)
    private @Getter @Builder.Default String wsInputFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #175] INPUT-OK (level: 88)
    public static final String INPUT_OK = "0";
    // [T-Up#INFO][COACTUPC.cbl, LINE #176] INPUT-ERROR (level: 88)
    public static final String INPUT_ERROR = "1";
    // [T-Up#INFO][COACTUPC.cbl, LINE #177] INPUT-PENDING (level: 88)
    public static final String INPUT_PENDING = StringUtils.repeat((char) 0x00,
            1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #178] WS-RETURN-FLAG (level: 5)
    private @Getter @Builder.Default String wsReturnFlag = StringUtils.repeat(
            ' ', 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #179] WS-RETURN-FLAG-OFF (level: 88)
    public static final String WS_RETURN_FLAG_OFF = StringUtils.repeat(
            (char) 0x00, 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #180] WS-RETURN-FLAG-ON (level: 88)
    public static final String WS_RETURN_FLAG_ON = "1";
    // [T-Up#INFO][COACTUPC.cbl, LINE #181] WS-PFK-FLAG (level: 5)
    private @Getter @Builder.Default String wsPfkFlag = StringUtils.repeat(' ',
            1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #182] PFK-VALID (level: 88)
    public static final String PFK_VALID = "0";
    // [T-Up#INFO][COACTUPC.cbl, LINE #183] PFK-INVALID (level: 88)
    public static final String PFK_INVALID = "1";
    // *  Program specific edits                                         
    // [T-Up#INFO][COACTUPC.cbl, LINE #186] WS-EDIT-ACCT-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditAcctFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #187] FLG-ACCTFILTER-ISVALID (level: 88)
    public static final String FLG_ACCTFILTER_ISVALID = "1";
    // [T-Up#INFO][COACTUPC.cbl, LINE #188] FLG-ACCTFILTER-NOT-OK (level: 88)
    public static final String FLG_ACCTFILTER_NOT_OK = "0";
    // [T-Up#INFO][COACTUPC.cbl, LINE #189] FLG-ACCTFILTER-BLANK (level: 88)
    public static final String FLG_ACCTFILTER_BLANK = " ";
    // [T-Up#INFO][COACTUPC.cbl, LINE #190] WS-EDIT-CUST-FLAG (level: 5)
    private @Getter @Builder.Default String wsEditCustFlag = StringUtils
            .repeat(' ', 1);
    // [T-Up#INFO][COACTUPC.cbl, LINE #191] FLG-CUSTFILTER-ISVALID (level: 88)
    public static final String FLG_CUSTFILTER_ISVALID = "1";
    // [T-Up#INFO][COACTUPC.cbl, LINE #192] FLG-CUSTFILTER-NOT-OK (level: 88)
    public static final String FLG_CUSTFILTER_NOT_OK = "0";
    // [T-Up#INFO][COACTUPC.cbl, LINE #193] FLG-CUSTFILTER-BLANK (level: 88)
    public static final String FLG_CUSTFILTER_BLANK = " ";
    // [T-Up#INFO][COACTUPC.cbl, LINE #194] WS-NON-KEY-FLAGS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsNonKeyFlags wsNonKeyFlags = new CoactupcWsNonKeyFlags();
    // ******************************************************************
    // * Output edits                                                    
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #360] CICS-OUTPUT-EDIT-VARS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcCicsOutputEditVars cicsOutputEditVars = new CoactupcCicsOutputEditVars();
    // ******************************************************************
    // *      File and data Handling                                     
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #379] WS-XREF-RID (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsXrefRid wsXrefRid = new CoactupcWsXrefRid();
    // [T-Up#INFO][COACTUPC.cbl, LINE #387] WS-FILE-READ-FLAGS (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsFileReadFlags wsFileReadFlags = new CoactupcWsFileReadFlags();
    // [T-Up#INFO][COACTUPC.cbl, LINE #392] WS-FILE-ERROR-MESSAGE (level: 5)
    private @Getter @Setter @Builder.Default CoactupcWsFileErrorMessage wsFileErrorMessage = new CoactupcWsFileErrorMessage();
    // *  Alpha variables for editing numerics                           
    // *                                                                 
    // [T-Up#INFO][COACTUPC.cbl, LINE #414] ALPHA-VARS-FOR-DATA-EDITING (level: 5)
    private @Getter @Setter @Builder.Default CoactupcAlphaVarsForDataEditing alphaVarsForDataEditing = new CoactupcAlphaVarsForDataEditing();
    // [T-Up#INFO][COACTUPC.cbl, LINE #421] ACCT-UPDATE-RECORD (level: 5)
    private @Getter @Setter @Builder.Default CoactupcAcctUpdateRecord acctUpdateRecord = new CoactupcAcctUpdateRecord();
    // [T-Up#INFO][COACTUPC.cbl, LINE #437] CUST-UPDATE-RECORD (level: 5)
    private @Getter @Setter @Builder.Default CoactupcCustUpdateRecord custUpdateRecord = new CoactupcCustUpdateRecord();
    // ******************************************************************
    // *      Output Message Construction                                
    // ******************************************************************
    // [T-Up#INFO][COACTUPC.cbl, LINE #465] WS-LONG-MSG (level: 5)
    private @Getter @Builder.Default String wsLongMsg = StringUtils.repeat(' ',
            500);
    // [T-Up#INFO][COACTUPC.cbl, LINE #466] WS-INFO-MSG (level: 5)
    private @Getter @Builder.Default String wsInfoMsg = StringUtils.repeat(' ',
            40);
    // [T-Up#INFO][COACTUPC.cbl, LINE #467] WS-NO-INFO-MESSAGE (level: 88)
    public static final String WS_NO_INFO_MESSAGE_1 = StringUtils.repeat(' ',
            40);
    public static final String WS_NO_INFO_MESSAGE_2 = StringUtils.repeat(
            (char) 0x00, 40);
    // [T-Up#INFO][COACTUPC.cbl, LINE #469] FOUND-ACCOUNT-DATA (level: 88)
    public static final String FOUND_ACCOUNT_DATA = "Details of selected account shown above";
    // [T-Up#INFO][COACTUPC.cbl, LINE #471] PROMPT-FOR-SEARCH-KEYS (level: 88)
    public static final String PROMPT_FOR_SEARCH_KEYS = "Enter or update id of account to update";
    // [T-Up#INFO][COACTUPC.cbl, LINE #473] PROMPT-FOR-CHANGES (level: 88)
    public static final String PROMPT_FOR_CHANGES = "Update account details presented above.";
    // [T-Up#INFO][COACTUPC.cbl, LINE #475] PROMPT-FOR-CONFIRMATION (level: 88)
    public static final String PROMPT_FOR_CONFIRMATION = "Changes validated.Press F5 to save";
    // [T-Up#INFO][COACTUPC.cbl, LINE #477] CONFIRM-UPDATE-SUCCESS (level: 88)
    public static final String CONFIRM_UPDATE_SUCCESS = "Changes committed to database";
    // [T-Up#INFO][COACTUPC.cbl, LINE #479] INFORM-FAILURE (level: 88)
    public static final String INFORM_FAILURE = "Changes unsuccessful. Please try again";
    // [T-Up#INFO][COACTUPC.cbl, LINE #482] WS-RETURN-MSG (level: 5)
    private @Getter @Builder.Default String wsReturnMsg = StringUtils.repeat(
            ' ', 75);
    // [T-Up#INFO][COACTUPC.cbl, LINE #483] WS-RETURN-MSG-OFF (level: 88)
    public static final String WS_RETURN_MSG_OFF = StringUtils.repeat(' ', 75);
    // [T-Up#INFO][COACTUPC.cbl, LINE #484] WS-EXIT-MESSAGE (level: 88)
    public static final String WS_EXIT_MESSAGE = "PF03 pressed.Exiting              ";
    // [T-Up#INFO][COACTUPC.cbl, LINE #486] WS-PROMPT-FOR-ACCT (level: 88)
    public static final String WS_PROMPT_FOR_ACCT = "Account number not provided";
    // [T-Up#INFO][COACTUPC.cbl, LINE #488] WS-PROMPT-FOR-LASTNAME (level: 88)
    public static final String WS_PROMPT_FOR_LASTNAME = "Last name not provided";
    // [T-Up#INFO][COACTUPC.cbl, LINE #490] WS-NAME-MUST-BE-ALPHA (level: 88)
    public static final String WS_NAME_MUST_BE_ALPHA = "Name can only contain alphabets and spaces";
    // [T-Up#INFO][COACTUPC.cbl, LINE #492] NO-SEARCH-CRITERIA-RECEIVED (level: 88)
    public static final String NO_SEARCH_CRITERIA_RECEIVED = "No input received";
    // [T-Up#INFO][COACTUPC.cbl, LINE #494] NO-CHANGES-DETECTED (level: 88)
    public static final String NO_CHANGES_DETECTED = "No change detected with respect to values fetched.";
    // [T-Up#INFO][COACTUPC.cbl, LINE #496] SEARCHED-ACCT-ZEROES (level: 88)
    public static final String SEARCHED_ACCT_ZEROES = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COACTUPC.cbl, LINE #498] SEARCHED-ACCT-NOT-NUMERIC (level: 88)
    public static final String SEARCHED_ACCT_NOT_NUMERIC = "Account number must be a non zero 11 digit number";
    // [T-Up#INFO][COACTUPC.cbl, LINE #500] DID-NOT-FIND-ACCT-IN-CARDXREF (level: 88)
    public static final String DID_NOT_FIND_ACCT_IN_CARDXREF = "Did not find this account in account card xref file";
    // [T-Up#INFO][COACTUPC.cbl, LINE #502] DID-NOT-FIND-ACCT-IN-ACCTDAT (level: 88)
    public static final String DID_NOT_FIND_ACCT_IN_ACCTDAT = "Did not find this account in account master file";
    // [T-Up#INFO][COACTUPC.cbl, LINE #504] DID-NOT-FIND-CUST-IN-CUSTDAT (level: 88)
    public static final String DID_NOT_FIND_CUST_IN_CUSTDAT = "Did not find associated customer in master file";
    // [T-Up#INFO][COACTUPC.cbl, LINE #506] ACCT-STATUS-MUST-BE-YES-NO (level: 88)
    public static final String ACCT_STATUS_MUST_BE_YES_NO = "Account Active Status must be Y or N";
    // [T-Up#INFO][COACTUPC.cbl, LINE #508] CRED-LIMIT-IS-BLANK (level: 88)
    public static final String CRED_LIMIT_IS_BLANK = "Credit Limit must be supplied";
    // [T-Up#INFO][COACTUPC.cbl, LINE #510] CRED-LIMIT-IS-NOT-VALID (level: 88)
    public static final String CRED_LIMIT_IS_NOT_VALID = "Credit Limit is not valid";
    // [T-Up#INFO][COACTUPC.cbl, LINE #512] THIS-MONTH-NOT-VALID (level: 88)
    public static final String THIS_MONTH_NOT_VALID = "Card expiry month must be between 1 and 12";
    // [T-Up#INFO][COACTUPC.cbl, LINE #514] THIS-YEAR-NOT-VALID (level: 88)
    public static final String THIS_YEAR_NOT_VALID = "Invalid card expiry year";
    // [T-Up#INFO][COACTUPC.cbl, LINE #516] DID-NOT-FIND-ACCTCARD-COMBO (level: 88)
    public static final String DID_NOT_FIND_ACCTCARD_COMBO = "Did not find cards for this search condition";
    // [T-Up#INFO][COACTUPC.cbl, LINE #518] COULD-NOT-LOCK-ACCT-FOR-UPDATE (level: 88)
    public static final String COULD_NOT_LOCK_ACCT_FOR_UPDATE = "Could not lock account record for update";
    // [T-Up#INFO][COACTUPC.cbl, LINE #520] COULD-NOT-LOCK-CUST-FOR-UPDATE (level: 88)
    public static final String COULD_NOT_LOCK_CUST_FOR_UPDATE = "Could not lock customer record for update";
    // [T-Up#INFO][COACTUPC.cbl, LINE #522] DATA-WAS-CHANGED-BEFORE-UPDATE (level: 88)
    public static final String DATA_WAS_CHANGED_BEFORE_UPDATE = "Record changed by some one else. Please review";
    // [T-Up#INFO][COACTUPC.cbl, LINE #524] LOCKED-BUT-UPDATE-FAILED (level: 88)
    public static final String LOCKED_BUT_UPDATE_FAILED = "Update of record failed";
    // [T-Up#INFO][COACTUPC.cbl, LINE #526] XREF-READ-ERROR (level: 88)
    public static final String XREF_READ_ERROR = "Error reading Card Data File";
    // [T-Up#INFO][COACTUPC.cbl, LINE #528] CODING-TO-BE-DONE (level: 88)
    public static final String CODING_TO_BE_DONE = "Looks Good.... so far";

    public void setWsDatachangedFlag(String source) {
        wsDatachangedFlag = StringUtils.truncate(
                StringUtils.rightPad(source, 1), 1);
    }

    public void setWsInputFlag(String source) {
        wsInputFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsReturnFlag(String source) {
        wsReturnFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsPfkFlag(String source) {
        wsPfkFlag = StringUtils.truncate(StringUtils.rightPad(source, 1), 1);
    }

    public void setWsEditAcctFlag(String source) {
        wsEditAcctFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsEditCustFlag(String source) {
        wsEditCustFlag = StringUtils.truncate(StringUtils.rightPad(source, 1),
                1);
    }

    public void setWsLongMsg(String source) {
        wsLongMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 500), 500);
    }

    public void setWsInfoMsg(String source) {
        wsInfoMsg = StringUtils.truncate(StringUtils.rightPad(source, 40), 40);
    }

    public void setWsReturnMsg(String source) {
        wsReturnMsg = StringUtils
                .truncate(StringUtils.rightPad(source, 75), 75);
    }

    public static CoactupcWsMiscStorage createDefaultValueInstance() {
        return new CoactupcWsMiscStorage.builder()
                .wsCicsProcessngVars(
                        CoactupcWsCicsProcessngVars
                                .createDefaultValueInstance())
                .wsGenericEdits(
                        CoactupcWsGenericEdits.createDefaultValueInstance())
                .wsCalculationVars(
                        CoactupcWsCalculationVars.createDefaultValueInstance())
                .wsNonKeyFlags(
                        CoactupcWsNonKeyFlags.createDefaultValueInstance())
                .cicsOutputEditVars(
                        CoactupcCicsOutputEditVars.createDefaultValueInstance())
                .wsXrefRid(CoactupcWsXrefRid.createDefaultValueInstance())
                .wsFileReadFlags(
                        CoactupcWsFileReadFlags.createDefaultValueInstance())
                .wsFileErrorMessage(
                        CoactupcWsFileErrorMessage.createDefaultValueInstance())
                .alphaVarsForDataEditing(
                        CoactupcAlphaVarsForDataEditing
                                .createDefaultValueInstance())
                .acctUpdateRecord(
                        CoactupcAcctUpdateRecord.createDefaultValueInstance())
                .custUpdateRecord(
                        CoactupcCustUpdateRecord.createDefaultValueInstance())
                .build();
    }

    public void set(String source) {
        source = StringUtils.truncate(StringUtils.rightPad(source, 2196), 2196);
        wsCicsProcessngVars.set(source.substring(0, 16));
        wsGenericEdits.set(source.substring(16, 350));
        wsCalculationVars.set(source.substring(350, 495));
        wsDatachangedFlag = source.substring(495, 496);
        wsInputFlag = source.substring(496, 497);
        wsReturnFlag = source.substring(497, 498);
        wsPfkFlag = source.substring(498, 499);
        wsEditAcctFlag = source.substring(499, 500);
        wsEditCustFlag = source.substring(500, 501);
        wsNonKeyFlags.set(source.substring(501, 537));
        cicsOutputEditVars.set(source.substring(537, 588));
        wsXrefRid.set(source.substring(588, 624));
        wsFileReadFlags.set(source.substring(624, 626));
        wsFileErrorMessage.set(source.substring(626, 706));
        alphaVarsForDataEditing.set(source.substring(706, 781));
        acctUpdateRecord.set(source.substring(781, 1081));
        custUpdateRecord.set(source.substring(1081, 1581));
        wsLongMsg = source.substring(1581, 2081);
        wsInfoMsg = source.substring(2081, 2121);
        wsReturnMsg = source.substring(2121, 2196);
    }

    public String get() {
        StringBuilder sb = new StringBuilder();
        sb.append(wsCicsProcessngVars.get());
        sb.append(wsGenericEdits.get());
        sb.append(wsCalculationVars.get());
        sb.append(wsDatachangedFlag);
        sb.append(wsInputFlag);
        sb.append(wsReturnFlag);
        sb.append(wsPfkFlag);
        sb.append(wsEditAcctFlag);
        sb.append(wsEditCustFlag);
        sb.append(wsNonKeyFlags.get());
        sb.append(cicsOutputEditVars.get());
        sb.append(wsXrefRid.get());
        sb.append(wsFileReadFlags.get());
        sb.append(wsFileErrorMessage.get());
        sb.append(alphaVarsForDataEditing.get());
        sb.append(acctUpdateRecord.get());
        sb.append(custUpdateRecord.get());
        sb.append(wsLongMsg);
        sb.append(wsInfoMsg);
        sb.append(wsReturnMsg);
        return sb.toString();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getWsCicsProcessngVars().toString());
        sb.append(getWsGenericEdits().toString());
        sb.append(getWsCalculationVars().toString());
        sb.append(getWsDatachangedFlag());
        sb.append(getWsInputFlag());
        sb.append(getWsReturnFlag());
        sb.append(getWsPfkFlag());
        sb.append(getWsEditAcctFlag());
        sb.append(getWsEditCustFlag());
        sb.append(getWsNonKeyFlags().toString());
        sb.append(getCicsOutputEditVars().toString());
        sb.append(getWsXrefRid().toString());
        sb.append(getWsFileReadFlags().toString());
        sb.append(getWsFileErrorMessage().toString());
        sb.append(getAlphaVarsForDataEditing().toString());
        sb.append(getAcctUpdateRecord().toString());
        sb.append(getCustUpdateRecord().toString());
        sb.append(getWsLongMsg());
        sb.append(getWsInfoMsg());
        sb.append(getWsReturnMsg());
        return sb.toString();
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsCicsProcessngVars {
        // [T-Up#INFO][COACTUPC.cbl, LINE #43] WS-RESP-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsRespCd = 0;
        // [T-Up#INFO][COACTUPC.cbl, LINE #45] WS-REAS-CD (level: 7)
        private @Getter @Setter @Builder.Default int wsReasCd = 0;
        // [T-Up#INFO][COACTUPC.cbl, LINE #47] WS-TRANID (level: 7)
        private @Getter @Builder.Default String wsTranid = StringUtils.repeat(
                ' ', 4);
        // [T-Up#INFO][COACTUPC.cbl, LINE #49] WS-UCTRANS (level: 7)
        private @Getter @Builder.Default String wsUctrans = StringUtils.repeat(
                ' ', 4);

        public void setWsTranid(String source) {
            wsTranid = StringUtils.truncate(StringUtils.rightPad(source, 4), 4);
        }

        public void setWsUctrans(String source) {
            wsUctrans = StringUtils
                    .truncate(StringUtils.rightPad(source, 4), 4);
        }

        public static CoactupcWsCicsProcessngVars createDefaultValueInstance() {
            return new CoactupcWsCicsProcessngVars.builder().wsRespCd(0)
                    .wsReasCd(0).wsTranid(StringUtils.repeat(' ', 4))
                    .wsUctrans(StringUtils.repeat(' ', 4)).build();
        }

        public void set(String source) {
            ByteBuffer tempByteBuffer1;
            source = StringUtils.truncate(StringUtils.rightPad(source, 16), 16);
            try {
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.put(source.substring(0, 4).getBytes(
                        StandardCharsets.ISO_8859_1));
                tempByteBuffer1.flip();
                wsRespCd = tempByteBuffer1.getInt();
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsRespCd = 0;
            }
            try {
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.put(source.substring(4, 8).getBytes(
                        StandardCharsets.ISO_8859_1));
                tempByteBuffer1.flip();
                wsReasCd = tempByteBuffer1.getInt();
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsReasCd = 0;
            }
            wsTranid = source.substring(8, 12);
            wsUctrans = source.substring(12, 16);
        }

        public String get() {
            ByteBuffer tempByteBuffer1;
            StringBuilder sb = new StringBuilder();
            tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
            tempByteBuffer1.putInt(wsRespCd);
            tempByteBuffer1.flip();
            sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                    .toString());
            tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
            tempByteBuffer1.putInt(wsReasCd);
            tempByteBuffer1.flip();
            sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                    .toString());
            sb.append(wsTranid);
            sb.append(wsUctrans);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getWsRespCd()));
            sb.append(String.valueOf(getWsReasCd()));
            sb.append(getWsTranid());
            sb.append(getWsUctrans());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsGenericEdits {
        // [T-Up#INFO][COACTUPC.cbl, LINE #56] WS-EDIT-VARIABLE-NAME (level: 10)
        private @Getter @Builder.Default String wsEditVariableName = StringUtils
                .repeat(' ', 25);
        // [T-Up#INFO][COACTUPC.cbl, LINE #58] WS-EDIT-SIGNED-NUMBER-9V2-X (level: 10)
        private @Getter @Builder.Default String wsEditSignedNumber9v2X = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #59] WS-FLG-SIGNED-NUMBER-EDIT (level: 10)
        private @Getter @Builder.Default String wsFlgSignedNumberEdit = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #60] FLG-SIGNED-NUMBER-ISVALID (level: 88)
        public static final String FLG_SIGNED_NUMBER_ISVALID = StringUtils
                .repeat((char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #61] FLG-SIGNED-NUMBER-NOT-OK (level: 88)
        public static final String FLG_SIGNED_NUMBER_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #62] FLG-SIGNED-NUMBER-BLANK (level: 88)
        public static final String FLG_SIGNED_NUMBER_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #64] WS-EDIT-ALPHANUM-ONLY (level: 10)
        private @Getter @Builder.Default String wsEditAlphanumOnly = StringUtils
                .repeat(' ', 256);
        // [T-Up#INFO][COACTUPC.cbl, LINE #65] WS-EDIT-ALPHANUM-LENGTH (level: 10)
        private @Getter @Setter int wsEditAlphanumLength;
        // [T-Up#INFO][COACTUPC.cbl, LINE #67] WS-EDIT-ALPHA-ONLY-FLAGS (level: 10)
        private @Getter @Builder.Default String wsEditAlphaOnlyFlags = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #68] FLG-ALPHA-ISVALID (level: 88)
        public static final String FLG_ALPHA_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #69] FLG-ALPHA-NOT-OK (level: 88)
        public static final String FLG_ALPHA_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #70] FLG-ALPHA-BLANK (level: 88)
        public static final String FLG_ALPHA_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #71] WS-EDIT-ALPHANUM-ONLY-FLAGS (level: 10)
        private @Getter @Builder.Default String wsEditAlphanumOnlyFlags = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #72] FLG-ALPHNANUM-ISVALID (level: 88)
        public static final String FLG_ALPHNANUM_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #73] FLG-ALPHNANUM-NOT-OK (level: 88)
        public static final String FLG_ALPHNANUM_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #74] FLG-ALPHNANUM-BLANK (level: 88)
        public static final String FLG_ALPHNANUM_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #75] WS-EDIT-MANDATORY-FLAGS (level: 10)
        private @Getter @Builder.Default String wsEditMandatoryFlags = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #76] FLG-MANDATORY-ISVALID (level: 88)
        public static final String FLG_MANDATORY_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #77] FLG-MANDATORY-NOT-OK (level: 88)
        public static final String FLG_MANDATORY_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #78] FLG-MANDATORY-BLANK (level: 88)
        public static final String FLG_MANDATORY_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #79] WS-EDIT-YES-NO (level: 10)
        private @Getter @Builder.Default String wsEditYesNo = "N";
        // [T-Up#INFO][COACTUPC.cbl, LINE #81] FLG-YES-NO-ISVALID (level: 88)
        public static final String FLG_YES_NO_ISVALID_1 = "Y";
        public static final String FLG_YES_NO_ISVALID_2 = "N";
        // [T-Up#INFO][COACTUPC.cbl, LINE #82] FLG-YES-NO-NOT-OK (level: 88)
        public static final String FLG_YES_NO_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #83] FLG-YES-NO-BLANK (level: 88)
        public static final String FLG_YES_NO_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #85] WS-EDIT-US-PHONE-NUM (level: 10)
        private @Getter @Builder.Default String wsEditUsPhoneNum = StringUtils
                .repeat(' ', 15);

        public CoactupcWsEditUsPhoneNumX getWsEditUsPhoneNumX() {
            return CoactupcWsEditUsPhoneNumX.builder()
                    .OFFILLER1(getOFFILLER1())
                    .wsEditUsPhoneNuma(getWsEditUsPhoneNuma())
                    .OFFILLER2(getOFFILLER2())
                    .wsEditUsPhoneNumb(getWsEditUsPhoneNumb())
                    .OFFILLER3(getOFFILLER3())
                    .wsEditUsPhoneNumc(getWsEditUsPhoneNumc())
                    .OFFILLER4(getOFFILLER4()).build();
        }

        public void setWsEditUsPhoneNumX(String source) {
            setOFFILLER1(source.substring(0, 1));
            setWsEditUsPhoneNuma(source.substring(1, 4));
            setOFFILLER2(source.substring(4, 5));
            setWsEditUsPhoneNumb(source.substring(5, 8));
            setOFFILLER3(source.substring(8, 9));
            setWsEditUsPhoneNumc(source.substring(9, 13));
            setOFFILLER4(source.substring(13, 15));
        }

        public void setWsEditUsPhoneNumX(CoactupcWsEditUsPhoneNumX source) {
            setWsEditUsPhoneNumX(source.toString());
        }

        public String getOFFILLER1() {
            return getWsEditUsPhoneNum().substring(0, 1);
        }

        public void setOFFILLER1(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 0, 1));
        }

        public String getWsEditUsPhoneNuma() {
            return getWsEditUsPhoneNum().substring(1, 4);
        }

        public void setWsEditUsPhoneNuma(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 1, 4));
        }

        public String getOFFILLER2() {
            return getWsEditUsPhoneNum().substring(4, 5);
        }

        public void setOFFILLER2(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 4, 5));
        }

        public String getWsEditUsPhoneNumb() {
            return getWsEditUsPhoneNum().substring(5, 8);
        }

        public void setWsEditUsPhoneNumb(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 5, 8));
        }

        public String getOFFILLER3() {
            return getWsEditUsPhoneNum().substring(8, 9);
        }

        public void setOFFILLER3(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 8, 9));
        }

        public String getWsEditUsPhoneNumc() {
            return getWsEditUsPhoneNum().substring(9, 13);
        }

        public void setWsEditUsPhoneNumc(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 9, 13));
        }

        public String getOFFILLER4() {
            return getWsEditUsPhoneNum().substring(13);
        }

        public void setOFFILLER4(String source) {
            setWsEditUsPhoneNum(StringUtils.overlay(getWsEditUsPhoneNum(),
                    source, 13, 15));
        }

        public int getWsEditUsPhoneNumaN() {
            try {
                return (int) DataConverter.convZonedStringToLong(
                        getWsEditUsPhoneNuma(), 3);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditUsPhoneNumaN(int source) {
            String temp1 = DataConverter.convZonedLongToString(source, 3);
            setWsEditUsPhoneNuma(temp1);
        }

        public int getWsEditUsPhoneNumbN() {
            try {
                return (int) DataConverter.convZonedStringToLong(
                        getWsEditUsPhoneNumb(), 3);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditUsPhoneNumbN(int source) {
            String temp1 = DataConverter.convZonedLongToString(source, 3);
            setWsEditUsPhoneNumb(temp1);
        }

        public int getWsEditUsPhoneNumcN() {
            try {
                return (int) DataConverter.convZonedStringToLong(
                        getWsEditUsPhoneNumc(), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditUsPhoneNumcN(int source) {
            String temp1 = DataConverter.convZonedLongToString(source, 4);
            setWsEditUsPhoneNumc(temp1);
        }

        // [T-Up#INFO][COACTUPC.cbl, LINE #104] WS-EDIT-US-PHONE-NUM-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditUsPhoneNumFlgs wsEditUsPhoneNumFlgs = new CoactupcWsEditUsPhoneNumFlgs();
        // [T-Up#INFO][COACTUPC.cbl, LINE #120] WS-EDIT-US-SSN (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditUsSsn wsEditUsSsn = new CoactupcWsEditUsSsn();

        public int getWsEditUsSsnN() {
            String temp1 = DataConverter.convZonedLongToString(getWsEditUsSsn()
                    .getWsEditUsSsnPart1N(), 3);
            try {
                return (int) DataConverter.convZonedStringToLong(
                        getWsEditUsSsn().getWsEditUsSsnPart1()
                                + temp1
                                + getWsEditUsSsn().getWsEditUsSsnPart2()
                                + getWsEditUsSsn().getWsEditUsSsnPart3()
                                        .substring(0, 1), 9);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditUsSsnN(int source) {
            String temp1 = DataConverter.convZonedLongToString(source, 9);
            wsEditUsSsn.setWsEditUsSsnPart1(temp1.substring(0, 3));
            try {
                wsEditUsSsn.setWsEditUsSsnPart1N((int) DataConverter
                        .convZonedStringToLong(temp1.substring(3, 6), 3));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsEditUsSsn.setWsEditUsSsnPart1N(0);
            }
            wsEditUsSsn.setWsEditUsSsnPart2(temp1.substring(6, 8));
            wsEditUsSsn.setWsEditUsSsnPart3(temp1.substring(8));
        }

        // [T-Up#INFO][COACTUPC.cbl, LINE #135] WS-EDIT-US-SSN-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditUsSsnFlgs wsEditUsSsnFlgs = new CoactupcWsEditUsSsnFlgs();

        public void setWsEditVariableName(String source) {
            wsEditVariableName = StringUtils.truncate(
                    StringUtils.rightPad(source, 25), 25);
        }

        public void setWsEditSignedNumber9v2X(String source) {
            wsEditSignedNumber9v2X = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setWsFlgSignedNumberEdit(String source) {
            wsFlgSignedNumberEdit = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditAlphanumOnly(String source) {
            wsEditAlphanumOnly = StringUtils.truncate(
                    StringUtils.rightPad(source, 256), 256);
        }

        public void setWsEditAlphaOnlyFlags(String source) {
            wsEditAlphaOnlyFlags = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditAlphanumOnlyFlags(String source) {
            wsEditAlphanumOnlyFlags = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditMandatoryFlags(String source) {
            wsEditMandatoryFlags = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditYesNo(String source) {
            wsEditYesNo = StringUtils.truncate(StringUtils.rightPad(source, 1),
                    1);
        }

        public void setWsEditUsPhoneNum(String source) {
            wsEditUsPhoneNum = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public static CoactupcWsGenericEdits createDefaultValueInstance() {
            return new CoactupcWsGenericEdits.builder()
                    .wsEditYesNo(StringUtils.repeat(' ', 1))
                    .wsEditUsPhoneNumFlgs(
                            CoactupcWsEditUsPhoneNumFlgs
                                    .createDefaultValueInstance())
                    .wsEditUsSsn(
                            CoactupcWsEditUsSsn.createDefaultValueInstance())
                    .wsEditUsSsnFlgs(
                            CoactupcWsEditUsSsnFlgs
                                    .createDefaultValueInstance()).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 334),
                    334);
            wsEditVariableName = source.substring(0, 25);
            wsEditSignedNumber9v2X = source.substring(25, 40);
            wsFlgSignedNumberEdit = source.substring(40, 41);
            wsEditAlphanumOnly = source.substring(41, 297);
            try {
                wsEditAlphanumLength = (int) DataConverter
                        .convPackedStringToLong(source.substring(297, 300), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsEditAlphanumLength = 0;
            }
            wsEditAlphaOnlyFlags = source.substring(300, 301);
            wsEditAlphanumOnlyFlags = source.substring(301, 302);
            wsEditMandatoryFlags = source.substring(302, 303);
            wsEditYesNo = source.substring(303, 304);
            wsEditUsPhoneNum = source.substring(304, 319);
            wsEditUsPhoneNumFlgs.set(source.substring(319, 322));
            wsEditUsSsn.set(source.substring(322, 331));
            wsEditUsSsnFlgs.set(source.substring(331, 334));
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsEditVariableName);
            sb.append(wsEditSignedNumber9v2X);
            sb.append(wsFlgSignedNumberEdit);
            sb.append(wsEditAlphanumOnly);
            sb.append(DataConverter.convPackedLongToString(
                    wsEditAlphanumLength, 4));
            sb.append(wsEditAlphaOnlyFlags);
            sb.append(wsEditAlphanumOnlyFlags);
            sb.append(wsEditMandatoryFlags);
            sb.append(wsEditYesNo);
            sb.append(wsEditUsPhoneNum);
            sb.append(wsEditUsPhoneNumFlgs.get());
            sb.append(wsEditUsSsn.get());
            sb.append(wsEditUsSsnFlgs.get());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEditVariableName());
            sb.append(getWsEditSignedNumber9v2X());
            sb.append(getWsFlgSignedNumberEdit());
            sb.append(getWsEditAlphanumOnly());
            sb.append(String.valueOf(getWsEditAlphanumLength()));
            sb.append(getWsEditAlphaOnlyFlags());
            sb.append(getWsEditAlphanumOnlyFlags());
            sb.append(getWsEditMandatoryFlags());
            sb.append(getWsEditYesNo());
            sb.append(getWsEditUsPhoneNum());
            sb.append(getWsEditUsPhoneNumFlgs().toString());
            sb.append(getWsEditUsSsn().toString());
            sb.append(getWsEditUsSsnFlgs().toString());
            return sb.toString();
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditUsPhoneNumX {
            // [T-Up#INFO][COACTUPC.cbl, LINE #88] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER1 = StringUtils
                    .repeat(' ', 1);
            // *                                            VALUE '('            
            // [T-Up#INFO][COACTUPC.cbl, LINE #90] WS-EDIT-US-PHONE-NUMA (level: 20)
            private @Getter @Builder.Default String wsEditUsPhoneNuma = StringUtils
                    .repeat(' ', 3);
            // [T-Up#INFO][COACTUPC.cbl, LINE #93] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER2 = StringUtils
                    .repeat(' ', 1);
            // *                                            VALUE ')'            
            // [T-Up#INFO][COACTUPC.cbl, LINE #95] WS-EDIT-US-PHONE-NUMB (level: 20)
            private @Getter @Builder.Default String wsEditUsPhoneNumb = StringUtils
                    .repeat(' ', 3);
            // [T-Up#INFO][COACTUPC.cbl, LINE #98] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER3 = StringUtils
                    .repeat(' ', 1);
            // *                                            VALUE '-'            
            // [T-Up#INFO][COACTUPC.cbl, LINE #100] WS-EDIT-US-PHONE-NUMC (level: 20)
            private @Getter @Builder.Default String wsEditUsPhoneNumc = StringUtils
                    .repeat(' ', 4);
            // [T-Up#INFO][COACTUPC.cbl, LINE #103] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER4 = StringUtils
                    .repeat(' ', 2);

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(OFFILLER1);
                sb.append(wsEditUsPhoneNuma);
                sb.append(OFFILLER2);
                sb.append(wsEditUsPhoneNumb);
                sb.append(OFFILLER3);
                sb.append(wsEditUsPhoneNumc);
                sb.append(OFFILLER4);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(OFFILLER1);
                sb.append(wsEditUsPhoneNuma);
                sb.append(OFFILLER2);
                sb.append(wsEditUsPhoneNumb);
                sb.append(OFFILLER3);
                sb.append(wsEditUsPhoneNumc);
                sb.append(OFFILLER4);
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditUsPhoneNumFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #105] WS-EDIT-US-PHONE-IS-INVALID (level: 88)
            public static final String WS_EDIT_US_PHONE_IS_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #106] WS-EDIT-US-PHONE-IS-VALID (level: 88)
            public static final String WS_EDIT_US_PHONE_IS_VALID = StringUtils
                    .repeat((char) 0x00, 3);
            // [T-Up#INFO][COACTUPC.cbl, LINE #107] WS-EDIT-US-PHONEA-FLG (level: 20)
            private @Getter @Builder.Default String wsEditUsPhoneaFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #108] FLG-EDIT-US-PHONEA-ISVALID (level: 88)
            public static final String FLG_EDIT_US_PHONEA_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #109] FLG-EDIT-US-PHONEA-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_PHONEA_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #110] FLG-EDIT-US-PHONEA-BLANK (level: 88)
            public static final String FLG_EDIT_US_PHONEA_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #111] WS-EDIT-EDIT-US-PHONEB (level: 20)
            private @Getter @Builder.Default String wsEditEditUsPhoneb = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #112] FLG-EDIT-US-PHONEB-ISVALID (level: 88)
            public static final String FLG_EDIT_US_PHONEB_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #113] FLG-EDIT-US-PHONEB-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_PHONEB_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #114] FLG-EDIT-US-PHONEB-BLANK (level: 88)
            public static final String FLG_EDIT_US_PHONEB_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #115] WS-EDIT-EDIT-PHONEC (level: 20)
            private @Getter @Builder.Default String wsEditEditPhonec = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #116] FLG-EDIT-US-PHONEC-ISVALID (level: 88)
            public static final String FLG_EDIT_US_PHONEC_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #117] FLG-EDIT-US-PHONEC-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_PHONEC_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #118] FLG-EDIT-US-PHONEC-BLANK (level: 88)
            public static final String FLG_EDIT_US_PHONEC_BLANK = "B";

            public void setWsEditUsPhoneaFlg(String source) {
                wsEditUsPhoneaFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditEditUsPhoneb(String source) {
                wsEditEditUsPhoneb = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditEditPhonec(String source) {
                wsEditEditPhonec = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditUsPhoneNumFlgs createDefaultValueInstance() {
                return new CoactupcWsEditUsPhoneNumFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditUsPhoneaFlg = source.substring(0, 1);
                wsEditEditUsPhoneb = source.substring(1, 2);
                wsEditEditPhonec = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditUsPhoneaFlg);
                sb.append(wsEditEditUsPhoneb);
                sb.append(wsEditEditPhonec);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditUsPhoneaFlg());
                sb.append(getWsEditEditUsPhoneb());
                sb.append(getWsEditEditPhonec());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditUsSsn {
            // [T-Up#INFO][COACTUPC.cbl, LINE #121] WS-EDIT-US-SSN-PART1 (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart1 = StringUtils
                    .repeat(' ', 3);

            public int getWsEditUsSsnPart1N() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditUsSsnPart1(), 3);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditUsSsnPart1N(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 3);
                setWsEditUsSsnPart1(temp1);
            }

            // [T-Up#INFO][COACTUPC.cbl, LINE #124] INVALID-SSN-PART1 (level: 88)
            public static final int INVALID_SSN_PART1_1 = 0;
            public static final int INVALID_SSN_PART1_2 = 666;
            public static final int INVALID_SSN_PART1_3_START = 900;
            public static final int INVALID_SSN_PART1_3_END = 999;
            // [T-Up#INFO][COACTUPC.cbl, LINE #127] WS-EDIT-US-SSN-PART2 (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart2 = StringUtils
                    .repeat(' ', 2);

            public int getWsEditUsSsnPart2N() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditUsSsnPart2(), 2);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditUsSsnPart2N(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 2);
                setWsEditUsSsnPart2(temp1);
            }

            // [T-Up#INFO][COACTUPC.cbl, LINE #130] WS-EDIT-US-SSN-PART3 (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart3 = StringUtils
                    .repeat(' ', 4);

            public int getWsEditUsSsnPart3N() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditUsSsnPart3(), 4);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditUsSsnPart3N(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 4);
                setWsEditUsSsnPart3(temp1);
            }

            public void setWsEditUsSsnPart1(String source) {
                wsEditUsSsnPart1 = StringUtils.truncate(
                        StringUtils.rightPad(source, 3), 3);
            }

            public void setWsEditUsSsnPart2(String source) {
                wsEditUsSsnPart2 = StringUtils.truncate(
                        StringUtils.rightPad(source, 2), 2);
            }

            public void setWsEditUsSsnPart3(String source) {
                wsEditUsSsnPart3 = StringUtils.truncate(
                        StringUtils.rightPad(source, 4), 4);
            }

            public static CoactupcWsEditUsSsn createDefaultValueInstance() {
                return new CoactupcWsEditUsSsn.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 9),
                        9);
                wsEditUsSsnPart1 = source.substring(0, 3);
                wsEditUsSsnPart2 = source.substring(3, 5);
                wsEditUsSsnPart3 = source.substring(5, 9);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditUsSsnPart1);
                sb.append(wsEditUsSsnPart2);
                sb.append(wsEditUsSsnPart3);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditUsSsnPart1());
                sb.append(getWsEditUsSsnPart2());
                sb.append(getWsEditUsSsnPart3());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditUsSsnFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #136] WS-EDIT-US-SSN-IS-INVALID (level: 88)
            public static final String WS_EDIT_US_SSN_IS_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #137] WS-EDIT-US-SSN-IS-VALID (level: 88)
            public static final String WS_EDIT_US_SSN_IS_VALID = StringUtils
                    .repeat((char) 0x00, 3);
            // [T-Up#INFO][COACTUPC.cbl, LINE #138] WS-EDIT-US-SSN-PART1-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart1Flgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #139] FLG-EDIT-US-SSN-PART1-ISVALID (level: 88)
            public static final String FLG_EDIT_US_SSN_PART1_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #140] FLG-EDIT-US-SSN-PART1-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART1_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #141] FLG-EDIT-US-SSN-PART1-BLANK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART1_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #142] WS-EDIT-US-SSN-PART2-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart2Flgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #143] FLG-EDIT-US-SSN-PART2-ISVALID (level: 88)
            public static final String FLG_EDIT_US_SSN_PART2_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #144] FLG-EDIT-US-SSN-PART2-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART2_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #145] FLG-EDIT-US-SSN-PART2-BLANK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART2_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #146] WS-EDIT-US-SSN-PART3-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditUsSsnPart3Flgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #147] FLG-EDIT-US-SSN-PART3-ISVALID (level: 88)
            public static final String FLG_EDIT_US_SSN_PART3_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #148] FLG-EDIT-US-SSN-PART3-NOT-OK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART3_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #149] FLG-EDIT-US-SSN-PART3-BLANK (level: 88)
            public static final String FLG_EDIT_US_SSN_PART3_BLANK = "B";

            public void setWsEditUsSsnPart1Flgs(String source) {
                wsEditUsSsnPart1Flgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditUsSsnPart2Flgs(String source) {
                wsEditUsSsnPart2Flgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditUsSsnPart3Flgs(String source) {
                wsEditUsSsnPart3Flgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditUsSsnFlgs createDefaultValueInstance() {
                return new CoactupcWsEditUsSsnFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditUsSsnPart1Flgs = source.substring(0, 1);
                wsEditUsSsnPart2Flgs = source.substring(1, 2);
                wsEditUsSsnPart3Flgs = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditUsSsnPart1Flgs);
                sb.append(wsEditUsSsnPart2Flgs);
                sb.append(wsEditUsSsnPart3Flgs);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditUsSsnPart1Flgs());
                sb.append(getWsEditUsSsnPart2Flgs());
                sb.append(getWsEditUsSsnPart3Flgs());
                return sb.toString();
            }
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsCalculationVars {
        // [T-Up#INFO][COACTUPC.cbl, LINE #155] WS-DIV-BY (level: 10)
        private @Getter @Setter @Builder.Default int wsDivBy = 4;
        // [T-Up#INFO][COACTUPC.cbl, LINE #157] WS-DIVIDEND (level: 10)
        private @Getter @Setter @Builder.Default int wsDividend = 0;
        // [T-Up#INFO][COACTUPC.cbl, LINE #160] WS-REMAINDER (level: 10)
        private @Getter @Setter @Builder.Default int wsRemainder = 0;
        // [T-Up#INFO][COACTUPC.cbl, LINE #162] WS-CURR-DATE (level: 10)
        private @Getter @Builder.Default String wsCurrDate = StringUtils
                .repeat(' ', 21);
        // ******************************************************************
        // *    Generic date edit variables CCYYMMDD                         
        // ******************************************************************
        //       *    COPY 'CSUTLDWY'.                                             
        // *(/home/oflab/repository/ref/COBOL_COPYBOOK/CARDDEMO/CSUTLDWY.cpy)
        // ******************************************************************
        // *Working Storage Copybook for DATE related code                   
        // ******************************************************************
        // [T-Up#INFO][CSUTLDWY.cpy, LINE #5] WS-EDIT-DATE-CCYYMMDD (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditDateCcyymmdd wsEditDateCcyymmdd = new CoactupcWsEditDateCcyymmdd();

        public int getWsEditDateCcyymmddN() {
            String temp1 = DataConverter.convZonedLongToString(
                    getWsEditDateCcyymmdd().getWsEditDateCcyy()
                            .getWsEditDateCcN(), 2);
            try {
                return (int) DataConverter.convZonedStringToLong(
                        getWsEditDateCcyymmdd().getWsEditDateCcyy()
                                .getWsEditDateCc()
                                + temp1
                                + getWsEditDateCcyymmdd().getWsEditDateCcyy()
                                        .getWsEditDateYy()
                                + getWsEditDateCcyymmdd().getWsEditDateMm(), 8);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditDateCcyymmddN(int source) {
            String temp1 = DataConverter.convZonedLongToString(source, 8);
            wsEditDateCcyymmdd.getWsEditDateCcyy().setWsEditDateCc(
                    temp1.substring(0, 2));
            try {
                wsEditDateCcyymmdd.getWsEditDateCcyy().setWsEditDateCcN(
                        (int) DataConverter.convZonedStringToLong(
                                temp1.substring(2, 4), 2));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsEditDateCcyymmdd.getWsEditDateCcyy().setWsEditDateCcN(0);
            }
            wsEditDateCcyymmdd.getWsEditDateCcyy().setWsEditDateYy(
                    temp1.substring(4, 6));
            wsEditDateCcyymmdd.setWsEditDateMm(temp1.substring(6));
        }

        // [T-Up#INFO][CSUTLDWY.cpy, LINE #38] WS-EDIT-DATE-BINARY (level: 10)
        private @Getter @Setter int wsEditDateBinary;
        // [T-Up#INFO][CSUTLDWY.cpy, LINE #39] WS-CURRENT-DATE (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsCurrentDate wsCurrentDate = new CoactupcWsCurrentDate();
        // [T-Up#INFO][CSUTLDWY.cpy, LINE #44] WS-EDIT-DATE-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditDateFlgs wsEditDateFlgs = new CoactupcWsEditDateFlgs();
        // [T-Up#INFO][CSUTLDWY.cpy, LINE #59] WS-DATE-FORMAT (level: 10)
        private @Getter @Builder.Default String wsDateFormat = "YYYYMMDD";
        // [T-Up#INFO][CSUTLDWY.cpy, LINE #61] WS-DATE-VALIDATION-RESULT (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsDateValidationResult wsDateValidationResult = new CoactupcWsDateValidationResult();

        public void setWsCurrDate(String source) {
            wsCurrDate = StringUtils.truncate(StringUtils.rightPad(source, 21),
                    21);
        }

        public void setWsDateFormat(String source) {
            wsDateFormat = StringUtils.truncate(
                    StringUtils.rightPad(source, 8), 8);
        }

        public static CoactupcWsCalculationVars createDefaultValueInstance() {
            return new CoactupcWsCalculationVars.builder()
                    .wsDivBy(0)
                    .wsDividend(0)
                    .wsRemainder(0)
                    .wsCurrDate(StringUtils.repeat(' ', 21))
                    .wsEditDateCcyymmdd(
                            CoactupcWsEditDateCcyymmdd
                                    .createDefaultValueInstance())
                    .wsCurrentDate(
                            CoactupcWsCurrentDate.createDefaultValueInstance())
                    .wsEditDateFlgs(
                            CoactupcWsEditDateFlgs.createDefaultValueInstance())
                    .wsDateFormat(StringUtils.repeat(' ', 8))
                    .wsDateValidationResult(
                            CoactupcWsDateValidationResult
                                    .createDefaultValueInstance()).build();
        }

        public void set(String source) {
            ByteBuffer tempByteBuffer1;
            source = StringUtils.truncate(StringUtils.rightPad(source, 145),
                    145);
            try {
                wsDivBy = (int) DataConverter.convPackedStringToLong(
                        source.substring(0, 3), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsDivBy = 0;
            }
            try {
                wsDividend = (int) DataConverter.convPackedStringToLong(
                        source.substring(3, 6), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsDividend = 0;
            }
            try {
                wsRemainder = (int) DataConverter.convPackedStringToLong(
                        source.substring(6, 9), 4);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsRemainder = 0;
            }
            wsCurrDate = source.substring(9, 30);
            wsEditDateCcyymmdd.set(source.substring(30, 38));
            try {
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.put(source.substring(38, 42).getBytes(
                        StandardCharsets.ISO_8859_1));
                tempByteBuffer1.flip();
                wsEditDateBinary = tempByteBuffer1.getInt();
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsEditDateBinary = 0;
            }
            wsCurrentDate.set(source.substring(42, 54));
            wsEditDateFlgs.set(source.substring(54, 57));
            wsDateFormat = source.substring(57, 65);
            wsDateValidationResult.set(source.substring(65, 145));
        }

        public String get() {
            ByteBuffer tempByteBuffer1;
            StringBuilder sb = new StringBuilder();
            sb.append(DataConverter.convPackedLongToString(wsDivBy, 4));
            sb.append(DataConverter.convPackedLongToString(wsDividend, 4));
            sb.append(DataConverter.convPackedLongToString(wsRemainder, 4));
            sb.append(wsCurrDate);
            sb.append(wsEditDateCcyymmdd.get());
            tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
            tempByteBuffer1.putInt(wsEditDateBinary);
            tempByteBuffer1.flip();
            sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                    .toString());
            sb.append(wsCurrentDate.get());
            sb.append(wsEditDateFlgs.get());
            sb.append(wsDateFormat);
            sb.append(wsDateValidationResult.get());
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(String.valueOf(getWsDivBy()));
            sb.append(String.valueOf(getWsDividend()));
            sb.append(String.valueOf(getWsRemainder()));
            sb.append(getWsCurrDate());
            sb.append(getWsEditDateCcyymmdd().toString());
            sb.append(String.valueOf(getWsEditDateBinary()));
            sb.append(getWsCurrentDate().toString());
            sb.append(getWsEditDateFlgs().toString());
            sb.append(getWsDateFormat());
            sb.append(getWsDateValidationResult().toString());
            return sb.toString();
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditDateCcyymmdd {
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #6] WS-EDIT-DATE-CCYY (level: 20)
            private @Getter @Setter @Builder.Default CoactupcWsEditDateCcyy wsEditDateCcyy = new CoactupcWsEditDateCcyy();

            public int getWsEditDateCcyyN() {
                String temp1 = DataConverter.convZonedLongToString(
                        getWsEditDateCcyy().getWsEditDateCcN(), 2);
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditDateCcyy().getWsEditDateCc() + temp1, 4);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditDateCcyyN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 4);
                wsEditDateCcyy.setWsEditDateCc(temp1.substring(0, 2));
                try {
                    wsEditDateCcyy.setWsEditDateCcN((int) DataConverter
                            .convZonedStringToLong(temp1.substring(2), 2));
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    wsEditDateCcyy.setWsEditDateCcN(0);
                }
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #17] WS-EDIT-DATE-MM (level: 20)
            private @Getter @Builder.Default String wsEditDateMm = StringUtils
                    .repeat(' ', 2);

            public int getWsEditDateMmN() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditDateMm(), 2);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditDateMmN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 2);
                setWsEditDateMm(temp1);
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #20] WS-VALID-MONTH (level: 88)
            public static final int WS_VALID_MONTH_START = 1;
            public static final int WS_VALID_MONTH_END = 12;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #22] WS-31-DAY-MONTH (level: 88)
            public static final int WS_31_DAY_MONTH_1 = 1;
            public static final int WS_31_DAY_MONTH_2 = 3;
            public static final int WS_31_DAY_MONTH_3 = 5;
            public static final int WS_31_DAY_MONTH_4 = 7;
            public static final int WS_31_DAY_MONTH_5 = 8;
            public static final int WS_31_DAY_MONTH_6 = 10;
            public static final int WS_31_DAY_MONTH_7 = 12;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #25] WS-FEBRUARY (level: 88)
            public static final int WS_FEBRUARY = 2;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #26] WS-EDIT-DATE-DD (level: 20)
            private @Getter @Builder.Default String wsEditDateDd = StringUtils
                    .repeat(' ', 2);

            public int getWsEditDateDdN() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsEditDateDd(), 2);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsEditDateDdN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 2);
                setWsEditDateDd(temp1);
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #29] WS-VALID-DAY (level: 88)
            public static final int WS_VALID_DAY_START = 1;
            public static final int WS_VALID_DAY_END = 31;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #31] WS-DAY-31 (level: 88)
            public static final int WS_DAY_31 = 31;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #32] WS-DAY-30 (level: 88)
            public static final int WS_DAY_30 = 30;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #33] WS-DAY-29 (level: 88)
            public static final int WS_DAY_29 = 29;
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #34] WS-VALID-FEB-DAY (level: 88)
            public static final int WS_VALID_FEB_DAY_START = 1;
            public static final int WS_VALID_FEB_DAY_END = 28;

            public void setWsEditDateMm(String source) {
                wsEditDateMm = StringUtils.truncate(
                        StringUtils.rightPad(source, 2), 2);
            }

            public void setWsEditDateDd(String source) {
                wsEditDateDd = StringUtils.truncate(
                        StringUtils.rightPad(source, 2), 2);
            }

            public static CoactupcWsEditDateCcyymmdd createDefaultValueInstance() {
                return new CoactupcWsEditDateCcyymmdd.builder().wsEditDateCcyy(
                        CoactupcWsEditDateCcyy.createDefaultValueInstance())
                        .build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 8),
                        8);
                wsEditDateCcyy.set(source.substring(0, 4));
                wsEditDateMm = source.substring(4, 6);
                wsEditDateDd = source.substring(6, 8);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditDateCcyy.get());
                sb.append(wsEditDateMm);
                sb.append(wsEditDateDd);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditDateCcyy().toString());
                sb.append(getWsEditDateMm());
                sb.append(getWsEditDateDd());
                return sb.toString();
            }

            public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditDateCcyy {
                // [T-Up#INFO][CSUTLDWY.cpy, LINE #7] WS-EDIT-DATE-CC (level: 25)
                private @Getter @Builder.Default String wsEditDateCc = StringUtils
                        .repeat(' ', 2);

                public int getWsEditDateCcN() {
                    try {
                        return (int) DataConverter.convZonedStringToLong(
                                getWsEditDateCc(), 2);
                    } catch (NumberFormatException exception) {
                        exception.printStackTrace();
                        return 0;
                    }
                }

                public void setWsEditDateCcN(int source) {
                    String temp1 = DataConverter.convZonedLongToString(source,
                            2);
                    setWsEditDateCc(temp1);
                }

                // [T-Up#INFO][CSUTLDWY.cpy, LINE #10] THIS-CENTURY (level: 88)
                public static final int THIS_CENTURY = 20;
                // [T-Up#INFO][CSUTLDWY.cpy, LINE #11] LAST-CENTURY (level: 88)
                public static final int LAST_CENTURY = 19;
                // [T-Up#INFO][CSUTLDWY.cpy, LINE #12] WS-EDIT-DATE-YY (level: 25)
                private @Getter @Builder.Default String wsEditDateYy = StringUtils
                        .repeat(' ', 2);

                public int getWsEditDateYyN() {
                    try {
                        return (int) DataConverter.convZonedStringToLong(
                                getWsEditDateYy(), 2);
                    } catch (NumberFormatException exception) {
                        exception.printStackTrace();
                        return 0;
                    }
                }

                public void setWsEditDateYyN(int source) {
                    String temp1 = DataConverter.convZonedLongToString(source,
                            2);
                    setWsEditDateYy(temp1);
                }

                public void setWsEditDateCc(String source) {
                    wsEditDateCc = StringUtils.truncate(
                            StringUtils.rightPad(source, 2), 2);
                }

                public void setWsEditDateYy(String source) {
                    wsEditDateYy = StringUtils.truncate(
                            StringUtils.rightPad(source, 2), 2);
                }

                public static CoactupcWsEditDateCcyy createDefaultValueInstance() {
                    return new CoactupcWsEditDateCcyy.builder().build();
                }

                public void set(String source) {
                    source = StringUtils.truncate(
                            StringUtils.rightPad(source, 4), 4);
                    wsEditDateCc = source.substring(0, 2);
                    wsEditDateYy = source.substring(2, 4);
                }

                public String get() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(wsEditDateCc);
                    sb.append(wsEditDateYy);
                    return sb.toString();
                }

                @Override
                public String toString() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(getWsEditDateCc());
                    sb.append(getWsEditDateYy());
                    return sb.toString();
                }
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsCurrentDate {
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #40] WS-CURRENT-DATE-YYYYMMDD (level: 20)
            private @Getter @Builder.Default String wsCurrentDateYyyymmdd = StringUtils
                    .repeat(' ', 8);

            public int getWsCurrentDateYyyymmddN() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsCurrentDateYyyymmdd(), 8);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsCurrentDateYyyymmddN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 8);
                setWsCurrentDateYyyymmdd(temp1);
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #43] WS-CURRENT-DATE-BINARY (level: 20)
            private @Getter @Setter int wsCurrentDateBinary;

            public void setWsCurrentDateYyyymmdd(String source) {
                wsCurrentDateYyyymmdd = StringUtils.truncate(
                        StringUtils.rightPad(source, 8), 8);
            }

            public static CoactupcWsCurrentDate createDefaultValueInstance() {
                return new CoactupcWsCurrentDate.builder().build();
            }

            public void set(String source) {
                ByteBuffer tempByteBuffer1;
                source = StringUtils.truncate(StringUtils.rightPad(source, 12),
                        12);
                wsCurrentDateYyyymmdd = source.substring(0, 8);
                try {
                    tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                    tempByteBuffer1.put(source.substring(8, 12).getBytes(
                            StandardCharsets.ISO_8859_1));
                    tempByteBuffer1.flip();
                    wsCurrentDateBinary = tempByteBuffer1.getInt();
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    wsCurrentDateBinary = 0;
                }
            }

            public String get() {
                ByteBuffer tempByteBuffer1;
                StringBuilder sb = new StringBuilder();
                sb.append(wsCurrentDateYyyymmdd);
                tempByteBuffer1 = ByteBuffer.allocate(Integer.BYTES);
                tempByteBuffer1.putInt(wsCurrentDateBinary);
                tempByteBuffer1.flip();
                sb.append(StandardCharsets.ISO_8859_1.decode(tempByteBuffer1)
                        .toString());
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsCurrentDateYyyymmdd());
                sb.append(String.valueOf(getWsCurrentDateBinary()));
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditDateFlgs {
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #45] WS-EDIT-DATE-IS-VALID (level: 88)
            public static final String WS_EDIT_DATE_IS_VALID = StringUtils
                    .repeat((char) 0x00, 3);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #46] WS-EDIT-DATE-IS-INVALID (level: 88)
            public static final String WS_EDIT_DATE_IS_INVALID = "000";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #47] WS-EDIT-YEAR-FLG (level: 20)
            private @Getter @Builder.Default String wsEditYearFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #48] FLG-YEAR-ISVALID (level: 88)
            public static final String FLG_YEAR_ISVALID = StringUtils.repeat(
                    (char) 0x00, 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #49] FLG-YEAR-NOT-OK (level: 88)
            public static final String FLG_YEAR_NOT_OK = "0";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #50] FLG-YEAR-BLANK (level: 88)
            public static final String FLG_YEAR_BLANK = "B";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #51] WS-EDIT-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditMonth = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #52] FLG-MONTH-ISVALID (level: 88)
            public static final String FLG_MONTH_ISVALID = StringUtils.repeat(
                    (char) 0x00, 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #53] FLG-MONTH-NOT-OK (level: 88)
            public static final String FLG_MONTH_NOT_OK = "0";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #54] FLG-MONTH-BLANK (level: 88)
            public static final String FLG_MONTH_BLANK = "B";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #55] WS-EDIT-DAY (level: 20)
            private @Getter @Builder.Default String wsEditDay = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #56] FLG-DAY-ISVALID (level: 88)
            public static final String FLG_DAY_ISVALID = StringUtils.repeat(
                    (char) 0x00, 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #57] FLG-DAY-NOT-OK (level: 88)
            public static final String FLG_DAY_NOT_OK = "0";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #58] FLG-DAY-BLANK (level: 88)
            public static final String FLG_DAY_BLANK = "B";

            public void setWsEditYearFlg(String source) {
                wsEditYearFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditMonth(String source) {
                wsEditMonth = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditDay(String source) {
                wsEditDay = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditDateFlgs createDefaultValueInstance() {
                return new CoactupcWsEditDateFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditYearFlg = source.substring(0, 1);
                wsEditMonth = source.substring(1, 2);
                wsEditDay = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditYearFlg);
                sb.append(wsEditMonth);
                sb.append(wsEditDay);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditYearFlg());
                sb.append(getWsEditMonth());
                sb.append(getWsEditDay());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsDateValidationResult {
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #62] WS-SEVERITY (level: 20)
            private @Getter @Builder.Default String wsSeverity = StringUtils
                    .repeat(' ', 4);

            public int getWsSeverityN() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsSeverity(), 4);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsSeverityN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 4);
                setWsSeverity(temp1);
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #65] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER5 = "Mesg Code:"
                    + StringUtils.repeat(' ', 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #67] WS-MSG-NO (level: 20)
            private @Getter @Builder.Default String wsMsgNo = StringUtils
                    .repeat(' ', 4);

            public int getWsMsgNoN() {
                try {
                    return (int) DataConverter.convZonedStringToLong(
                            getWsMsgNo(), 4);
                } catch (NumberFormatException exception) {
                    exception.printStackTrace();
                    return 0;
                }
            }

            public void setWsMsgNoN(int source) {
                String temp1 = DataConverter.convZonedLongToString(source, 4);
                setWsMsgNo(temp1);
            }

            // [T-Up#INFO][CSUTLDWY.cpy, LINE #70] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER6 = " ";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #72] WS-RESULT (level: 20)
            private @Getter @Builder.Default String wsResult = StringUtils
                    .repeat(' ', 15);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #73] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER7 = " ";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #75] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER8 = "TstDate:"
                    + StringUtils.repeat(' ', 1);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #77] WS-DATE (level: 20)
            private @Getter @Builder.Default String wsDate = StringUtils
                    .repeat(' ', 10);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #78] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER9 = " ";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #80] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER10 = "Mask used:";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #82] WS-DATE-FMT (level: 20)
            private @Getter @Builder.Default String wsDateFmt = StringUtils
                    .repeat(' ', 10);
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #83] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER11 = " ";
            // [T-Up#INFO][CSUTLDWY.cpy, LINE #85] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER12 = StringUtils
                    .repeat(' ', 3);

            public void setWsSeverity(String source) {
                wsSeverity = StringUtils.truncate(
                        StringUtils.rightPad(source, 4), 4);
            }

            public void setOFFILLER5(String source) {
                OFFILLER5 = StringUtils.truncate(
                        StringUtils.rightPad(source, 11), 11);
            }

            public void setWsMsgNo(String source) {
                wsMsgNo = StringUtils.truncate(StringUtils.rightPad(source, 4),
                        4);
            }

            public void setOFFILLER6(String source) {
                OFFILLER6 = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsResult(String source) {
                wsResult = StringUtils.truncate(
                        StringUtils.rightPad(source, 15), 15);
            }

            public void setOFFILLER7(String source) {
                OFFILLER7 = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setOFFILLER8(String source) {
                OFFILLER8 = StringUtils.truncate(
                        StringUtils.rightPad(source, 9), 9);
            }

            public void setWsDate(String source) {
                wsDate = StringUtils.truncate(StringUtils.rightPad(source, 10),
                        10);
            }

            public void setOFFILLER9(String source) {
                OFFILLER9 = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setOFFILLER10(String source) {
                OFFILLER10 = StringUtils.truncate(
                        StringUtils.rightPad(source, 10), 10);
            }

            public void setWsDateFmt(String source) {
                wsDateFmt = StringUtils.truncate(
                        StringUtils.rightPad(source, 10), 10);
            }

            public void setOFFILLER11(String source) {
                OFFILLER11 = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setOFFILLER12(String source) {
                OFFILLER12 = StringUtils.truncate(
                        StringUtils.rightPad(source, 3), 3);
            }

            public static CoactupcWsDateValidationResult createDefaultValueInstance() {
                return new CoactupcWsDateValidationResult.builder()
                        .OFFILLER5(StringUtils.repeat(' ', 11))
                        .OFFILLER6(StringUtils.repeat(' ', 1))
                        .OFFILLER7(StringUtils.repeat(' ', 1))
                        .OFFILLER8(StringUtils.repeat(' ', 9))
                        .OFFILLER9(StringUtils.repeat(' ', 1))
                        .OFFILLER10(StringUtils.repeat(' ', 10))
                        .OFFILLER11(StringUtils.repeat(' ', 1))
                        .OFFILLER12(StringUtils.repeat(' ', 3)).build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 80),
                        80);
                wsSeverity = source.substring(0, 4);
                OFFILLER5 = source.substring(4, 15);
                wsMsgNo = source.substring(15, 19);
                OFFILLER6 = source.substring(19, 20);
                wsResult = source.substring(20, 35);
                OFFILLER7 = source.substring(35, 36);
                OFFILLER8 = source.substring(36, 45);
                wsDate = source.substring(45, 55);
                OFFILLER9 = source.substring(55, 56);
                OFFILLER10 = source.substring(56, 66);
                wsDateFmt = source.substring(66, 76);
                OFFILLER11 = source.substring(76, 77);
                OFFILLER12 = source.substring(77, 80);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsSeverity);
                sb.append(OFFILLER5);
                sb.append(wsMsgNo);
                sb.append(OFFILLER6);
                sb.append(wsResult);
                sb.append(OFFILLER7);
                sb.append(OFFILLER8);
                sb.append(wsDate);
                sb.append(OFFILLER9);
                sb.append(OFFILLER10);
                sb.append(wsDateFmt);
                sb.append(OFFILLER11);
                sb.append(OFFILLER12);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsSeverity());
                sb.append(OFFILLER5);
                sb.append(getWsMsgNo());
                sb.append(OFFILLER6);
                sb.append(getWsResult());
                sb.append(OFFILLER7);
                sb.append(OFFILLER8);
                sb.append(getWsDate());
                sb.append(OFFILLER9);
                sb.append(OFFILLER10);
                sb.append(getWsDateFmt());
                sb.append(OFFILLER11);
                sb.append(OFFILLER12);
                return sb.toString();
            }
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsNonKeyFlags {
        // [T-Up#INFO][COACTUPC.cbl, LINE #195] WS-EDIT-ACCT-STATUS (level: 10)
        private @Getter @Builder.Default String wsEditAcctStatus = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #196] FLG-ACCT-STATUS-ISVALID (level: 88)
        public static final String FLG_ACCT_STATUS_ISVALID_1 = "Y";
        public static final String FLG_ACCT_STATUS_ISVALID_2 = "N";
        // [T-Up#INFO][COACTUPC.cbl, LINE #197] FLG-ACCT-STATUS-NOT-OK (level: 88)
        public static final String FLG_ACCT_STATUS_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #198] FLG-ACCT-STATUS-BLANK (level: 88)
        public static final String FLG_ACCT_STATUS_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #199] WS-EDIT-CREDIT-LIMIT (level: 10)
        private @Getter @Builder.Default String wsEditCreditLimit = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #200] FLG-CRED-LIMIT-ISVALID (level: 88)
        public static final String FLG_CRED_LIMIT_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #201] FLG-CRED-LIMIT-NOT-OK (level: 88)
        public static final String FLG_CRED_LIMIT_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #202] FLG-CRED-LIMIT-BLANK (level: 88)
        public static final String FLG_CRED_LIMIT_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #203] WS-EDIT-CASH-CREDIT-LIMIT (level: 10)
        private @Getter @Builder.Default String wsEditCashCreditLimit = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #204] FLG-CASH-CREDIT-LIMIT-ISVALID (level: 88)
        public static final String FLG_CASH_CREDIT_LIMIT_ISVALID = StringUtils
                .repeat((char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #205] FLG-CASH-CREDIT-LIMIT-NOT-OK (level: 88)
        public static final String FLG_CASH_CREDIT_LIMIT_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #206] FLG-CASH-CREDIT-LIMIT-BLANK (level: 88)
        public static final String FLG_CASH_CREDIT_LIMIT_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #207] WS-EDIT-CURR-BAL (level: 10)
        private @Getter @Builder.Default String wsEditCurrBal = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #208] FLG-CURR-BAL-ISVALID (level: 88)
        public static final String FLG_CURR_BAL_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #209] FLG-CURR-BAL-NOT-OK (level: 88)
        public static final String FLG_CURR_BAL_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #210] FLG-CURR-BAL-BLANK (level: 88)
        public static final String FLG_CURR_BAL_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #211] WS-EDIT-CURR-CYC-CREDIT (level: 10)
        private @Getter @Builder.Default String wsEditCurrCycCredit = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #212] FLG-CURR-CYC-CREDIT-ISVALID (level: 88)
        public static final String FLG_CURR_CYC_CREDIT_ISVALID = StringUtils
                .repeat((char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #213] FLG-CURR-CYC-CREDIT-NOT-OK (level: 88)
        public static final String FLG_CURR_CYC_CREDIT_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #214] FLG-CURR-CYC-CREDIT-BLANK (level: 88)
        public static final String FLG_CURR_CYC_CREDIT_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #215] WS-EDIT-CURR-CYC-DEBIT (level: 10)
        private @Getter @Builder.Default String wsEditCurrCycDebit = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #216] FLG-CURR-CYC-DEBIT-ISVALID (level: 88)
        public static final String FLG_CURR_CYC_DEBIT_ISVALID = StringUtils
                .repeat((char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #217] FLG-CURR-CYC-DEBIT-NOT-OK (level: 88)
        public static final String FLG_CURR_CYC_DEBIT_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #218] FLG-CURR-CYC-DEBIT-BLANK (level: 88)
        public static final String FLG_CURR_CYC_DEBIT_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #219] WS-EDIT-DT-OF-BIRTH-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditDtOfBirthFlgs wsEditDtOfBirthFlgs = new CoactupcWsEditDtOfBirthFlgs();
        // [T-Up#INFO][COACTUPC.cbl, LINE #234] WS-EDIT-FICO-SCORE-FLGS (level: 10)
        private @Getter @Builder.Default String wsEditFicoScoreFlgs = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #235] FLG-FICO-SCORE-ISVALID (level: 88)
        public static final String FLG_FICO_SCORE_ISVALID = StringUtils.repeat(
                (char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #236] FLG-FICO-SCORE-NOT-OK (level: 88)
        public static final String FLG_FICO_SCORE_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #237] FLG-FICO-SCORE-BLANK (level: 88)
        public static final String FLG_FICO_SCORE_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #238] WS-EDIT-OPEN-DATE-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditOpenDateFlgs wsEditOpenDateFlgs = new CoactupcWsEditOpenDateFlgs();
        // [T-Up#INFO][COACTUPC.cbl, LINE #252] WS-EXPIRY-DATE-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsExpiryDateFlgs wsExpiryDateFlgs = new CoactupcWsExpiryDateFlgs();
        // [T-Up#INFO][COACTUPC.cbl, LINE #266] WS-EDIT-REISSUE-DATE-FLGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditReissueDateFlgs wsEditReissueDateFlgs = new CoactupcWsEditReissueDateFlgs();
        // [T-Up#INFO][COACTUPC.cbl, LINE #280] WS-EDIT-NAME-FLAGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditNameFlags wsEditNameFlags = new CoactupcWsEditNameFlags();
        // [T-Up#INFO][COACTUPC.cbl, LINE #293] WS-EDIT-ADDRESS-FLAGS (level: 10)
        private @Getter @Setter @Builder.Default CoactupcWsEditAddressFlags wsEditAddressFlags = new CoactupcWsEditAddressFlags();
        // [T-Up#INFO][COACTUPC.cbl, LINE #348] WS-EFT-ACCOUNT-ID-FLGS (level: 10)
        private @Getter @Builder.Default String wsEftAccountIdFlgs = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #349] FLG-EFT-ACCOUNT-ID-ISVALID (level: 88)
        public static final String FLG_EFT_ACCOUNT_ID_ISVALID = StringUtils
                .repeat((char) 0x00, 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #350] FLG-EFT-ACCOUNT-ID-NOT-OK (level: 88)
        public static final String FLG_EFT_ACCOUNT_ID_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #351] FLG-EFT-ACCOUNT-ID-BLANK (level: 88)
        public static final String FLG_EFT_ACCOUNT_ID_BLANK = "B";
        // [T-Up#INFO][COACTUPC.cbl, LINE #352] WS-EDIT-PRI-CARDHOLDER (level: 10)
        private @Getter @Builder.Default String wsEditPriCardholder = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #353] FLG-PRI-CARDHOLDER-ISVALID (level: 88)
        public static final String FLG_PRI_CARDHOLDER_ISVALID_1 = "Y";
        public static final String FLG_PRI_CARDHOLDER_ISVALID_2 = "N";
        // [T-Up#INFO][COACTUPC.cbl, LINE #354] FLG-PRI-CARDHOLDER-NOT-OK (level: 88)
        public static final String FLG_PRI_CARDHOLDER_NOT_OK = "0";
        // [T-Up#INFO][COACTUPC.cbl, LINE #355] FLG-PRI-CARDHOLDER-BLANK (level: 88)
        public static final String FLG_PRI_CARDHOLDER_BLANK = "B";

        public void setWsEditAcctStatus(String source) {
            wsEditAcctStatus = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditCreditLimit(String source) {
            wsEditCreditLimit = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditCashCreditLimit(String source) {
            wsEditCashCreditLimit = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditCurrBal(String source) {
            wsEditCurrBal = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditCurrCycCredit(String source) {
            wsEditCurrCycCredit = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditCurrCycDebit(String source) {
            wsEditCurrCycDebit = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditFicoScoreFlgs(String source) {
            wsEditFicoScoreFlgs = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEftAccountIdFlgs(String source) {
            wsEftAccountIdFlgs = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsEditPriCardholder(String source) {
            wsEditPriCardholder = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public static CoactupcWsNonKeyFlags createDefaultValueInstance() {
            return new CoactupcWsNonKeyFlags.builder()
                    .wsEditDtOfBirthFlgs(
                            CoactupcWsEditDtOfBirthFlgs
                                    .createDefaultValueInstance())
                    .wsEditOpenDateFlgs(
                            CoactupcWsEditOpenDateFlgs
                                    .createDefaultValueInstance())
                    .wsExpiryDateFlgs(
                            CoactupcWsExpiryDateFlgs
                                    .createDefaultValueInstance())
                    .wsEditReissueDateFlgs(
                            CoactupcWsEditReissueDateFlgs
                                    .createDefaultValueInstance())
                    .wsEditNameFlags(
                            CoactupcWsEditNameFlags
                                    .createDefaultValueInstance())
                    .wsEditAddressFlags(
                            CoactupcWsEditAddressFlags
                                    .createDefaultValueInstance()).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 36), 36);
            wsEditAcctStatus = source.substring(0, 1);
            wsEditCreditLimit = source.substring(1, 2);
            wsEditCashCreditLimit = source.substring(2, 3);
            wsEditCurrBal = source.substring(3, 4);
            wsEditCurrCycCredit = source.substring(4, 5);
            wsEditCurrCycDebit = source.substring(5, 6);
            wsEditDtOfBirthFlgs.set(source.substring(6, 9));
            wsEditFicoScoreFlgs = source.substring(9, 10);
            wsEditOpenDateFlgs.set(source.substring(10, 13));
            wsExpiryDateFlgs.set(source.substring(13, 16));
            wsEditReissueDateFlgs.set(source.substring(16, 19));
            wsEditNameFlags.set(source.substring(19, 22));
            wsEditAddressFlags.set(source.substring(22, 34));
            wsEftAccountIdFlgs = source.substring(34, 35);
            wsEditPriCardholder = source.substring(35, 36);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsEditAcctStatus);
            sb.append(wsEditCreditLimit);
            sb.append(wsEditCashCreditLimit);
            sb.append(wsEditCurrBal);
            sb.append(wsEditCurrCycCredit);
            sb.append(wsEditCurrCycDebit);
            sb.append(wsEditDtOfBirthFlgs.get());
            sb.append(wsEditFicoScoreFlgs);
            sb.append(wsEditOpenDateFlgs.get());
            sb.append(wsExpiryDateFlgs.get());
            sb.append(wsEditReissueDateFlgs.get());
            sb.append(wsEditNameFlags.get());
            sb.append(wsEditAddressFlags.get());
            sb.append(wsEftAccountIdFlgs);
            sb.append(wsEditPriCardholder);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsEditAcctStatus());
            sb.append(getWsEditCreditLimit());
            sb.append(getWsEditCashCreditLimit());
            sb.append(getWsEditCurrBal());
            sb.append(getWsEditCurrCycCredit());
            sb.append(getWsEditCurrCycDebit());
            sb.append(getWsEditDtOfBirthFlgs().toString());
            sb.append(getWsEditFicoScoreFlgs());
            sb.append(getWsEditOpenDateFlgs().toString());
            sb.append(getWsExpiryDateFlgs().toString());
            sb.append(getWsEditReissueDateFlgs().toString());
            sb.append(getWsEditNameFlags().toString());
            sb.append(getWsEditAddressFlags().toString());
            sb.append(getWsEftAccountIdFlgs());
            sb.append(getWsEditPriCardholder());
            return sb.toString();
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditDtOfBirthFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #220] WS-EDIT-DT-OF-BIRTH-INVALID (level: 88)
            public static final String WS_EDIT_DT_OF_BIRTH_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #221] WS-EDIT-DT-OF-BIRTH-ISVALID (level: 88)
            public static final String WS_EDIT_DT_OF_BIRTH_ISVALID = StringUtils
                    .repeat((char) 0x00, 3);
            // [T-Up#INFO][COACTUPC.cbl, LINE #222] WS-EDIT-DT-OF-BIRTH-YEAR-FLG (level: 20)
            private @Getter @Builder.Default String wsEditDtOfBirthYearFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #223] FLG-DT-OF-BIRTH-YEAR-ISVALID (level: 88)
            public static final String FLG_DT_OF_BIRTH_YEAR_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #224] FLG-DT-OF-BIRTH-YEAR-NOT-OK (level: 88)
            public static final String FLG_DT_OF_BIRTH_YEAR_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #225] FLG-DT-OF-BIRTH-YEAR-BLANK (level: 88)
            public static final String FLG_DT_OF_BIRTH_YEAR_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #226] WS-EDIT-DT-OF-BIRTH-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditDtOfBirthMonth = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #227] FLG-DT-OF-BIRTH-MONTH-ISVALID (level: 88)
            public static final String FLG_DT_OF_BIRTH_MONTH_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #228] FLG-DT-OF-BIRTH-MONTH-NOT-OK (level: 88)
            public static final String FLG_DT_OF_BIRTH_MONTH_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #229] FLG-DT-OF-BIRTH-MONTH-BLANK (level: 88)
            public static final String FLG_DT_OF_BIRTH_MONTH_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #230] WS-EDIT-DT-OF-BIRTH-DAY (level: 20)
            private @Getter @Builder.Default String wsEditDtOfBirthDay = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #231] FLG-DT-OF-BIRTH-DAY-ISVALID (level: 88)
            public static final String FLG_DT_OF_BIRTH_DAY_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #232] FLG-DT-OF-BIRTH-DAY-NOT-OK (level: 88)
            public static final String FLG_DT_OF_BIRTH_DAY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #233] FLG-DT-OF-BIRTH-DAY-BLANK (level: 88)
            public static final String FLG_DT_OF_BIRTH_DAY_BLANK = "B";

            public void setWsEditDtOfBirthYearFlg(String source) {
                wsEditDtOfBirthYearFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditDtOfBirthMonth(String source) {
                wsEditDtOfBirthMonth = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditDtOfBirthDay(String source) {
                wsEditDtOfBirthDay = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditDtOfBirthFlgs createDefaultValueInstance() {
                return new CoactupcWsEditDtOfBirthFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditDtOfBirthYearFlg = source.substring(0, 1);
                wsEditDtOfBirthMonth = source.substring(1, 2);
                wsEditDtOfBirthDay = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditDtOfBirthYearFlg);
                sb.append(wsEditDtOfBirthMonth);
                sb.append(wsEditDtOfBirthDay);
                return sb.toString();
            }

            public void set(
                    CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateFlgs source) {
                wsEditDtOfBirthYearFlg = source.getWsEditYearFlg();
                wsEditDtOfBirthMonth = source.getWsEditMonth();
                wsEditDtOfBirthDay = source.getWsEditDay();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditDtOfBirthYearFlg());
                sb.append(getWsEditDtOfBirthMonth());
                sb.append(getWsEditDtOfBirthDay());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditOpenDateFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #239] WS-EDIT-OPEN-DATE-IS-INVALID (level: 88)
            public static final String WS_EDIT_OPEN_DATE_IS_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #240] WS-EDIT-OPEN-YEAR-FLG (level: 20)
            private @Getter @Builder.Default String wsEditOpenYearFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #241] FLG-OPEN-YEAR-ISVALID (level: 88)
            public static final String FLG_OPEN_YEAR_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #242] FLG-OPEN-YEAR-NOT-OK (level: 88)
            public static final String FLG_OPEN_YEAR_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #243] FLG-OPEN-YEAR-BLANK (level: 88)
            public static final String FLG_OPEN_YEAR_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #244] WS-EDIT-OPEN-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditOpenMonth = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #245] FLG-OPEN-MONTH-ISVALID (level: 88)
            public static final String FLG_OPEN_MONTH_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #246] FLG-OPEN-MONTH-NOT-OK (level: 88)
            public static final String FLG_OPEN_MONTH_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #247] FLG-OPEN-MONTH-BLANK (level: 88)
            public static final String FLG_OPEN_MONTH_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #248] WS-EDIT-OPEN-DAY (level: 20)
            private @Getter @Builder.Default String wsEditOpenDay = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #249] FLG-OPEN-DAY-ISVALID (level: 88)
            public static final String FLG_OPEN_DAY_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #250] FLG-OPEN-DAY-NOT-OK (level: 88)
            public static final String FLG_OPEN_DAY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #251] FLG-OPEN-DAY-BLANK (level: 88)
            public static final String FLG_OPEN_DAY_BLANK = "B";

            public void setWsEditOpenYearFlg(String source) {
                wsEditOpenYearFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditOpenMonth(String source) {
                wsEditOpenMonth = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditOpenDay(String source) {
                wsEditOpenDay = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditOpenDateFlgs createDefaultValueInstance() {
                return new CoactupcWsEditOpenDateFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditOpenYearFlg = source.substring(0, 1);
                wsEditOpenMonth = source.substring(1, 2);
                wsEditOpenDay = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditOpenYearFlg);
                sb.append(wsEditOpenMonth);
                sb.append(wsEditOpenDay);
                return sb.toString();
            }

            public void set(
                    CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateFlgs source) {
                wsEditOpenYearFlg = source.getWsEditYearFlg();
                wsEditOpenMonth = source.getWsEditMonth();
                wsEditOpenDay = source.getWsEditDay();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditOpenYearFlg());
                sb.append(getWsEditOpenMonth());
                sb.append(getWsEditOpenDay());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsExpiryDateFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #253] WS-EDIT-EXPIRY-IS-INVALID (level: 88)
            public static final String WS_EDIT_EXPIRY_IS_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #254] WS-EDIT-EXPIRY-YEAR-FLG (level: 20)
            private @Getter @Builder.Default String wsEditExpiryYearFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #255] FLG-EXPIRY-YEAR-ISVALID (level: 88)
            public static final String FLG_EXPIRY_YEAR_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #256] FLG-EXPIRY-YEAR-NOT-OK (level: 88)
            public static final String FLG_EXPIRY_YEAR_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #257] FLG-EXPIRY-YEAR-BLANK (level: 88)
            public static final String FLG_EXPIRY_YEAR_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #258] WS-EDIT-EXPIRY-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditExpiryMonth = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #259] FLG-EXPIRY-MONTH-ISVALID (level: 88)
            public static final String FLG_EXPIRY_MONTH_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #260] FLG-EXPIRY-MONTH-NOT-OK (level: 88)
            public static final String FLG_EXPIRY_MONTH_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #261] FLG-EXPIRY-MONTH-BLANK (level: 88)
            public static final String FLG_EXPIRY_MONTH_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #262] WS-EDIT-EXPIRY-DAY (level: 20)
            private @Getter @Builder.Default String wsEditExpiryDay = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #263] FLG-EXPIRY-DAY-ISVALID (level: 88)
            public static final String FLG_EXPIRY_DAY_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #264] FLG-EXPIRY-DAY-NOT-OK (level: 88)
            public static final String FLG_EXPIRY_DAY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #265] FLG-EXPIRY-DAY-BLANK (level: 88)
            public static final String FLG_EXPIRY_DAY_BLANK = "B";

            public void setWsEditExpiryYearFlg(String source) {
                wsEditExpiryYearFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditExpiryMonth(String source) {
                wsEditExpiryMonth = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditExpiryDay(String source) {
                wsEditExpiryDay = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsExpiryDateFlgs createDefaultValueInstance() {
                return new CoactupcWsExpiryDateFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditExpiryYearFlg = source.substring(0, 1);
                wsEditExpiryMonth = source.substring(1, 2);
                wsEditExpiryDay = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditExpiryYearFlg);
                sb.append(wsEditExpiryMonth);
                sb.append(wsEditExpiryDay);
                return sb.toString();
            }

            public void set(
                    CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateFlgs source) {
                wsEditExpiryYearFlg = source.getWsEditYearFlg();
                wsEditExpiryMonth = source.getWsEditMonth();
                wsEditExpiryDay = source.getWsEditDay();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditExpiryYearFlg());
                sb.append(getWsEditExpiryMonth());
                sb.append(getWsEditExpiryDay());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditReissueDateFlgs {
            // [T-Up#INFO][COACTUPC.cbl, LINE #267] WS-EDIT-REISSUE-DATE-INVALID (level: 88)
            public static final String WS_EDIT_REISSUE_DATE_INVALID = "000";
            // [T-Up#INFO][COACTUPC.cbl, LINE #268] WS-EDIT-REISSUE-YEAR-FLG (level: 20)
            private @Getter @Builder.Default String wsEditReissueYearFlg = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #269] FLG-REISSUE-YEAR-ISVALID (level: 88)
            public static final String FLG_REISSUE_YEAR_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #270] FLG-REISSUE-YEAR-NOT-OK (level: 88)
            public static final String FLG_REISSUE_YEAR_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #271] FLG-REISSUE-YEAR-BLANK (level: 88)
            public static final String FLG_REISSUE_YEAR_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #272] WS-EDIT-REISSUE-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditReissueMonth = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #273] FLG-REISSUE-MONTH-ISVALID (level: 88)
            public static final String FLG_REISSUE_MONTH_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #274] FLG-REISSUE-MONTH-NOT-OK (level: 88)
            public static final String FLG_REISSUE_MONTH_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #275] FLG-REISSUE-MONTH-BLANK (level: 88)
            public static final String FLG_REISSUE_MONTH_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #276] WS-EDIT-REISSUE-DAY (level: 20)
            private @Getter @Builder.Default String wsEditReissueDay = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #277] FLG-REISSUE-DAY-ISVALID (level: 88)
            public static final String FLG_REISSUE_DAY_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #278] FLG-REISSUE-DAY-NOT-OK (level: 88)
            public static final String FLG_REISSUE_DAY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #279] FLG-REISSUE-DAY-BLANK (level: 88)
            public static final String FLG_REISSUE_DAY_BLANK = "B";

            public void setWsEditReissueYearFlg(String source) {
                wsEditReissueYearFlg = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditReissueMonth(String source) {
                wsEditReissueMonth = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditReissueDay(String source) {
                wsEditReissueDay = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditReissueDateFlgs createDefaultValueInstance() {
                return new CoactupcWsEditReissueDateFlgs.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditReissueYearFlg = source.substring(0, 1);
                wsEditReissueMonth = source.substring(1, 2);
                wsEditReissueDay = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditReissueYearFlg);
                sb.append(wsEditReissueMonth);
                sb.append(wsEditReissueDay);
                return sb.toString();
            }

            public void set(
                    CoactupcWsMiscStorage.CoactupcWsCalculationVars.CoactupcWsEditDateFlgs source) {
                wsEditReissueYearFlg = source.getWsEditYearFlg();
                wsEditReissueMonth = source.getWsEditMonth();
                wsEditReissueDay = source.getWsEditDay();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditReissueYearFlg());
                sb.append(getWsEditReissueMonth());
                sb.append(getWsEditReissueDay());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditNameFlags {
            // [T-Up#INFO][COACTUPC.cbl, LINE #281] WS-EDIT-FIRST-NAME-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditFirstNameFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #282] FLG-FIRST-NAME-ISVALID (level: 88)
            public static final String FLG_FIRST_NAME_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #283] FLG-FIRST-NAME-NOT-OK (level: 88)
            public static final String FLG_FIRST_NAME_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #284] FLG-FIRST-NAME-BLANK (level: 88)
            public static final String FLG_FIRST_NAME_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #285] WS-EDIT-MIDDLE-NAME-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditMiddleNameFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #286] FLG-MIDDLE-NAME-ISVALID (level: 88)
            public static final String FLG_MIDDLE_NAME_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #287] FLG-MIDDLE-NAME-NOT-OK (level: 88)
            public static final String FLG_MIDDLE_NAME_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #288] FLG-MIDDLE-NAME-BLANK (level: 88)
            public static final String FLG_MIDDLE_NAME_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #289] WS-EDIT-LAST-NAME-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditLastNameFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #290] FLG-LAST-NAME-ISVALID (level: 88)
            public static final String FLG_LAST_NAME_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #291] FLG-LAST-NAME-NOT-OK (level: 88)
            public static final String FLG_LAST_NAME_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #292] FLG-LAST-NAME-BLANK (level: 88)
            public static final String FLG_LAST_NAME_BLANK = "B";

            public void setWsEditFirstNameFlgs(String source) {
                wsEditFirstNameFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditMiddleNameFlgs(String source) {
                wsEditMiddleNameFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditLastNameFlgs(String source) {
                wsEditLastNameFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditNameFlags createDefaultValueInstance() {
                return new CoactupcWsEditNameFlags.builder().build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 3),
                        3);
                wsEditFirstNameFlgs = source.substring(0, 1);
                wsEditMiddleNameFlgs = source.substring(1, 2);
                wsEditLastNameFlgs = source.substring(2, 3);
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditFirstNameFlgs);
                sb.append(wsEditMiddleNameFlgs);
                sb.append(wsEditLastNameFlgs);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditFirstNameFlgs());
                sb.append(getWsEditMiddleNameFlgs());
                sb.append(getWsEditLastNameFlgs());
                return sb.toString();
            }
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditAddressFlags {
            // [T-Up#INFO][COACTUPC.cbl, LINE #294] WS-EDIT-ADDRESS-LINE-1-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditAddressLine1Flgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #295] FLG-ADDRESS-LINE-1-ISVALID (level: 88)
            public static final String FLG_ADDRESS_LINE_1_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #296] FLG-ADDRESS-LINE-1-NOT-OK (level: 88)
            public static final String FLG_ADDRESS_LINE_1_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #297] FLG-ADDRESS-LINE-1-BLANK (level: 88)
            public static final String FLG_ADDRESS_LINE_1_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #298] WS-EDIT-ADDRESS-LINE-2-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditAddressLine2Flgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #299] FLG-ADDRESS-LINE-2-ISVALID (level: 88)
            public static final String FLG_ADDRESS_LINE_2_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #300] FLG-ADDRESS-LINE-2-NOT-OK (level: 88)
            public static final String FLG_ADDRESS_LINE_2_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #301] FLG-ADDRESS-LINE-2-BLANK (level: 88)
            public static final String FLG_ADDRESS_LINE_2_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #302] WS-EDIT-CITY-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditCityFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #303] FLG-CITY-ISVALID (level: 88)
            public static final String FLG_CITY_ISVALID = StringUtils.repeat(
                    (char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #304] FLG-CITY-NOT-OK (level: 88)
            public static final String FLG_CITY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #305] FLG-CITY-BLANK (level: 88)
            public static final String FLG_CITY_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #306] WS-EDIT-STATE-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditStateFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #307] FLG-STATE-ISVALID (level: 88)
            public static final String FLG_STATE_ISVALID = StringUtils.repeat(
                    (char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #308] FLG-STATE-NOT-OK (level: 88)
            public static final String FLG_STATE_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #309] FLG-STATE-BLANK (level: 88)
            public static final String FLG_STATE_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #310] WS-EDIT-ZIPCODE-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditZipcodeFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #311] FLG-ZIPCODE-ISVALID (level: 88)
            public static final String FLG_ZIPCODE_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #312] FLG-ZIPCODE-NOT-OK (level: 88)
            public static final String FLG_ZIPCODE_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #313] FLG-ZIPCODE-BLANK (level: 88)
            public static final String FLG_ZIPCODE_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #314] WS-EDIT-COUNTRY-FLGS (level: 20)
            private @Getter @Builder.Default String wsEditCountryFlgs = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #315] FLG-COUNTRY-ISVALID (level: 88)
            public static final String FLG_COUNTRY_ISVALID = StringUtils
                    .repeat((char) 0x00, 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #316] FLG-COUNTRY-NOT-OK (level: 88)
            public static final String FLG_COUNTRY_NOT_OK = "0";
            // [T-Up#INFO][COACTUPC.cbl, LINE #317] FLG-COUNTRY-BLANK (level: 88)
            public static final String FLG_COUNTRY_BLANK = "B";
            // [T-Up#INFO][COACTUPC.cbl, LINE #318] WS-EDIT-PHONE-NUM-1-FLGS (level: 20)
            private @Getter @Setter @Builder.Default CoactupcWsEditPhoneNum1Flgs wsEditPhoneNum1Flgs = new CoactupcWsEditPhoneNum1Flgs();
            // [T-Up#INFO][COACTUPC.cbl, LINE #333] WS-EDIT-PHONE-NUM-2-FLGS (level: 20)
            private @Getter @Setter @Builder.Default CoactupcWsEditPhoneNum2Flgs wsEditPhoneNum2Flgs = new CoactupcWsEditPhoneNum2Flgs();

            public void setWsEditAddressLine1Flgs(String source) {
                wsEditAddressLine1Flgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditAddressLine2Flgs(String source) {
                wsEditAddressLine2Flgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditCityFlgs(String source) {
                wsEditCityFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditStateFlgs(String source) {
                wsEditStateFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditZipcodeFlgs(String source) {
                wsEditZipcodeFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public void setWsEditCountryFlgs(String source) {
                wsEditCountryFlgs = StringUtils.truncate(
                        StringUtils.rightPad(source, 1), 1);
            }

            public static CoactupcWsEditAddressFlags createDefaultValueInstance() {
                return new CoactupcWsEditAddressFlags.builder()
                        .wsEditPhoneNum1Flgs(
                                CoactupcWsEditPhoneNum1Flgs
                                        .createDefaultValueInstance())
                        .wsEditPhoneNum2Flgs(
                                CoactupcWsEditPhoneNum2Flgs
                                        .createDefaultValueInstance()).build();
            }

            public void set(String source) {
                source = StringUtils.truncate(StringUtils.rightPad(source, 12),
                        12);
                wsEditAddressLine1Flgs = source.substring(0, 1);
                wsEditAddressLine2Flgs = source.substring(1, 2);
                wsEditCityFlgs = source.substring(2, 3);
                wsEditStateFlgs = source.substring(3, 4);
                wsEditZipcodeFlgs = source.substring(4, 5);
                wsEditCountryFlgs = source.substring(5, 6);
                wsEditPhoneNum1Flgs.set(source.substring(6, 9));
                wsEditPhoneNum2Flgs.set(source.substring(9, 12));
            }

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditAddressLine1Flgs);
                sb.append(wsEditAddressLine2Flgs);
                sb.append(wsEditCityFlgs);
                sb.append(wsEditStateFlgs);
                sb.append(wsEditZipcodeFlgs);
                sb.append(wsEditCountryFlgs);
                sb.append(wsEditPhoneNum1Flgs.get());
                sb.append(wsEditPhoneNum2Flgs.get());
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(getWsEditAddressLine1Flgs());
                sb.append(getWsEditAddressLine2Flgs());
                sb.append(getWsEditCityFlgs());
                sb.append(getWsEditStateFlgs());
                sb.append(getWsEditZipcodeFlgs());
                sb.append(getWsEditCountryFlgs());
                sb.append(getWsEditPhoneNum1Flgs().toString());
                sb.append(getWsEditPhoneNum2Flgs().toString());
                return sb.toString();
            }

            public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditPhoneNum1Flgs {
                // [T-Up#INFO][COACTUPC.cbl, LINE #319] WS-EDIT-PHONE-NUM-1-IS-INVALID (level: 88)
                public static final String WS_EDIT_PHONE_NUM_1_IS_INVALID = "000";
                // [T-Up#INFO][COACTUPC.cbl, LINE #321] WS-EDIT-PHONE-NUM-1A-FLG (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum1aFlg = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #322] FLG-PHONE-NUM-1A-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_1A_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #323] FLG-PHONE-NUM-1A-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_1A_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #324] FLG-PHONE-NUM-1A-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_1A_BLANK = "B";
                // [T-Up#INFO][COACTUPC.cbl, LINE #325] WS-EDIT-PHONE-NUM-1B (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum1b = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #326] FLG-PHONE-NUM-1B-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_1B_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #327] FLG-PHONE-NUM-1B-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_1B_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #328] FLG-PHONE-NUM-1B-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_1B_BLANK = "B";
                // [T-Up#INFO][COACTUPC.cbl, LINE #329] WS-EDIT-PHONE-NUM-1C (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum1c = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #330] FLG-PHONE-NUM-1C-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_1C_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #331] FLG-PHONE-NUM-1C-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_1C_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #332] FLG-PHONE-NUM-1C-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_1C_BLANK = "B";

                public void setWsEditPhoneNum1aFlg(String source) {
                    wsEditPhoneNum1aFlg = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public void setWsEditPhoneNum1b(String source) {
                    wsEditPhoneNum1b = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public void setWsEditPhoneNum1c(String source) {
                    wsEditPhoneNum1c = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public static CoactupcWsEditPhoneNum1Flgs createDefaultValueInstance() {
                    return new CoactupcWsEditPhoneNum1Flgs.builder().build();
                }

                public void set(String source) {
                    source = StringUtils.truncate(
                            StringUtils.rightPad(source, 3), 3);
                    wsEditPhoneNum1aFlg = source.substring(0, 1);
                    wsEditPhoneNum1b = source.substring(1, 2);
                    wsEditPhoneNum1c = source.substring(2, 3);
                }

                public String get() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(wsEditPhoneNum1aFlg);
                    sb.append(wsEditPhoneNum1b);
                    sb.append(wsEditPhoneNum1c);
                    return sb.toString();
                }

                public void set(
                        CoactupcWsMiscStorage.CoactupcWsGenericEdits.CoactupcWsEditUsPhoneNumFlgs source) {
                    wsEditPhoneNum1aFlg = source.getWsEditUsPhoneaFlg();
                    wsEditPhoneNum1b = source.getWsEditEditUsPhoneb();
                    wsEditPhoneNum1c = source.getWsEditEditPhonec();
                }

                @Override
                public String toString() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(getWsEditPhoneNum1aFlg());
                    sb.append(getWsEditPhoneNum1b());
                    sb.append(getWsEditPhoneNum1c());
                    return sb.toString();
                }
            }

            public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsEditPhoneNum2Flgs {
                // [T-Up#INFO][COACTUPC.cbl, LINE #334] WS-EDIT-PHONE-NUM-2-IS-INVALID (level: 88)
                public static final String WS_EDIT_PHONE_NUM_2_IS_INVALID = "000";
                // [T-Up#INFO][COACTUPC.cbl, LINE #336] WS-EDIT-PHONE-NUM-2A-FLG (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum2aFlg = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #337] FLG-PHONE-NUM-2A-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_2A_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #338] FLG-PHONE-NUM-2A-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_2A_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #339] FLG-PHONE-NUM-2A-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_2A_BLANK = "B";
                // [T-Up#INFO][COACTUPC.cbl, LINE #340] WS-EDIT-PHONE-NUM-2B (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum2b = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #341] FLG-PHONE-NUM-2B-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_2B_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #342] FLG-PHONE-NUM-2B-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_2B_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #343] FLG-PHONE-NUM-2B-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_2B_BLANK = "B";
                // [T-Up#INFO][COACTUPC.cbl, LINE #344] WS-EDIT-PHONE-NUM-2C (level: 30)
                private @Getter @Builder.Default String wsEditPhoneNum2c = StringUtils
                        .repeat(' ', 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #345] FLG-PHONE-NUM-2C-ISVALID (level: 88)
                public static final String FLG_PHONE_NUM_2C_ISVALID = StringUtils
                        .repeat((char) 0x00, 1);
                // [T-Up#INFO][COACTUPC.cbl, LINE #346] FLG-PHONE-NUM-2C-NOT-OK (level: 88)
                public static final String FLG_PHONE_NUM_2C_NOT_OK = "0";
                // [T-Up#INFO][COACTUPC.cbl, LINE #347] FLG-PHONE-NUM-2C-BLANK (level: 88)
                public static final String FLG_PHONE_NUM_2C_BLANK = "B";

                public void setWsEditPhoneNum2aFlg(String source) {
                    wsEditPhoneNum2aFlg = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public void setWsEditPhoneNum2b(String source) {
                    wsEditPhoneNum2b = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public void setWsEditPhoneNum2c(String source) {
                    wsEditPhoneNum2c = StringUtils.truncate(
                            StringUtils.rightPad(source, 1), 1);
                }

                public static CoactupcWsEditPhoneNum2Flgs createDefaultValueInstance() {
                    return new CoactupcWsEditPhoneNum2Flgs.builder().build();
                }

                public void set(String source) {
                    source = StringUtils.truncate(
                            StringUtils.rightPad(source, 3), 3);
                    wsEditPhoneNum2aFlg = source.substring(0, 1);
                    wsEditPhoneNum2b = source.substring(1, 2);
                    wsEditPhoneNum2c = source.substring(2, 3);
                }

                public String get() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(wsEditPhoneNum2aFlg);
                    sb.append(wsEditPhoneNum2b);
                    sb.append(wsEditPhoneNum2c);
                    return sb.toString();
                }

                public void set(
                        CoactupcWsMiscStorage.CoactupcWsGenericEdits.CoactupcWsEditUsPhoneNumFlgs source) {
                    wsEditPhoneNum2aFlg = source.getWsEditUsPhoneaFlg();
                    wsEditPhoneNum2b = source.getWsEditEditUsPhoneb();
                    wsEditPhoneNum2c = source.getWsEditEditPhonec();
                }

                @Override
                public String toString() {
                    StringBuilder sb = new StringBuilder();
                    sb.append(getWsEditPhoneNum2aFlg());
                    sb.append(getWsEditPhoneNum2b());
                    sb.append(getWsEditPhoneNum2c());
                    return sb.toString();
                }
            }
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcCicsOutputEditVars {
        // [T-Up#INFO][COACTUPC.cbl, LINE #361] CUST-ACCT-ID-X (level: 10)
        private @Getter @Builder.Default String custAcctIdX = StringUtils
                .repeat(' ', 11);

        public long getCustAcctIdN() {
            try {
                return DataConverter
                        .convZonedStringToLong(getCustAcctIdX(), 11);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setCustAcctIdN(long source) {
            String temp1 = DataConverter.convZonedLongToString(source, 11);
            setCustAcctIdX(temp1);
        }

        // [T-Up#INFO][COACTUPC.cbl, LINE #364] WS-EDIT-DATE-X (level: 10)
        private @Getter @Builder.Default String wsEditDateX = StringUtils
                .repeat(' ', 10);

        public _OFFILLER13 getOFFILLER13() {
            return _OFFILLER13.builder().wsEditDateXYear(getWsEditDateXYear())
                    .OFFILLER14(getOFFILLER14())
                    .wsEditDateMonth(getWsEditDateMonth())
                    .OFFILLER15(getOFFILLER15())
                    .wsEditDateDay(getWsEditDateDay()).build();
        }

        public void setOFFILLER13(String source) {
            setWsEditDateXYear(source.substring(0, 4));
            setOFFILLER14(source.substring(4, 5));
            setWsEditDateMonth(source.substring(5, 7));
            setOFFILLER15(source.substring(7, 8));
            setWsEditDateDay(source.substring(8, 10));
        }

        public void setOFFILLER13(_OFFILLER13 source) {
            setOFFILLER13(source.toString());
        }

        public String getWsEditDateXYear() {
            return getWsEditDateX().substring(0, 4);
        }

        public void setWsEditDateXYear(String source) {
            setWsEditDateX(StringUtils.overlay(getWsEditDateX(), source, 0, 4));
        }

        public String getOFFILLER14() {
            return getWsEditDateX().substring(4, 5);
        }

        public void setOFFILLER14(String source) {
            setWsEditDateX(StringUtils.overlay(getWsEditDateX(), source, 4, 5));
        }

        public String getWsEditDateMonth() {
            return getWsEditDateX().substring(5, 7);
        }

        public void setWsEditDateMonth(String source) {
            setWsEditDateX(StringUtils.overlay(getWsEditDateX(), source, 5, 7));
        }

        public String getOFFILLER15() {
            return getWsEditDateX().substring(7, 8);
        }

        public void setOFFILLER15(String source) {
            setWsEditDateX(StringUtils.overlay(getWsEditDateX(), source, 7, 8));
        }

        public String getWsEditDateDay() {
            return getWsEditDateX().substring(8);
        }

        public void setWsEditDateDay(String source) {
            setWsEditDateX(StringUtils.overlay(getWsEditDateX(), source, 8, 10));
        }

        public long getWsEditDate9() {
            try {
                return DataConverter
                        .convZonedStringToLong(getWsEditDateX(), 10);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                return 0;
            }
        }

        public void setWsEditDate9(long source) {
            String temp1 = DataConverter.convZonedLongToString(source, 10);
            setWsEditDateX(temp1);
        }

        // [T-Up#INFO][COACTUPC.cbl, LINE #373] WS-EDIT-CURRENCY-9-2 (level: 10)
        private @Getter @Builder.Default String wsEditCurrency92 = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #374] WS-EDIT-CURRENCY-9-2-F (level: 10)
        private @Getter @Builder.Default String wsEditCurrency92F = wsEditCurrency92FFormat
                .apply(BigDecimal.ZERO);
        private final static Function<BigDecimal, String> wsEditCurrency92FFormat = (
                data) -> {
            DecimalFormat nf = new DecimalFormat();
            nf.setNegativePrefix("");
            nf.applyPattern("+###,###,###.00;-###,###,###.00");
            return StringUtils.leftPad(nf.format(data), 11, ' ');
        };

        public void setCustAcctIdX(String source) {
            custAcctIdX = StringUtils.truncate(
                    StringUtils.rightPad(source, 11), 11);
        }

        public void setWsEditDateX(String source) {
            wsEditDateX = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setWsEditCurrency92(String source) {
            wsEditCurrency92 = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setWsEditCurrency92F(BigDecimal source) {
            wsEditCurrency92F = wsEditCurrency92FFormat.apply(source);
        }

        public static CoactupcCicsOutputEditVars createDefaultValueInstance() {
            return new CoactupcCicsOutputEditVars.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 51), 51);
            custAcctIdX = source.substring(0, 11);
            wsEditDateX = source.substring(11, 21);
            wsEditCurrency92 = source.substring(21, 36);
            wsEditCurrency92F = source.substring(36, 51);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(custAcctIdX);
            sb.append(wsEditDateX);
            sb.append(wsEditCurrency92);
            sb.append(wsEditCurrency92F);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getCustAcctIdX());
            sb.append(getWsEditDateX());
            sb.append(getWsEditCurrency92());
            sb.append(getWsEditCurrency92F());
            return sb.toString();
        }

        public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class _OFFILLER13 {
            // [T-Up#INFO][COACTUPC.cbl, LINE #366] WS-EDIT-DATE-X-YEAR (level: 20)
            private @Getter @Builder.Default String wsEditDateXYear = StringUtils
                    .repeat(' ', 4);
            // [T-Up#INFO][COACTUPC.cbl, LINE #367] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER14 = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #368] WS-EDIT-DATE-MONTH (level: 20)
            private @Getter @Builder.Default String wsEditDateMonth = StringUtils
                    .repeat(' ', 2);
            // [T-Up#INFO][COACTUPC.cbl, LINE #369] FILLER (level: 20)
            private @Getter @Builder.Default String OFFILLER15 = StringUtils
                    .repeat(' ', 1);
            // [T-Up#INFO][COACTUPC.cbl, LINE #370] WS-EDIT-DATE-DAY (level: 20)
            private @Getter @Builder.Default String wsEditDateDay = StringUtils
                    .repeat(' ', 2);

            public String get() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditDateXYear);
                sb.append(OFFILLER14);
                sb.append(wsEditDateMonth);
                sb.append(OFFILLER15);
                sb.append(wsEditDateDay);
                return sb.toString();
            }

            @Override
            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append(wsEditDateXYear);
                sb.append(OFFILLER14);
                sb.append(wsEditDateMonth);
                sb.append(OFFILLER15);
                sb.append(wsEditDateDay);
                return sb.toString();
            }
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsXrefRid {
        // [T-Up#INFO][COACTUPC.cbl, LINE #380] WS-CARD-RID-CARDNUM (level: 10)
        private @Getter @Builder.Default String wsCardRidCardnum = StringUtils
                .repeat(' ', 16);
        // [T-Up#INFO][COACTUPC.cbl, LINE #381] WS-CARD-RID-CUST-ID (level: 10)
        private @Getter @Setter int wsCardRidCustId;

        public String getWsCardRidCustIdX() {
            String temp1 = DataConverter.convZonedLongToString(
                    getWsCardRidCustId(), 9);
            return temp1;
        }

        public void setWsCardRidCustIdX(String source) {
            try {
                setWsCardRidCustId((int) DataConverter.convZonedStringToLong(
                        source, 9));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidCustId(0);
            }
        }

        // [T-Up#INFO][COACTUPC.cbl, LINE #384] WS-CARD-RID-ACCT-ID (level: 10)
        private @Getter @Setter long wsCardRidAcctId;

        public String getWsCardRidAcctIdX() {
            String temp1 = DataConverter.convZonedLongToString(
                    getWsCardRidAcctId(), 11);
            return temp1;
        }

        public void setWsCardRidAcctIdX(String source) {
            try {
                setWsCardRidAcctId(DataConverter.convZonedStringToLong(source,
                        11));
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                setWsCardRidAcctId(0);
            }
        }

        public void setWsCardRidCardnum(String source) {
            wsCardRidCardnum = StringUtils.truncate(
                    StringUtils.rightPad(source, 16), 16);
        }

        public static CoactupcWsXrefRid createDefaultValueInstance() {
            return new CoactupcWsXrefRid.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 36), 36);
            wsCardRidCardnum = source.substring(0, 16);
            try {
                wsCardRidCustId = (int) DataConverter.convZonedStringToLong(
                        source.substring(16, 25), 9);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsCardRidCustId = 0;
            }
            try {
                wsCardRidAcctId = DataConverter.convZonedStringToLong(
                        source.substring(25, 36), 11);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                wsCardRidAcctId = 0;
            }
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsCardRidCardnum);
            sb.append(DataConverter.convZonedLongToString(wsCardRidCustId, 9));
            sb.append(DataConverter.convZonedLongToString(wsCardRidAcctId, 11));
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsCardRidCardnum());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) wsCardRidCustId, "000000000"));
            sb.append(PictureFormatter.intFormatWithoutSign(wsCardRidAcctId,
                    "00000000000"));
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsFileReadFlags {
        // [T-Up#INFO][COACTUPC.cbl, LINE #388] WS-ACCOUNT-MASTER-READ-FLAG (level: 10)
        private @Getter @Builder.Default String wsAccountMasterReadFlag = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #389] FOUND-ACCT-IN-MASTER (level: 88)
        public static final String FOUND_ACCT_IN_MASTER = "1";
        // [T-Up#INFO][COACTUPC.cbl, LINE #390] WS-CUST-MASTER-READ-FLAG (level: 10)
        private @Getter @Builder.Default String wsCustMasterReadFlag = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #391] FOUND-CUST-IN-MASTER (level: 88)
        public static final String FOUND_CUST_IN_MASTER = "1";

        public void setWsAccountMasterReadFlag(String source) {
            wsAccountMasterReadFlag = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setWsCustMasterReadFlag(String source) {
            wsCustMasterReadFlag = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public static CoactupcWsFileReadFlags createDefaultValueInstance() {
            return new CoactupcWsFileReadFlags.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 2), 2);
            wsAccountMasterReadFlag = source.substring(0, 1);
            wsCustMasterReadFlag = source.substring(1, 2);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(wsAccountMasterReadFlag);
            sb.append(wsCustMasterReadFlag);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getWsAccountMasterReadFlag());
            sb.append(getWsCustMasterReadFlag());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcWsFileErrorMessage {
        // [T-Up#INFO][COACTUPC.cbl, LINE #393] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER16 = "File Error: ";
        // [T-Up#INFO][COACTUPC.cbl, LINE #395] ERROR-OPNAME (level: 10)
        private @Getter @Builder.Default String errorOpname = StringUtils
                .repeat(' ', 8);
        // [T-Up#INFO][COACTUPC.cbl, LINE #397] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER17 = " on ";
        // [T-Up#INFO][COACTUPC.cbl, LINE #399] ERROR-FILE (level: 10)
        private @Getter @Builder.Default String errorFile = StringUtils.repeat(
                ' ', 9);
        // [T-Up#INFO][COACTUPC.cbl, LINE #401] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER18 = " returned RESP ";
        // [T-Up#INFO][COACTUPC.cbl, LINE #404] ERROR-RESP (level: 10)
        private @Getter @Builder.Default String errorResp = StringUtils.repeat(
                ' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #406] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER19 = ",RESP2 ";
        // [T-Up#INFO][COACTUPC.cbl, LINE #408] ERROR-RESP2 (level: 10)
        private @Getter @Builder.Default String errorResp2 = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #410] FILLER (level: 10)
        private @Getter @Builder.Default String OFFILLER20 = StringUtils
                .repeat(' ', 5);

        public void setOFFILLER16(String source) {
            OFFILLER16 = StringUtils.truncate(StringUtils.rightPad(source, 12),
                    12);
        }

        public void setErrorOpname(String source) {
            errorOpname = StringUtils.truncate(StringUtils.rightPad(source, 8),
                    8);
        }

        public void setOFFILLER17(String source) {
            OFFILLER17 = StringUtils.truncate(StringUtils.rightPad(source, 4),
                    4);
        }

        public void setErrorFile(String source) {
            errorFile = StringUtils
                    .truncate(StringUtils.rightPad(source, 9), 9);
        }

        public void setOFFILLER18(String source) {
            OFFILLER18 = StringUtils.truncate(StringUtils.rightPad(source, 15),
                    15);
        }

        public void setErrorResp(String source) {
            errorResp = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setOFFILLER19(String source) {
            OFFILLER19 = StringUtils.truncate(StringUtils.rightPad(source, 7),
                    7);
        }

        public void setErrorResp2(String source) {
            errorResp2 = StringUtils.truncate(StringUtils.rightPad(source, 10),
                    10);
        }

        public void setOFFILLER20(String source) {
            OFFILLER20 = StringUtils.truncate(StringUtils.rightPad(source, 5),
                    5);
        }

        public static CoactupcWsFileErrorMessage createDefaultValueInstance() {
            return new CoactupcWsFileErrorMessage.builder()
                    .OFFILLER16(StringUtils.repeat(' ', 12))
                    .errorOpname(StringUtils.repeat(' ', 8))
                    .OFFILLER17(StringUtils.repeat(' ', 4))
                    .errorFile(StringUtils.repeat(' ', 9))
                    .OFFILLER18(StringUtils.repeat(' ', 15))
                    .errorResp(StringUtils.repeat(' ', 10))
                    .OFFILLER19(StringUtils.repeat(' ', 7))
                    .errorResp2(StringUtils.repeat(' ', 10))
                    .OFFILLER20(StringUtils.repeat(' ', 5)).build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 80), 80);
            OFFILLER16 = source.substring(0, 12);
            errorOpname = source.substring(12, 20);
            OFFILLER17 = source.substring(20, 24);
            errorFile = source.substring(24, 33);
            OFFILLER18 = source.substring(33, 48);
            errorResp = source.substring(48, 58);
            OFFILLER19 = source.substring(58, 65);
            errorResp2 = source.substring(65, 75);
            OFFILLER20 = source.substring(75, 80);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER16);
            sb.append(errorOpname);
            sb.append(OFFILLER17);
            sb.append(errorFile);
            sb.append(OFFILLER18);
            sb.append(errorResp);
            sb.append(OFFILLER19);
            sb.append(errorResp2);
            sb.append(OFFILLER20);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(OFFILLER16);
            sb.append(getErrorOpname());
            sb.append(OFFILLER17);
            sb.append(getErrorFile());
            sb.append(OFFILLER18);
            sb.append(getErrorResp());
            sb.append(OFFILLER19);
            sb.append(getErrorResp2());
            sb.append(OFFILLER20);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcAlphaVarsForDataEditing {
        // [T-Up#INFO][COACTUPC.cbl, LINE #415] ACUP-NEW-CREDIT-LIMIT-X (level: 15)
        private @Getter @Builder.Default String acupNewCreditLimitX = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #416] ACUP-NEW-CASH-CREDIT-LIMIT-X (level: 15)
        private @Getter @Builder.Default String acupNewCashCreditLimitX = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #417] ACUP-NEW-CURR-BAL-X (level: 15)
        private @Getter @Builder.Default String acupNewCurrBalX = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #418] ACUP-NEW-CURR-CYC-CREDIT-X (level: 15)
        private @Getter @Builder.Default String acupNewCurrCycCreditX = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #419] ACUP-NEW-CURR-CYC-DEBIT-X (level: 15)
        private @Getter @Builder.Default String acupNewCurrCycDebitX = StringUtils
                .repeat(' ', 15);

        public void setAcupNewCreditLimitX(String source) {
            acupNewCreditLimitX = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setAcupNewCashCreditLimitX(String source) {
            acupNewCashCreditLimitX = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setAcupNewCurrBalX(String source) {
            acupNewCurrBalX = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setAcupNewCurrCycCreditX(String source) {
            acupNewCurrCycCreditX = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setAcupNewCurrCycDebitX(String source) {
            acupNewCurrCycDebitX = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public static CoactupcAlphaVarsForDataEditing createDefaultValueInstance() {
            return new CoactupcAlphaVarsForDataEditing.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 75), 75);
            acupNewCreditLimitX = source.substring(0, 15);
            acupNewCashCreditLimitX = source.substring(15, 30);
            acupNewCurrBalX = source.substring(30, 45);
            acupNewCurrCycCreditX = source.substring(45, 60);
            acupNewCurrCycDebitX = source.substring(60, 75);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(acupNewCreditLimitX);
            sb.append(acupNewCashCreditLimitX);
            sb.append(acupNewCurrBalX);
            sb.append(acupNewCurrCycCreditX);
            sb.append(acupNewCurrCycDebitX);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(getAcupNewCreditLimitX());
            sb.append(getAcupNewCashCreditLimitX());
            sb.append(getAcupNewCurrBalX());
            sb.append(getAcupNewCurrCycCreditX());
            sb.append(getAcupNewCurrCycDebitX());
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcAcctUpdateRecord {
        // ***************************************************************** 
        // *    Data-structure for  account entity (RECLN 300)               
        // ***************************************************************** 
        // [T-Up#INFO][COACTUPC.cbl, LINE #425] ACCT-UPDATE-ID (level: 15)
        private @Getter @Setter long acctUpdateId;
        // [T-Up#INFO][COACTUPC.cbl, LINE #426] ACCT-UPDATE-ACTIVE-STATUS (level: 15)
        private @Getter @Builder.Default String acctUpdateActiveStatus = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #427] ACCT-UPDATE-CURR-BAL (level: 15)
        private @Getter @Builder.Default BigDecimal acctUpdateCurrBal = BigDecimal.ZERO;
        // [T-Up#INFO][COACTUPC.cbl, LINE #428] ACCT-UPDATE-CREDIT-LIMIT (level: 15)
        private @Getter @Builder.Default BigDecimal acctUpdateCreditLimit = BigDecimal.ZERO;
        // [T-Up#INFO][COACTUPC.cbl, LINE #429] ACCT-UPDATE-CASH-CREDIT-LIMIT (level: 15)
        private @Getter @Builder.Default BigDecimal acctUpdateCashCreditLimit = BigDecimal.ZERO;
        // [T-Up#INFO][COACTUPC.cbl, LINE #430] ACCT-UPDATE-OPEN-DATE (level: 15)
        private @Getter @Builder.Default String acctUpdateOpenDate = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #431] ACCT-UPDATE-EXPIRAION-DATE (level: 15)
        private @Getter @Builder.Default String acctUpdateExpiraionDate = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #432] ACCT-UPDATE-REISSUE-DATE (level: 15)
        private @Getter @Builder.Default String acctUpdateReissueDate = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #433] ACCT-UPDATE-CURR-CYC-CREDIT (level: 15)
        private @Getter @Builder.Default BigDecimal acctUpdateCurrCycCredit = BigDecimal.ZERO;
        // [T-Up#INFO][COACTUPC.cbl, LINE #434] ACCT-UPDATE-CURR-CYC-DEBIT (level: 15)
        private @Getter @Builder.Default BigDecimal acctUpdateCurrCycDebit = BigDecimal.ZERO;
        // [T-Up#INFO][COACTUPC.cbl, LINE #435] ACCT-UPDATE-GROUP-ID (level: 15)
        private @Getter @Builder.Default String acctUpdateGroupId = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #436] FILLER (level: 15)
        private @Getter @Builder.Default String OFFILLER21 = StringUtils
                .repeat(' ', 188);

        public void setAcctUpdateActiveStatus(String source) {
            acctUpdateActiveStatus = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setAcctUpdateCurrBal(BigDecimal source) {
            acctUpdateCurrBal = source.setScale(2, RoundingMode.DOWN);
        }

        public void setAcctUpdateCreditLimit(BigDecimal source) {
            acctUpdateCreditLimit = source.setScale(2, RoundingMode.DOWN);
        }

        public void setAcctUpdateCashCreditLimit(BigDecimal source) {
            acctUpdateCashCreditLimit = source.setScale(2, RoundingMode.DOWN);
        }

        public void setAcctUpdateOpenDate(String source) {
            acctUpdateOpenDate = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setAcctUpdateExpiraionDate(String source) {
            acctUpdateExpiraionDate = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setAcctUpdateReissueDate(String source) {
            acctUpdateReissueDate = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setAcctUpdateCurrCycCredit(BigDecimal source) {
            acctUpdateCurrCycCredit = source.setScale(2, RoundingMode.DOWN);
        }

        public void setAcctUpdateCurrCycDebit(BigDecimal source) {
            acctUpdateCurrCycDebit = source.setScale(2, RoundingMode.DOWN);
        }

        public void setAcctUpdateGroupId(String source) {
            acctUpdateGroupId = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setOFFILLER21(String source) {
            OFFILLER21 = StringUtils.truncate(
                    StringUtils.rightPad(source, 188), 188);
        }

        public static CoactupcAcctUpdateRecord createDefaultValueInstance() {
            return new CoactupcAcctUpdateRecord.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 300),
                    300);
            try {
                acctUpdateId = DataConverter.convZonedStringToLong(
                        source.substring(0, 11), 11);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateId = 0;
            }
            acctUpdateActiveStatus = source.substring(11, 12);
            try {
                acctUpdateCurrBal = DataConverter.convZonedStringToBigDecimal(
                        source.substring(12, 24), 12, 2);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateCurrBal = BigDecimal.ZERO;
            }
            try {
                acctUpdateCreditLimit = DataConverter
                        .convZonedStringToBigDecimal(source.substring(24, 36),
                                12, 2);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateCreditLimit = BigDecimal.ZERO;
            }
            try {
                acctUpdateCashCreditLimit = DataConverter
                        .convZonedStringToBigDecimal(source.substring(36, 48),
                                12, 2);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateCashCreditLimit = BigDecimal.ZERO;
            }
            acctUpdateOpenDate = source.substring(48, 58);
            acctUpdateExpiraionDate = source.substring(58, 68);
            acctUpdateReissueDate = source.substring(68, 78);
            try {
                acctUpdateCurrCycCredit = DataConverter
                        .convZonedStringToBigDecimal(source.substring(78, 90),
                                12, 2);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateCurrCycCredit = BigDecimal.ZERO;
            }
            try {
                acctUpdateCurrCycDebit = DataConverter
                        .convZonedStringToBigDecimal(source.substring(90, 102),
                                12, 2);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                acctUpdateCurrCycDebit = BigDecimal.ZERO;
            }
            acctUpdateGroupId = source.substring(102, 112);
            OFFILLER21 = source.substring(112, 300);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(DataConverter.convZonedLongToString(acctUpdateId, 11));
            sb.append(acctUpdateActiveStatus);
            sb.append(DataConverter.convZonedBigDecimalToString(
                    acctUpdateCurrBal, 12, 2));
            sb.append(DataConverter.convZonedBigDecimalToString(
                    acctUpdateCreditLimit, 12, 2));
            sb.append(DataConverter.convZonedBigDecimalToString(
                    acctUpdateCashCreditLimit, 12, 2));
            sb.append(acctUpdateOpenDate);
            sb.append(acctUpdateExpiraionDate);
            sb.append(acctUpdateReissueDate);
            sb.append(DataConverter.convZonedBigDecimalToString(
                    acctUpdateCurrCycCredit, 12, 2));
            sb.append(DataConverter.convZonedBigDecimalToString(
                    acctUpdateCurrCycDebit, 12, 2));
            sb.append(acctUpdateGroupId);
            sb.append(OFFILLER21);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(PictureFormatter.intFormatWithoutSign(acctUpdateId,
                    "00000000000"));
            sb.append(getAcctUpdateActiveStatus());
            sb.append(PictureFormatter.decimalFormatWithSign(acctUpdateCurrBal,
                    "0000000000.00"));
            sb.append(PictureFormatter.decimalFormatWithSign(
                    acctUpdateCreditLimit, "0000000000.00"));
            sb.append(PictureFormatter.decimalFormatWithSign(
                    acctUpdateCashCreditLimit, "0000000000.00"));
            sb.append(getAcctUpdateOpenDate());
            sb.append(getAcctUpdateExpiraionDate());
            sb.append(getAcctUpdateReissueDate());
            sb.append(PictureFormatter.decimalFormatWithSign(
                    acctUpdateCurrCycCredit, "0000000000.00"));
            sb.append(PictureFormatter.decimalFormatWithSign(
                    acctUpdateCurrCycDebit, "0000000000.00"));
            sb.append(getAcctUpdateGroupId());
            sb.append(OFFILLER21);
            return sb.toString();
        }
    }

    public static @AllArgsConstructor @NoArgsConstructor @Builder(builderClassName = "builder") class CoactupcCustUpdateRecord {
        // ***************************************************************** 
        // *    Data-structure for  CUSTOMER entity (RECLN 300)              
        // ***************************************************************** 
        // [T-Up#INFO][COACTUPC.cbl, LINE #441] CUST-UPDATE-ID (level: 15)
        private @Getter @Setter int custUpdateId;
        // [T-Up#INFO][COACTUPC.cbl, LINE #442] CUST-UPDATE-FIRST-NAME (level: 15)
        private @Getter @Builder.Default String custUpdateFirstName = StringUtils
                .repeat(' ', 25);
        // [T-Up#INFO][COACTUPC.cbl, LINE #443] CUST-UPDATE-MIDDLE-NAME (level: 15)
        private @Getter @Builder.Default String custUpdateMiddleName = StringUtils
                .repeat(' ', 25);
        // [T-Up#INFO][COACTUPC.cbl, LINE #444] CUST-UPDATE-LAST-NAME (level: 15)
        private @Getter @Builder.Default String custUpdateLastName = StringUtils
                .repeat(' ', 25);
        // [T-Up#INFO][COACTUPC.cbl, LINE #445] CUST-UPDATE-ADDR-LINE-1 (level: 15)
        private @Getter @Builder.Default String custUpdateAddrLine1 = StringUtils
                .repeat(' ', 50);
        // [T-Up#INFO][COACTUPC.cbl, LINE #446] CUST-UPDATE-ADDR-LINE-2 (level: 15)
        private @Getter @Builder.Default String custUpdateAddrLine2 = StringUtils
                .repeat(' ', 50);
        // [T-Up#INFO][COACTUPC.cbl, LINE #447] CUST-UPDATE-ADDR-LINE-3 (level: 15)
        private @Getter @Builder.Default String custUpdateAddrLine3 = StringUtils
                .repeat(' ', 50);
        // [T-Up#INFO][COACTUPC.cbl, LINE #448] CUST-UPDATE-ADDR-STATE-CD (level: 15)
        private @Getter @Builder.Default String custUpdateAddrStateCd = StringUtils
                .repeat(' ', 2);
        // [T-Up#INFO][COACTUPC.cbl, LINE #449] CUST-UPDATE-ADDR-COUNTRY-CD (level: 15)
        private @Getter @Builder.Default String custUpdateAddrCountryCd = StringUtils
                .repeat(' ', 3);
        // [T-Up#INFO][COACTUPC.cbl, LINE #450] CUST-UPDATE-ADDR-ZIP (level: 15)
        private @Getter @Builder.Default String custUpdateAddrZip = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #451] CUST-UPDATE-PHONE-NUM-1 (level: 15)
        private @Getter @Builder.Default String custUpdatePhoneNum1 = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #452] CUST-UPDATE-PHONE-NUM-2 (level: 15)
        private @Getter @Builder.Default String custUpdatePhoneNum2 = StringUtils
                .repeat(' ', 15);
        // [T-Up#INFO][COACTUPC.cbl, LINE #453] CUST-UPDATE-SSN (level: 15)
        private @Getter @Setter int custUpdateSsn;
        // [T-Up#INFO][COACTUPC.cbl, LINE #454] CUST-UPDATE-GOVT-ISSUED-ID (level: 15)
        private @Getter @Builder.Default String custUpdateGovtIssuedId = StringUtils
                .repeat(' ', 20);
        // [T-Up#INFO][COACTUPC.cbl, LINE #455] CUST-UPDATE-DOB-YYYY-MM-DD (level: 15)
        private @Getter @Builder.Default String custUpdateDobYyyyMmDd = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #456] CUST-UPDATE-EFT-ACCOUNT-ID (level: 15)
        private @Getter @Builder.Default String custUpdateEftAccountId = StringUtils
                .repeat(' ', 10);
        // [T-Up#INFO][COACTUPC.cbl, LINE #457] CUST-UPDATE-PRI-CARD-IND (level: 15)
        private @Getter @Builder.Default String custUpdatePriCardInd = StringUtils
                .repeat(' ', 1);
        // [T-Up#INFO][COACTUPC.cbl, LINE #458] CUST-UPDATE-FICO-CREDIT-SCORE (level: 15)
        private @Getter @Setter int custUpdateFicoCreditScore;
        // [T-Up#INFO][COACTUPC.cbl, LINE #459] FILLER (level: 15)
        private @Getter @Builder.Default String OFFILLER22 = StringUtils
                .repeat(' ', 168);

        public void setCustUpdateFirstName(String source) {
            custUpdateFirstName = StringUtils.truncate(
                    StringUtils.rightPad(source, 25), 25);
        }

        public void setCustUpdateMiddleName(String source) {
            custUpdateMiddleName = StringUtils.truncate(
                    StringUtils.rightPad(source, 25), 25);
        }

        public void setCustUpdateLastName(String source) {
            custUpdateLastName = StringUtils.truncate(
                    StringUtils.rightPad(source, 25), 25);
        }

        public void setCustUpdateAddrLine1(String source) {
            custUpdateAddrLine1 = StringUtils.truncate(
                    StringUtils.rightPad(source, 50), 50);
        }

        public void setCustUpdateAddrLine2(String source) {
            custUpdateAddrLine2 = StringUtils.truncate(
                    StringUtils.rightPad(source, 50), 50);
        }

        public void setCustUpdateAddrLine3(String source) {
            custUpdateAddrLine3 = StringUtils.truncate(
                    StringUtils.rightPad(source, 50), 50);
        }

        public void setCustUpdateAddrStateCd(String source) {
            custUpdateAddrStateCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 2), 2);
        }

        public void setCustUpdateAddrCountryCd(String source) {
            custUpdateAddrCountryCd = StringUtils.truncate(
                    StringUtils.rightPad(source, 3), 3);
        }

        public void setCustUpdateAddrZip(String source) {
            custUpdateAddrZip = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setCustUpdatePhoneNum1(String source) {
            custUpdatePhoneNum1 = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setCustUpdatePhoneNum2(String source) {
            custUpdatePhoneNum2 = StringUtils.truncate(
                    StringUtils.rightPad(source, 15), 15);
        }

        public void setCustUpdateGovtIssuedId(String source) {
            custUpdateGovtIssuedId = StringUtils.truncate(
                    StringUtils.rightPad(source, 20), 20);
        }

        public void setCustUpdateDobYyyyMmDd(String source) {
            custUpdateDobYyyyMmDd = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setCustUpdateEftAccountId(String source) {
            custUpdateEftAccountId = StringUtils.truncate(
                    StringUtils.rightPad(source, 10), 10);
        }

        public void setCustUpdatePriCardInd(String source) {
            custUpdatePriCardInd = StringUtils.truncate(
                    StringUtils.rightPad(source, 1), 1);
        }

        public void setOFFILLER22(String source) {
            OFFILLER22 = StringUtils.truncate(
                    StringUtils.rightPad(source, 168), 168);
        }

        public static CoactupcCustUpdateRecord createDefaultValueInstance() {
            return new CoactupcCustUpdateRecord.builder().build();
        }

        public void set(String source) {
            source = StringUtils.truncate(StringUtils.rightPad(source, 500),
                    500);
            try {
                custUpdateId = (int) DataConverter.convZonedStringToLong(
                        source.substring(0, 9), 9);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                custUpdateId = 0;
            }
            custUpdateFirstName = source.substring(9, 34);
            custUpdateMiddleName = source.substring(34, 59);
            custUpdateLastName = source.substring(59, 84);
            custUpdateAddrLine1 = source.substring(84, 134);
            custUpdateAddrLine2 = source.substring(134, 184);
            custUpdateAddrLine3 = source.substring(184, 234);
            custUpdateAddrStateCd = source.substring(234, 236);
            custUpdateAddrCountryCd = source.substring(236, 239);
            custUpdateAddrZip = source.substring(239, 249);
            custUpdatePhoneNum1 = source.substring(249, 264);
            custUpdatePhoneNum2 = source.substring(264, 279);
            try {
                custUpdateSsn = (int) DataConverter.convZonedStringToLong(
                        source.substring(279, 288), 9);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                custUpdateSsn = 0;
            }
            custUpdateGovtIssuedId = source.substring(288, 308);
            custUpdateDobYyyyMmDd = source.substring(308, 318);
            custUpdateEftAccountId = source.substring(318, 328);
            custUpdatePriCardInd = source.substring(328, 329);
            try {
                custUpdateFicoCreditScore = (int) DataConverter
                        .convZonedStringToLong(source.substring(329, 332), 3);
            } catch (NumberFormatException exception) {
                exception.printStackTrace();
                custUpdateFicoCreditScore = 0;
            }
            OFFILLER22 = source.substring(332, 500);
        }

        public String get() {
            StringBuilder sb = new StringBuilder();
            sb.append(DataConverter.convZonedLongToString(custUpdateId, 9));
            sb.append(custUpdateFirstName);
            sb.append(custUpdateMiddleName);
            sb.append(custUpdateLastName);
            sb.append(custUpdateAddrLine1);
            sb.append(custUpdateAddrLine2);
            sb.append(custUpdateAddrLine3);
            sb.append(custUpdateAddrStateCd);
            sb.append(custUpdateAddrCountryCd);
            sb.append(custUpdateAddrZip);
            sb.append(custUpdatePhoneNum1);
            sb.append(custUpdatePhoneNum2);
            sb.append(DataConverter.convZonedLongToString(custUpdateSsn, 9));
            sb.append(custUpdateGovtIssuedId);
            sb.append(custUpdateDobYyyyMmDd);
            sb.append(custUpdateEftAccountId);
            sb.append(custUpdatePriCardInd);
            sb.append(DataConverter.convZonedLongToString(
                    custUpdateFicoCreditScore, 3));
            sb.append(OFFILLER22);
            return sb.toString();
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) custUpdateId, "000000000"));
            sb.append(getCustUpdateFirstName());
            sb.append(getCustUpdateMiddleName());
            sb.append(getCustUpdateLastName());
            sb.append(getCustUpdateAddrLine1());
            sb.append(getCustUpdateAddrLine2());
            sb.append(getCustUpdateAddrLine3());
            sb.append(getCustUpdateAddrStateCd());
            sb.append(getCustUpdateAddrCountryCd());
            sb.append(getCustUpdateAddrZip());
            sb.append(getCustUpdatePhoneNum1());
            sb.append(getCustUpdatePhoneNum2());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) custUpdateSsn, "000000000"));
            sb.append(getCustUpdateGovtIssuedId());
            sb.append(getCustUpdateDobYyyyMmDd());
            sb.append(getCustUpdateEftAccountId());
            sb.append(getCustUpdatePriCardInd());
            sb.append(PictureFormatter.intFormatWithoutSign(
                    (long) custUpdateFicoCreditScore, "000"));
            sb.append(OFFILLER22);
            return sb.toString();
        }
    }
}
