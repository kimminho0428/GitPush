package aws.carddemo.mapper;

import com.tmax.openframe.DataConverter;
import org.apache.commons.lang3.StringUtils;
import org.mapstruct.*;
import org.mapstruct.factory.*;
import aws.carddemo.variable.group.CocrdslcCarddemoCommarea;
import aws.carddemo.variable.group.Comen01cDfhcommarea;
import aws.carddemo.variable.group.CocrdslcCardRecord;
import aws.carddemo.dto.AwsM2CarddemoCarddataVsamKsdsDto;
import aws.carddemo.variable.group.CocrdlicDfhcommarea;
import lombok.*;
import java.math.*;
import java.util.*;

/** 
 * <p>This source code was generated by T-Up OpenFrame COBOL to Java migrator</p>
 * <p>  Generation date : 2024/05/02 05:57:42 UTC</p>
 * <hr>
 * <p>Mapper class for converting data between different classes</p>
 */
public interface CocrdslcMapperInterface {
    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CocrdslcCarddemoCommarea}</li>
     * <li>target class: {@link Comen01cDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface CocrdslcCarddemoCommareaToComen01cDfhcommarea {
        CocrdslcCarddemoCommareaToComen01cDfhcommarea INSTANCE = Mappers
                .getMapper(CocrdslcCarddemoCommareaToComen01cDfhcommarea.class);

        Comen01cDfhcommarea toTarget(CocrdslcCarddemoCommarea source);

        CocrdslcCarddemoCommarea toSource(Comen01cDfhcommarea source);

        @AfterMapping
        default void makeTarget(CocrdslcCarddemoCommarea source,
                @MappingTarget Comen01cDfhcommarea target) {
            target.setLkCommarea(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset());
        }

        @AfterMapping
        default void makeSource(Comen01cDfhcommarea source,
                @MappingTarget CocrdslcCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    source.getLkCommarea().substring(0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    source.getLkCommarea().substring(4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    source.getLkCommarea().substring(12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    source.getLkCommarea().substring(16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    source.getLkCommarea().substring(24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    source.getLkCommarea().substring(32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getLkCommarea().substring(34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    source.getLkCommarea().substring(43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    source.getLkCommarea().substring(68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    source.getLkCommarea().substring(93, 118));
            target.getCdemoAccountInfo().setCdemoAcctId(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(118, 129), 11));
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    source.getLkCommarea().substring(129, 130));
            target.getCdemoCardInfo().setCdemoCardNum(
                    DataConverter.convZonedStringToLong(source.getLkCommarea()
                            .substring(130, 146), 16));
            target.getCdemoMoreInfo().setCdemoLastMap(
                    source.getLkCommarea().substring(146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    source.getLkCommarea().substring(153, 160));
        }
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CocrdslcCardRecord}</li>
     * <li>target class: {@link AwsM2CarddemoCarddataVsamKsdsDto}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface CocrdslcCardRecordToAwsM2CarddemoCarddataVsamKsdsDto {
        CocrdslcCardRecordToAwsM2CarddemoCarddataVsamKsdsDto INSTANCE = Mappers
                .getMapper(CocrdslcCardRecordToAwsM2CarddemoCarddataVsamKsdsDto.class);

        @Mapping(source = "cardNum", target = "cardNum")
        @Mapping(source = "cardAcctId", target = "cardAcctId")
        @Mapping(source = "cardCvvCd", target = "cardCvvCd")
        @Mapping(source = "cardEmbossedName", target = "cardEmbossedName")
        @Mapping(source = "cardExpiraionDate", target = "cardExpiraionDate")
        @Mapping(source = "cardActiveStatus", target = "cardActiveStatus")
        @Mapping(source = "OFFILLER1", target = "filler")
        AwsM2CarddemoCarddataVsamKsdsDto toTarget(CocrdslcCardRecord source);

        @Mapping(source = "cardNum", target = "cardNum")
        @Mapping(source = "cardAcctId", target = "cardAcctId")
        @Mapping(source = "cardCvvCd", target = "cardCvvCd")
        @Mapping(source = "cardEmbossedName", target = "cardEmbossedName")
        @Mapping(source = "cardExpiraionDate", target = "cardExpiraionDate")
        @Mapping(source = "cardActiveStatus", target = "cardActiveStatus")
        @Mapping(source = "filler", target = "OFFILLER1")
        CocrdslcCardRecord toSource(AwsM2CarddemoCarddataVsamKsdsDto source);
    }

    /** 
     * <p>Mapper class to convert data for CICS processing</p>
     * <ul>
     * <li>source class: {@link CocrdslcCarddemoCommarea}</li>
     * <li>target class: {@link CocrdlicDfhcommarea}</li>
     * </ul>
     */
    @Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)
    public interface CocrdslcCarddemoCommareaToCocrdlicDfhcommarea {
        CocrdslcCarddemoCommareaToCocrdlicDfhcommarea INSTANCE = Mappers
                .getMapper(CocrdslcCarddemoCommareaToCocrdlicDfhcommarea.class);

        CocrdlicDfhcommarea toTarget(CocrdslcCarddemoCommarea source);

        CocrdslcCarddemoCommarea toSource(CocrdlicDfhcommarea source);

        @AfterMapping
        default void makeTarget(CocrdslcCarddemoCommarea source,
                @MappingTarget CocrdlicDfhcommarea target) {
            target.setOFFILLER1(source.getCdemoGeneralInfo()
                    .getCdemoFromTranid()
                    + source.getCdemoGeneralInfo().getCdemoFromProgram()
                    + source.getCdemoGeneralInfo().getCdemoToTranid()
                    + source.getCdemoGeneralInfo().getCdemoToProgram()
                    + source.getCdemoGeneralInfo().getCdemoUserId()
                    + source.getCdemoGeneralInfo().getCdemoUserType()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoGeneralInfo().getCdemoPgmContext(), 1)
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCustomerInfo().getCdemoCustId(), 9)
                    + source.getCdemoCustomerInfo().getCdemoCustFname()
                    + source.getCdemoCustomerInfo().getCdemoCustMname()
                    + source.getCdemoCustomerInfo().getCdemoCustLname()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoAccountInfo().getCdemoAcctId(), 11)
                    + source.getCdemoAccountInfo().getCdemoAcctStatus()
                    + DataConverter.convZonedLongToString(source
                            .getCdemoCardInfo().getCdemoCardNum(), 16)
                    + source.getCdemoMoreInfo().getCdemoLastMap()
                    + source.getCdemoMoreInfo().getCdemoLastMapset());
        }

        @AfterMapping
        default void makeSource(CocrdlicDfhcommarea source,
                @MappingTarget CocrdslcCarddemoCommarea target) {
            target.getCdemoGeneralInfo().setCdemoFromTranid(
                    source.getOFFILLER1().substring(0, 4));
            target.getCdemoGeneralInfo().setCdemoFromProgram(
                    source.getOFFILLER1().substring(4, 12));
            target.getCdemoGeneralInfo().setCdemoToTranid(
                    source.getOFFILLER1().substring(12, 16));
            target.getCdemoGeneralInfo().setCdemoToProgram(
                    source.getOFFILLER1().substring(16, 24));
            target.getCdemoGeneralInfo().setCdemoUserId(
                    source.getOFFILLER1().substring(24, 32));
            target.getCdemoGeneralInfo().setCdemoUserType(
                    source.getOFFILLER1().substring(32, 33));
            target.getCdemoGeneralInfo().setCdemoPgmContext(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getOFFILLER1().substring(33, 34), 1)));
            target.getCdemoCustomerInfo().setCdemoCustId(
                    ((int) DataConverter.convZonedStringToLong(source
                            .getOFFILLER1().substring(34, 43), 9)));
            target.getCdemoCustomerInfo().setCdemoCustFname(
                    source.getOFFILLER1().substring(43, 68));
            target.getCdemoCustomerInfo().setCdemoCustMname(
                    source.getOFFILLER1().substring(68, 93));
            target.getCdemoCustomerInfo().setCdemoCustLname(
                    source.getOFFILLER1().substring(93, 118));
            target.getCdemoAccountInfo().setCdemoAcctId(
                    DataConverter.convZonedStringToLong(source.getOFFILLER1()
                            .substring(118, 129), 11));
            target.getCdemoAccountInfo().setCdemoAcctStatus(
                    source.getOFFILLER1().substring(129, 130));
            target.getCdemoCardInfo().setCdemoCardNum(
                    DataConverter.convZonedStringToLong(source.getOFFILLER1()
                            .substring(130, 146), 16));
            target.getCdemoMoreInfo().setCdemoLastMap(
                    source.getOFFILLER1().substring(146, 153));
            target.getCdemoMoreInfo().setCdemoLastMapset(
                    source.getOFFILLER1().substring(153, 160));
        }
    }
}
